bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
2	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
4	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
6	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
7	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(this);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext  =  _writeContext.createChildArrayContext(this);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
8	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildObjectContext();  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext  =  _writeContext.createChildObjectContext();	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
9	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(true);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext  =  _writeContext.createChildArrayContext(true);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
10	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
11	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd  ||  _outputTail  >>  _outputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd  ||  _outputTail  >>  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    if(_outputTail  >=  _outputEnd  ||  _outputTail  >>  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
12	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >>  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >>  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    if(_outputTail  >>  _outputEnd  ||  _outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
13	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail!=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail!=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    if(_outputTail!=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
14	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  ==  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  ==  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    if(_outputTail  ==  _outputEnd  ||  _outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
15	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.write(_outputBuffer,  _outputTail  +  1);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.write(_outputBuffer,  _outputTail  +  1);	  _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
16	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail++);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.write(_outputBuffer,  _outputTail++);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.write(_outputBuffer,  _outputTail++);	  _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
17	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.write(_outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.write(_outputBuffer,  _outputTail  +  1,  _outputHead);	  _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
18	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
19	[BUG]  [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  ==  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
20	[BUG]  [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	2	None	replace
21	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  <  _outputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    <    _outputEnd)    {    if(_outputTail  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
22	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    <    _outputEnd)    {    if(_outputTail  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
23	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd)  {  If(_outputTail  <  _outputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd)  {  If(_outputTail  <  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    <    _outputEnd)    {    If(_outputTail  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	22	None	add
24	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputBuffer);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.writeStartArray(this,  _outputBuffer);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.writeStartArray(this,  _outputBuffer);	  _writer.writeStartArray(this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
25	[BUG]  [BUGGY]  _writer.writeEndArray(this);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.writeEndArray(this);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.writeEndArray(this);	  _writer.writeStartArray(this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
26	[BUG]  [BUGGY]  If(_outputTail  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  If(_outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	If(_outputTail  >=  _outputEnd)  {	  if(_outputTail    ==    _outputEnd)    {    If(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
27	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	||(_outputTail  >=  _outputEnd))  {	  if(_outputTail    ==    _outputEnd)    {    If(_outputTail    ==    _outputEnd)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  >=  _outputEnd  &&  _outputTail  >=  _outputEnd)  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
29	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputTail  >=  _outputEnd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputTail  >=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >=  _outputEnd  &&  _outputTail  >=  _outputEnd)  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
30	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {	  	non-compiled	[CE]  ';'  expected	3	None	add
31	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {	  	non-compiled	[CE]  ';'  expected	3	None	add
32	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {	  	non-compiled	[CE]  ';'  expected	3	None	add
33	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {	  	non-compiled	[CE]  ';'  expected	3	None	add
34	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {	  	non-compiled	[CE]  ';'  expected	3	None	add
35	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {	  	non-compiled	[CE]  ';'  expected	1	None	add
36	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    if(_outputTail  >>  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {	  	non-compiled	[CE]  ';'  expected	1	None	add
37	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    if(_outputTail!=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {	  	non-compiled	[CE]  ';'  expected	1	None	add
38	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  '[')  {	  	non-compiled	[CE]  ';'  expected	1	None	add
39	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    if(_outputTail  ==  _outputEnd  ||  _outputBuffer[_outputTail++]!=  '[')  {	  	non-compiled	[CE]  ';'  expected	1	None	add
40	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.write(_outputBuffer,  0,  _outputTail  +  1);	  _writer.write(_outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
41	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1,  _outputHead);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1,  _outputHead);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.write(_outputBuffer,  0,  _outputTail  +  1,  _outputHead);	  _writer.write(_outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
42	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1,  _outputEnd);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail  +  1,  _outputEnd);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.write(_outputBuffer,  0,  _outputTail  +  1,  _outputEnd);	  _writer.write(_outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
43	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext.writeStartArray(this,  _outputBuffer);	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
44	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer,  _outputTail);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext.writeStartArray(this,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext.writeStartArray(this,  _outputBuffer,  _outputTail);	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
45	[BUG]  [BUGGY]  _writeContext.writeEndArray(this);  [CE]  class,  interface,  or  enum  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext.writeEndArray(this);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext.writeEndArray(this);	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
46	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.writeStartArray(this,  _outputBuffer,  _outputTail  +  1);	  _writer.writeStartArray(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
47	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail++);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail++);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.writeStartArray(this,  _outputBuffer,  _outputTail++);	  _writer.writeStartArray(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
48	[BUG]  [BUGGY]  _writer.writeEndArray(this,  _outputBuffer,  _outputTail);  [CE]  class,  interface,  or  enum  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.writeEndArray(this,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.writeEndArray(this,  _outputBuffer,  _outputTail);	  _writer.writeStartArray(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
49	[BUG]  [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail);  [CE]  class,  interface,  or  enum  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.write(this,  _outputBuffer,  _outputTail);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.write(this,  _outputBuffer,  _outputTail);	  _writer.write(_outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
50	[BUG]  [BUGGY]  _writeContext.writeStartArray(this,  _outputTail);  [CE]  class,  interface,  or  enum  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext.writeStartArray(this,  _outputTail);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext.writeStartArray(this,  _outputTail);	  _writeContext.writeStartArray(this);    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
51	[BUG]  [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  class,  interface,  or  enum  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writer.writeStartArray(this,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writer.writeStartArray(this,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  _writer.writeStartArray(this,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
52	[BUG]  [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	4	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
54	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	1	replace
55	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(-1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(-1);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext  =  _writeContext.createChildArrayContext(-1);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
57	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]!=  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]!=    '[')    {    	compilable	  [FE]  AssertionFailedError  	2	2	replace
58	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd  ||  _outputTail  ==  _outputEnd)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd  ||  _outputTail  ==  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    if(_outputTail  >=  _outputEnd  ||  _outputTail  ==  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	18	None	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
60	[BUG]  [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail++]  ==  '[')  {	  if(_outputTail    >=    _outputEnd    ||    _outputBuffer[_outputTail++]    ==    '[')    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  _outputEnd)  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
62	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  _outputEnd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  _outputEnd)  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]!=  _outputEnd)  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	add	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
64	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >=  _outputEnd  ||  _outputBuffer[_outputTail++]  ==  ']')  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	compilable	  [FE]  AssertionFailedError  	19	2	replace
65	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ')  {  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ')  {  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	if(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail++]!=  ')  {	  if(_outputTail    >=    _outputEnd    ||    _outputTail    >=    _outputEnd)    {    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
66	[BUG]  [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(-1,  -1);  [CE]  class,  interface,  or  enum  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeStartArray()  throws  IOException,  JsonGenerationException  {  _verifyValueWrite(     "start  an  array     ");  _writeContext  =  _writeContext.createChildArrayContext();  if  (_cfgPrettyPrinter  !=  null)  {  _cfgPrettyPrinter.writeStartArray(this);  }  else  {      [BUGGY]  _writeContext  =  _writeContext.createChildArrayContext(-1,  -1);  [BUGGY]      _flushBuffer();  }  _outputBuffer[_outputTail++]  =  '[';  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeStartArray  [RETURN_TYPE]  void  [VARIABLES]  SerializableString  _currentEscape  name  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  qlen  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	205	205	1	replace	_writeContext  =  _writeContext.createChildArrayContext(-1,  -1);	  _writeContext    =    _writeContext.createChildArrayContext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
