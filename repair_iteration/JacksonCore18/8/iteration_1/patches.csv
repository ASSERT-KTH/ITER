bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (len  >  0)  {  while  (len  >  0)  {  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  while  (len  >  0)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    while  (len  >  0)  {	  	non-compiled	[CE]  ';'  expected	4	None	add
2	[BUG]  [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	4	None	add
3	[BUG]  [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	4	None	add
4	[BUG]  [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	4	None	add
5	[BUG]  [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	4	None	add
6	[BUG]  [BUGGY]  while(len  >  room)  {  while(len  >  room)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  while(len  >  room)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    while(len  >  room)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
7	[BUG]  [BUGGY]  while(len  >  room)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	9	None	add
8	[BUG]  [BUGGY]  while(len  >  room)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  	non-compiled	[CE]  ';'  expected	9	None	add
9	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  text.length();  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  int  len  =  text.length();  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    int  len  =  text.length();	  	non-compiled	[CE]  ';'  expected	9	None	add
10	[BUG]  [BUGGY]  while(len  >  room)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }	  	non-compiled	[CE]  ';'  expected	9	None	add
11	[BUG]  [BUGGY]  _writer.write(text);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  _writer.write(text);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  int  len  =  text.length();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  int  len  =  text.length();  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  len  =  text.length();	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
13	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  _writer.write(text,  0,  len);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  0,  len);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
14	[BUG]  [BUGGY]  _writer.writeRawLong(text);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  _writer.writeRawLong(text);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.writeRawLong(text);	      	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(offset  <  _outputEnd)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(offset  <  _outputEnd)  {	  while(len    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
16	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(offset  <  _outputEnd)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset  <  _outputEnd)  {	  while(len    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
17	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  room)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  room)  {	  while(len    >    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	1	replace
18	[BUG]  [BUGGY]  while(len  <  room)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  room)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {	  while(len    >    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
20	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
21	[BUG]  [BUGGY]  while(len  <  =  room)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  =  room)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  =  room)  {	  while(len    >    room)    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  while  (len  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  =  0)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while  (len  <  =  0)  {	  while    (len    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  while  (len  <  SHORT_WRITE)  {  while  (len  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  SHORT_WRITE)  {  while  (len  <  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    <    SHORT_WRITE)    {    while  (len  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	2	None	add
24	[BUG]  [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    <    SHORT_WRITE)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	2	None	add
25	[BUG]  [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    <    SHORT_WRITE)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	2	None	add
26	[BUG]  [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    <    SHORT_WRITE)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	2	None	add
27	[BUG]  [BUGGY]  while(len  <  _outputEnd)  {  while(len  <  _outputEnd)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  _outputEnd)  {  while(len  <  _outputEnd)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    _outputEnd)    {    while(len  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
28	[BUG]  [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    _outputEnd)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	7	None	add
29	[BUG]  [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    _outputEnd)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	7	None	add
30	[BUG]  [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    _outputEnd)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	7	None	add
31	[BUG]  [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    _outputEnd)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	7	None	add
32	[BUG]  [BUGGY]  while  (len  <  =  SHORT_WRITE)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  =  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while  (len  <  =  SHORT_WRITE)  {	  while    (len    <    SHORT_WRITE)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while  (len  >  SHORT_WRITE)  {	  while    (len    <    SHORT_WRITE)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	replace
34	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  [FE]  StringIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while  (len  >  SHORT_WRITE)  {	  while    (len    <    SHORT_WRITE)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	replace
35	[BUG]  [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    _outputEnd)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	7	None	add
36	[BUG]  [BUGGY]  while(len  >  _outputMaxContiguous)  {  [CE]  cannot  find  symbol  _outputMaxContiguous  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  _outputMaxContiguous)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  _outputMaxContiguous)  {	  while(len    >    room)    {    	non-compiled	[CE]  cannot  find  symbol  _outputMaxContiguous	10	None	replace
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  0)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  0)  {	  while    (len    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	replace
38	[BUG]  [BUGGY]  while(len  <  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  0)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  0)  {	  while    (len    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	replace
39	[BUG]  [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  len  =  text.length();  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  len  =  text.length();  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    <    SHORT_WRITE)    {    int  len  =  text.length();	  	non-compiled	[CE]  ';'  expected	2	None	add
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
41	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
42	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
43	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
44	[BUG]  [BUGGY]  while  (len  >  0)  {  int  len  =  text.length();  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  len  =  text.length();  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  len  =  text.length();	  	non-compiled	[CE]  ';'  expected	4	None	add
45	[BUG]  [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	4	None	add
46	[BUG]  [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	4	None	add
47	[BUG]  [BUGGY]  while(len  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	9	None	add
48	[BUG]  [BUGGY]  while(len  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	9	None	add
49	[BUG]  [BUGGY]  while(len  >  room)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	9	None	add
50	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  room  &&  len  <  SHORT_WRITE)  {	  while(len    >    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	1	replace
51	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  len  <  SHORT_WRITE)  {	  while(len    >    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	10	1	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  while(len    >    room)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
53	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  while(len    >    room)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
54	[BUG]  [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    _outputEnd)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	7	None	add
55	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  >  room)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  int  len  >  room)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    int  len  >  room)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
56	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  text.length()  -  room;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  int  len  =  text.length()  -  room;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    int  len  =  text.length()  -  room;	  	non-compiled	[CE]  ';'  expected	9	None	add
57	[BUG]  [BUGGY]  while(len  >  room)  {  While(len  >  room)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while(len  >  room)  {  While(len  >  room)  {  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room)    {    While(len  >  room)  {	  	non-compiled	[CE]  ';'  expected	9	None	add
58	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
59	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
61	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
62	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
63	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	1	replace
64	[BUG]  [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    0)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	4	None	add
65	[BUG]  [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    <    SHORT_WRITE)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	2	None	add
66	[BUG]  [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;    [BUGGY]  while  (len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    <    SHORT_WRITE)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	2	None	add
