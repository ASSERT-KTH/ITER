bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _outputTail  =  len;  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputTail  =  len;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputTail  =  len;	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
2	[BUG]  [BUGGY]  _outputTail  +=  len;  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputTail  +=  len;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputTail  +=  len;	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
3	[BUG]  [BUGGY]  _outputHead  =  len;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputHead  =  len;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputHead  =  len;	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
4	[BUG]  [BUGGY]  _flushBuffer();  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _flushBuffer();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_flushBuffer();	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
5	[BUG]  [BUGGY]  while(len  <  room)  {  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  int  len  =  text.length()  -  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {  int  len  =  text.length()  -  room;	  while(len    >    room)    {    int    len    =    text.length()    -    room;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	56	None	replace
6	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  =  text.length()  -  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  int  len  =  text.length()  -  room;	  while(len    >    room)    {    int    len    =    text.length()    -    room;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	56	None	replace
7	[BUG]  [BUGGY]  int  len  =  text.length()  -  room;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  len  =  text.length()  -  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  len  =  text.length()  -  room;	  while(len    >    room)    {    int    len    =    text.length()    -    room;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
8	[BUG]  [BUGGY]  while(len  >  0)  {  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  len  =  text.length()  -  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  len  =  text.length()  -  room;	  while(len    >    room)    {    int    len    =    text.length()    -    room;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	56	None	replace
9	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  ';'  expected	40	None	add
10	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ".);  }	  	non-compiled	[CE]  <identifier>  expected	40	None	add
11	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
12	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
13	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  If(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  If(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    If(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
14	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    if(len  >  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
15	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  while  (len  >  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  while  (len  >  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    SHORT_WRITE)    {    while  (len  >  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
16	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    SHORT_WRITE)    {    if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	33	None	add
17	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output  [CE]  not  a  statement  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    SHORT_WRITE)    {    if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output	  	non-compiled	[CE]  not  a  statement	33	None	add
18	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    SHORT_WRITE)    {    if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	33	None	add
19	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  len;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    SHORT_WRITE)    {    if(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  len;  }	  	non-compiled	[CE]  ';'  expected	33	None	add
20	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  =  SHORT_WRITE)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  =  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  len  <  =  SHORT_WRITE)  {	  while(len    >    room    &&    len    <    SHORT_WRITE)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  SHORT_WRITE  &&  len  <  SHORT_WRITE)  {	  while(len    >    room    &&    len    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
22	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE  &&  len  <  SHORT_WRITE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE  &&  len  <  SHORT_WRITE)  {	  while(len    >    room    &&    len    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
23	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0  &&  len  <  SHORT_WRITE)  {	  while(len    >    room    &&    len    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
24	[BUG]  [BUGGY]  while(len  >  0  &&  len  <  SHORT_WRITE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0  &&  len  <  SHORT_WRITE)  {	  while(len    >    room    &&    len    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
25	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
26	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
27	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
28	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
29	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(_outputBuffer,  offset,  len);	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
30	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset  +  len,  _outputTail);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(_outputBuffer,  offset  +  len,  _outputTail);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(_outputBuffer,  offset  +  len,  _outputTail);	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
31	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  len);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(_outputBuffer,  0,  len);	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
32	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  =  text.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  =  text.length()  +  1;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  int  len  =  text.length()  +  1;	  while    (len    <    SHORT_WRITE)    {    int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	39	None	replace
33	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  int  len  =  text.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while  (len  >  SHORT_WRITE)  {  int  len  =  text.length();	  while    (len    <    SHORT_WRITE)    {    int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	39	None	replace
34	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  alpha  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  alpha	64	None	replace
35	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
36	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	64	None	replace
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	replace
38	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	replace
39	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >=  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >=  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
40	[BUG]  [BUGGY]  while(len  >=  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >=  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >=  SHORT_WRITE  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
41	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
42	[BUG]  [BUGGY]  while(len  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
43	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	1	replace
44	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	1	replace
45	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	1	replace
46	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	1	replace
47	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	1	replace
48	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	41	1	replace
49	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
50	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
51	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
52	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	42	None	add
53	[BUG]  [BUGGY]  _outputHead  =  _outputTail  +  len;  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputHead  =  _outputTail  +  len;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputHead  =  _outputTail  +  len;	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
54	[BUG]  [BUGGY]  _outputHead  =  _outputBuffer.length();  [CE]  <identifier>  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputHead  =  _outputBuffer.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputHead  =  _outputBuffer.length();	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
55	[BUG]  [BUGGY]  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputHead  =  0;	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
57	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >=  _outputMaxContiguous)  {  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >=  _outputMaxContiguous)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >=  _outputMaxContiguous)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
58	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	7	None	replace
59	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputTail)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  _outputTail)  {	  while(len    >    room)    {    while(len    >    room)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
60	[BUG]  [BUGGY]  while(len  >  _outputTail)  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputTail)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  _outputTail)  {	  while(len    >    room)    {    while(len    >    room)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
61	[BUG]  [BUGGY]  while(_outputTail  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alpha  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(_outputTail  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(_outputTail  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alpha	4	None	replace
62	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
63	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	replace
64	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	replace
65	[BUG]  [BUGGY]  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	timeout	30	1	replace
66	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  timeout  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	timeout	30	1	replace
67	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  _outputHead  =  0;  }  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	30	None	replace
68	[BUG]  [BUGGY]  if(len  >  0)  {  while(len  <  _outputEnd)  {  _outputBuffer.write(_outputTail,  offset+len,  _outputEnd);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(len  <  _outputEnd)  {  _outputBuffer.write(_outputTail,  offset+len,  _outputEnd);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(len  <  _outputEnd)  {  _outputBuffer.write(_outputTail,  offset+len,  _outputEnd);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
69	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  while(len  >  room  &&  len  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  while(len  >  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    while(len  >  room  &&  len  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
70	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  int  len  >  room  &&  len  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  int  len  >  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    int  len  >  room  &&  len  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
71	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  while(len  >  space  &&  len  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  while(len  >  space  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    while(len  >  space  &&  len  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
72	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  while(len  >  room  &&  len  >=  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  while(len  >  room  &&  len  >=  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    while(len  >  room  &&  len  >=  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
73	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  While(len  >  room  &&  len  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  While(len  >  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    While(len  >  room  &&  len  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
74	[BUG]  [BUGGY]  int  len  =  text.length()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  len  =  text.length()  +  1;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  len  =  text.length()  +  1;	  int    len    =    text.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
75	[BUG]  [BUGGY]  int  len  =  text.length()  +  room;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  len  =  text.length()  +  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  len  =  text.length()  +  room;	  int    len    =    text.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
76	[BUG]  [BUGGY]  int  len  =  text.length()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  len  =  text.length()  -  1;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  len  =  text.length()  -  1;	  int    len    =    text.length();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
77	[BUG]  [BUGGY]  while(len  <  room)  {  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  int  len  =  text.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {  int  len  =  text.length();	  while(len    >    room)    {    int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	9	None	replace
78	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  while(len    >    room)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
79	[BUG]  [BUGGY]  if(len  >  room)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  while(len    >    room)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	48	None	replace
80	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	60	None	add
81	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	60	None	add
82	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	60	None	add
83	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  ==  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead  ==  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	60	None	add
84	[BUG]  [BUGGY]  while(len  >  0)  {  int  len  =  text.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  len  =  text.length()  +  1;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  len  =  text.length()  +  1;	  while    (len    >    0)    {    int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	44	None	replace
85	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  0,  len  +  1);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
86	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputTail);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  0,  len,  _outputTail);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  0,  len,  _outputTail);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
87	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  0,  len,  _outputBuffer);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
88	[BUG]  [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	35	None	replace
89	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	35	None	replace
90	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputTail  =  _outputEnd;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputTail  =  _outputEnd;	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
91	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
92	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
93	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
94	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }  [FE]  StringIndexOutOfBoundsException  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
95	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  _outputStart  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  _outputStart	45	None	replace
96	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
97	[BUG]  [BUGGY]  int  amount  =  _outputStart;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputStart;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputStart;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
98	[BUG]  [BUGGY]  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	45	None	replace
99	[BUG]  [BUGGY]  int  amount  =  _outputStart;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputStart;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputStart;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
100	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  _outputStart  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  _outputStart	46	None	replace
101	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  0)  {  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  0)  {  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  >  0)  {  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	46	None	replace
102	[BUG]  [BUGGY]  while(len  <  =  room  &&  len  <  SHORT_WRITE)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  =  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  =  room  &&  len  <  SHORT_WRITE)  {	  while(len    <    =    room)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
103	[BUG]  [BUGGY]  while(len  <  =  room  &&  room  <  SHORT_WRITE)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  =  room  &&  room  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  =  room  &&  room  <  SHORT_WRITE)  {	  while(len    <    =    room)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
104	[BUG]  [BUGGY]  _writer.write(text,  offset+len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  offset+len);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  offset+len);	  _writer.write(text);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
105	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputHead)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  _outputHead)  {	  while(len    >    _outputMaxContiguous)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
106	[BUG]  [BUGGY]  while(len  >  _outputHead)  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputHead)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  _outputHead)  {	  while(len    >    _outputMaxContiguous)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	replace
107	[BUG]  [BUGGY]  while(len  <  room)  {  int  len  >  room)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  int  len  >  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {  int  len  >  room)  {	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
108	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room)  {  int  len  =  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room)  {  int  len  =  room;	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	55	None	replace
109	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  room.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room)  {  int  len  =  room.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room)  {  int  len  =  room.length();	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	55	None	replace
110	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  room  +  len;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room)  {  int  len  =  room  +  len;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room)  {  int  len  =  room  +  len;	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	55	None	replace
111	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
112	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	replace
113	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
114	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	3	None	replace
115	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  +=  len;  }  [CE]  <identifier>  expected  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  _outputTail  +=  len;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
116	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  SHORT_WRITE  &&  _outputHead  <  SHORT_WRITE)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	replace
117	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE  &&  _outputHead  <  SHORT_WRITE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE  &&  _outputHead  <  SHORT_WRITE)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	replace
118	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  =  SHORT_WRITE)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  =  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  _outputHead  <  =  SHORT_WRITE)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
119	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0  &&  _outputHead  <  SHORT_WRITE)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	replace
120	[BUG]  [BUGGY]  while(len  >  0  &&  _outputHead  <  SHORT_WRITE)  {  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0  &&  _outputHead  <  SHORT_WRITE)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  len)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  room  &&  _outputHead  <  len)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
122	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  len)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  len)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  _outputHead  <  len)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
123	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+align,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+align,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+align,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
124	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
125	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  while(len  >  space  &&  _outputHead  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  while(len  >  space  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    while(len  >  space  &&  _outputHead  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
126	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  While(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  While(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    While(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
127	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    int  len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
128	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  while(len  >  room  &&  _outputHead  >=  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  while(len  >  room  &&  _outputHead  >=  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    while(len  >  room  &&  _outputHead  >=  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
129	[BUG]  [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	26	None	replace
130	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	26	None	replace
131	[BUG]  [BUGGY]  while(len  <  room)  {  while(len  <  room)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  while(len  <  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    while(len  <  room)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
132	[BUG]  [BUGGY]  while(len  <  room)  {  while(len  <  space)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  while(len  <  space)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    while(len  <  space)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
133	[BUG]  [BUGGY]  while(len  <  room)  {  while(len  <  classLoader)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  while(len  <  classLoader)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    while(len  <  classLoader)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
134	[BUG]  [BUGGY]  _outputBuffer.setLength(0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputBuffer.setLength(0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputBuffer.setLength(0);	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
135	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer.length();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputTail  =  _outputBuffer.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputTail  =  _outputBuffer.length();	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
136	[BUG]  [BUGGY]  _outputTail  =  _outputHead;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _outputTail  =  _outputHead;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_outputTail  =  _outputHead;	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
137	[BUG]  [BUGGY]  while(len  <  0)  {  while(len  <  0)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  while(len  <  0)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    while(len  <  0)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
138	[BUG]  [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	37	None	add
139	[BUG]  [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	37	None	add
140	[BUG]  [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	37	None	add
141	[BUG]  [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  len;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    if(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  len;  }	  	non-compiled	[CE]  ';'  expected	37	None	add
142	[BUG]  [BUGGY]  while  (len  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  <  =  1)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while  (len  <  =  1)  {	  while    (len    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
143	[BUG]  [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	24	None	replace
144	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	24	None	replace
145	[BUG]  [BUGGY]  _writer.writeRaw(text);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.writeRaw(text);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.writeRaw(text);	  _writer.writeRawLong(text);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
146	[BUG]  [BUGGY]  _writer.writeRawLong(text,  len);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.writeRawLong(text,  len);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.writeRawLong(text,  len);	  _writer.writeRawLong(text);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
147	[BUG]  [BUGGY]  if(len  >  0)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  _writer.writeRawLong(text);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
148	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  len)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(offset  <  len)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
149	[BUG]  [BUGGY]  while(offset  <  len)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  len)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset  <  len)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
150	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(_outputTail  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(_outputTail  <  _outputEnd)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	replace
151	[BUG]  [BUGGY]  while(_outputTail  <  _outputEnd)  {  [FE]  StringIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(_outputTail  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(_outputTail  <  _outputEnd)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	replace
152	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  >=  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(offset  >=  _outputEnd)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
153	[BUG]  [BUGGY]  while(offset  >=  _outputEnd)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  >=  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset  >=  _outputEnd)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	16	1	replace
154	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  len)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  len)  {	  while(len    <    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
155	[BUG]  [BUGGY]  while(len  <  len)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  len)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  len)  {	  while(len    <    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
156	[BUG]  [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);	  while(len    >    room)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	47	None	replace
157	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	62	None	add
158	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	62	None	add
159	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	62	None	add
160	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  ==  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputHead  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputHead    >=    _outputEnd)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputHead  ==  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	62	None	add
161	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	2	None	replace
162	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  0)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  0)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  0)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	2	None	replace
163	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  _outputStart  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  while(len    >    room)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  _outputStart	49	None	replace
164	[BUG]  [BUGGY]  while(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  _outputStart  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);	  while(len    >    room)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  _outputStart	49	None	replace
165	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
166	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  space  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  space  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    while(len  >  space  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
167	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int  len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int  len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    int  len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
168	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  While(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  While(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    While(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
169	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELDS))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELDS))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
170	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  level  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+level,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  level	5	None	replace
171	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  while(offset  <  _outputEnd)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  while(offset  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    while(offset  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
172	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
173	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _output	  	non-compiled	[CE]  not  a  statement	15	None	add
174	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
175	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    if(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	15	None	add
176	[BUG]  [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  <identifier>  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
177	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
178	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
179	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  0)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  0)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  0)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	3	None	replace
180	[BUG]  [BUGGY]  while(len  >  0)  {  _outputTail  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  cannot  find  symbol  amount  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  _outputTail  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  _outputTail  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	3	None	replace
181	[BUG]  [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  cannot  find  symbol  alpha  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  alpha	65	None	replace
182	[BUG]  [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	65	None	replace
183	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  >=  _outputMaxContiguous)  {  _flushBuffer();  }  [CE]  cannot  find  symbol  _outputMaxContiguous  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >=  _outputMaxContiguous)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputEnd  >=  _outputMaxContiguous)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputHead    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol  _outputMaxContiguous	63	None	replace
184	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
185	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(1);  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(1);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(1);  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
186	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
187	[BUG]  [BUGGY]  while(len  >  0)  {  if(len  >  room)  {  if(_outputEnd  >  0)  {  _outputBuffer.setLength(0);  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(len  >  room)  {  if(_outputEnd  >  0)  {  _outputBuffer.setLength(0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(len  >  room)  {  if(_outputEnd  >  0)  {  _outputBuffer.setLength(0);  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  ';'  expected	10	None	replace
188	[BUG]  [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	28	None	replace
189	[BUG]  [BUGGY]  while(offset  <  _outputEnd  &&  len  <  _outputMaxContiguous)  {  [CE]  cannot  find  symbol  _outputMaxContiguous  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd  &&  len  <  _outputMaxContiguous)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset  <  _outputEnd  &&  len  <  _outputMaxContiguous)  {	  while(offset    <    _outputEnd)    {    	non-compiled	[CE]  cannot  find  symbol  _outputMaxContiguous	16	None	replace
190	[BUG]  [BUGGY]  while(len  <  0)  {  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  int  len  =  text.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  0)  {  int  len  =  text.length();	  while    (len    >    0)    {    int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	44	None	replace
191	[BUG]  [BUGGY]  while(len  >  0)  {  int  len  =  text.length()  +  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  len  =  text.length()  +  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  len  =  text.length()  +  room;	  while    (len    >    0)    {    int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	44	None	replace
192	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  if(len  >  room  &&  len  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  if(len  >  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    if(len  >  room  &&  len  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
193	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  int  len  =  text.length();  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  int  len  =  text.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    int  len  =  text.length();	  	non-compiled	[CE]  ';'  expected	50	None	add
194	[BUG]  [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  int  len  =  text.length()  -  room;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  len  <  SHORT_WRITE)  {  int  len  =  text.length()  -  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    len    <    SHORT_WRITE)    {    int  len  =  text.length()  -  room;	  	non-compiled	[CE]  ';'  expected	50	None	add
195	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  =  text.length();  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  =  text.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    int  len  =  text.length();	  	non-compiled	[CE]  ';'  expected	52	None	add
196	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  if(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  if(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    if(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
197	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  =  text.length();  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  =  text.length();  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    int  len  =  text.length();  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
198	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  =  text.length()  -  room;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  int  len  =  text.length()  -  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    int  len  =  text.length()  -  room;	  	non-compiled	[CE]  ';'  expected	52	None	add
199	[BUG]  [BUGGY]  while(len  <  =  _outputMaxContiguous)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  =  _outputMaxContiguous)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  =  _outputMaxContiguous)  {	  while(len    <    =    room)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
200	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	15	None	add
201	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(text.length());  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(text.length());  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException(text.length());	  	non-compiled	[CE]  ';'  expected	15	None	add
202	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");	  	non-compiled	[CE]  ';'  expected	15	None	add
203	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(text.length());  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(text.length());  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    ArrayIndexOutOfBoundsException  ex  =  new  ArrayIndexOutOfBoundsException(text.length());	  	non-compiled	[CE]  ';'  expected	15	None	add
204	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  >  room)  {  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  >  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  int  len  >  room)  {	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
205	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  =  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  int  len  =  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  int  len  =  room;	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	55	None	replace
206	[BUG]  [BUGGY]  while(len  >  0)  {  int  len  =  room.length())  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  len  =  room.length())  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  len  =  room.length())  {	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
207	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  <identifier>  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
208	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	replace
209	[BUG]  [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	replace
210	[BUG]  [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	30	None	replace
211	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	replace
212	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	replace
213	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  0)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0)  {  if(_outputEnd  >  0)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
214	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  0)  {  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  0)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputEnd  >  0)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
215	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputTail  >  0)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0)  {  if(_outputTail  >  0)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
216	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputTail  >  0)  {  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputTail  >  0)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputTail  >  0)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
217	[BUG]  [BUGGY]  while(len  <  =  SHORT_WRITE)  {  int  len  =  text.length();  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  =  SHORT_WRITE)  {  int  len  =  text.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  =  SHORT_WRITE)  {  int  len  =  text.length();	  while    (len    <    SHORT_WRITE)    {    int    len    =    text.length();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
218	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  _outputTail)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  _outputTail)  {	  while(len    <    _outputEnd)    {    while(len    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
219	[BUG]  [BUGGY]  while(len  <  _outputTail)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  _outputTail)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  _outputTail)  {	  while(len    <    _outputEnd)    {    while(len    <    _outputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	27	1	replace
220	[BUG]  [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  cannot  find  symbol  always  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  always	54	None	replace
221	[BUG]  [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  always  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  always	54	None	replace
222	[BUG]  [BUGGY]  while(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	24	None	replace
223	[BUG]  [BUGGY]  while(len  >  _outputMaxContiguous)  {  int  len  =  text.length()  -  room;  [CE]  cannot  find  symbol  _outputMaxContiguous  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputMaxContiguous)  {  int  len  =  text.length()  -  room;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  _outputMaxContiguous)  {  int  len  =  text.length()  -  room;	  while(len    >    room)    {    int    len    =    text.length()    -    room;    	non-compiled	[CE]  cannot  find  symbol  _outputMaxContiguous	56	None	replace
224	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  <identifier>  expected  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+level,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
225	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputEnd  >  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  room)  {  if(_outputEnd  >  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    if(len  >  room)  {  if(_outputEnd  >  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
226	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  room);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  0,  len  -  room);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  0,  len  -  room);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
227	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  0,  len  -  1);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  0,  len  -  1);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
228	[BUG]  [BUGGY]  while(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	37	None	add
229	[BUG]  [BUGGY]  while(len  <  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	37	None	add
230	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
231	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int  len  =  text.length();  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  int  len  =  text.length();  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    int  len  =  text.length();  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
232	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  }	  	non-compiled	[CE]  ';'  expected	19	None	add
233	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    if(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
234	[BUG]  [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  cannot  find  symbol  level  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+level,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  level	66	None	replace
235	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  room  &&  _outputHead  <  _outputEnd)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
236	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  _outputEnd)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  _outputHead  <  _outputEnd)  {	  while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    	compilable	  [FE]  AssertionFailedError  	53	1	replace
237	[BUG]  [BUGGY]  while(len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	29	None	replace
238	[BUG]  [BUGGY]  _writer.write(text,  offset);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  offset);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  offset);	  _writer.write(text);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
239	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
240	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	59	1	replace
241	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  =  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  =  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputEnd  <  =  SHORT_WRITE)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
242	[BUG]  [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  alpha  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(len  <  _outputEnd)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  alpha	31	None	replace
243	[BUG]  [BUGGY]  if(len  >  room)  {  _writer.writeRawLong(text);  }  else  {  System.arraycopy(text,  offset,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  _writer.writeRawLong(text);  }  else  {  System.arraycopy(text,  offset,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  _writer.writeRawLong(text);  }  else  {  System.arraycopy(text,  offset,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  _writer.writeRawLong(text);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
244	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  <  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  <  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    if(len  <  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  ';'  expected	40	None	add
245	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  incompatible  types	43	None	replace
246	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	1	replace
247	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	1	replace
248	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [CE]  <identifier>  expected  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
249	[BUG]  [BUGGY]  while(len  >  _outputEnd)  {  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputEnd)  {  int  len  =  text.length();  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  _outputEnd)  {  int  len  =  text.length();	  while(len    >    room)    {    int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	9	None	replace
250	[BUG]  [BUGGY]  while(len  <  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	17	None	add
251	[BUG]  [BUGGY]  while(len  <  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	17	None	add
252	[BUG]  [BUGGY]  while(len  <  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	17	None	add
253	[BUG]  [BUGGY]  while(len  <  room)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	17	None	add
254	[BUG]  [BUGGY]  while(len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	35	None	replace
255	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
256	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
257	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputHead  >  0)  {  if(_outputTail  >  0)  {  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputHead  >  0)  {  if(_outputTail  >  0)  {  _outputTail  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputHead  >  0)  {  if(_outputTail  >  0)  {  _outputTail  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
258	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputHead  >  0)  {  if(_outputTail  >  0)  {  _outputTail  =  _outputEnd;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputHead  >  0)  {  if(_outputTail  >  0)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputHead  >  0)  {  if(_outputTail  >  0)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
259	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  '.class'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  '.class'  expected	25	None	replace
260	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  room);  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room)  {  int  len  =  room);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room)  {  int  len  =  room);	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
261	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  room)  {  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room)  {  int  len  =  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room)  {  int  len  =  room)  {	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
262	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  -=  room)  {  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room)  {  int  len  -=  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room)  {  int  len  -=  room)  {	  while(len    >    room)    {    int    len    >    room)    {    	non-compiled	[CE]  ';'  expected	55	None	replace
263	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
264	[BUG]  [BUGGY]  _writer.write(text,  len);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  _writer.write(text,  len);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	_writer.write(text,  len);	  _writer.write(text);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
265	[BUG]  [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	31	None	replace
266	[BUG]  [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  alpha  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  alpha	31	None	replace
267	[BUG]  [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	54	None	replace
268	[BUG]  [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  always  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(_outputEnd  <  len)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  always	54	None	replace
269	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+always,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+always,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	54	None	replace
270	[BUG]  [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [CE]  <identifier>  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  else  {  writeRawLong(text);  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
271	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
272	[BUG]  [BUGGY]  while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputBuffer.setLength(0);  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputBuffer.setLength(0);    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
273	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  <  SHORT_WRITE)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
274	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputHead!=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputHead!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
275	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
276	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
277	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
278	[BUG]  [BUGGY]  while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
279	[BUG]  [BUGGY]  while(len  <  room)  {  if(_outputHead  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  if(_outputHead  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {  if(_outputHead  >  room)  {  if(_outputEnd  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
280	[BUG]  [BUGGY]  while(len  <  room)  {  if(_outputHead  >  room)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  if(_outputHead  >  room)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room)  {  if(_outputHead  >  room)  {  if(_outputTail  >  room)  {  _outputTail  =  _outputEnd;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputTail    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
281	[BUG]  [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alloc  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alloc	2	None	replace
282	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	29	None	replace
283	[BUG]  [BUGGY]  while(len  <  room)  {  While(len  <  room)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room)  {  While(len  <  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    room)    {    While(len  <  room)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
284	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  1)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  1)  {	  while(len    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	replace
285	[BUG]  [BUGGY]  while(len  <  1)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  1)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  1)  {	  while(len    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	replace
286	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  While(offset  <  _outputEnd)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  While(offset  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    While(offset  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
287	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  if(offset  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    if(offset  <  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
288	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  while(offset  >=  _outputEnd)  {  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  while(offset  >=  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    while(offset  >=  _outputEnd)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
289	[BUG]  [BUGGY]  while(offset  <  _outputEnd)  {  int  offset  =  _outputEnd;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(offset  <  _outputEnd)  {  int  offset  =  _outputEnd;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(offset    <    _outputEnd)    {    int  offset  =  _outputEnd;	  	non-compiled	[CE]  ';'  expected	15	None	add
290	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  len  <  SHORT_WRITE)  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
291	[BUG]  [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  len  <  SHORT_WRITE)  {  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  len  <  SHORT_WRITE)  {	  while(len    >    room    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
292	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  int  amount  =  0;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  int  amount  =  0;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  int  amount  =  0;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	24	None	replace
293	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  =  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
294	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  <  =  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  <  =  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  if(_outputTail  <  =  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
295	[BUG]  [BUGGY]  while(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  0)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    <    0)    {    int  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	37	None	add
296	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  <identifier>  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+level,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
297	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE)  {  int  amount  =  0;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE)  {  int  amount  =  0;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE)  {  int  amount  =  0;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  while    (len    <    SHORT_WRITE)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+level,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	66	None	replace
298	[BUG]  [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  whil(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  whil(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len    >    room    &&    _outputHead    <    SHORT_WRITE)    {    whil(len  >  room  &&  _outputHead  <  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
299	[BUG]  [BUGGY]  while(len  >  room)  {  int  len  =  text.length()  -  room  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  room)  {  int  len  =  text.length()  -  room  +  1;  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  room)  {  int  len  =  text.length()  -  room  +  1;	  while(len    >    room)    {    int    len    =    text.length()    -    room;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	56	None	replace
300	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
301	[BUG]  [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  >  0)  {  if(_outputEnd  >  room)  {  _outputHead  =  0;  }	  while(len    >    room)    {    if(len    >    room)    {    if(_outputEnd    >    room)    {    _outputHead    =    0;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	replace
302	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  0)  {  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  0)  {  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  >  0)  {  amount  =  _outputStart;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputStart;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	45	None	replace
303	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  room  &&  len  <  SHORT_WRITE)  {	  while(len    <    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
304	[BUG]  [BUGGY]  while(len  <  room  &&  len  <  SHORT_WRITE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room  &&  len  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room  &&  len  <  SHORT_WRITE)  {	  while(len    <    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
305	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room  &&  room  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  room  &&  room  <  SHORT_WRITE)  {	  while(len    <    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
306	[BUG]  [BUGGY]  while(len  <  room  &&  room  <  SHORT_WRITE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  room  &&  room  <  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  room  &&  room  <  SHORT_WRITE)  {	  while(len    <    room)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	replace
307	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputTail  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	64	None	replace
308	[BUG]  [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	28	None	replace
309	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	28	None	replace
310	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  space)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  if(len  >  space)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    if(len  >  space)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	58	None	add
311	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  <identifier>  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
312	[BUG]  [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  0)  {  while(_outputEnd  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  0)  {  while(_outputEnd  >  room)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+level,  _outputBuffer,  0);  _outputHead  =  0;  }	  while    (len    >    0)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+level,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	5	None	replace
313	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  >  room)  {  if(_outputTail  >  space)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException(   "   ");  }  if(len  >  room)  {  if(_outputTail  >  space)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len    >    room)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    if(len  >  room)  {  if(_outputTail  >  space)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  ';'  expected	40	None	add
314	[BUG]  [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(_outputEnd  <  len)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	30	None	replace
315	[BUG]  [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  amount  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  >  room)  {  while(len  <  _outputEnd)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  >  room)  {  while(len  <  _outputEnd)  {  amount  =  _outputEnd;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  while(len    <    _outputEnd)    {    int    amount    =    _outputEnd;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  amount	30	None	replace
316	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  int  len  >  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  int  len  >  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    SHORT_WRITE)    {    int  len  >  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
317	[BUG]  [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while  (len  >  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while    (len    >    SHORT_WRITE)    {    if(len  >  SHORT_WRITE)  {	  	non-compiled	[CE]  ';'  expected	33	None	add
318	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  <  SHORT_WRITE)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputHead    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
319	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputHead  >=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputHead    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	63	1	replace
320	[BUG]  [BUGGY]  while(len  <  =  len)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  =  len)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  =  len)  {	  while(len    <    =    room)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
321	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(_outputHead  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(_outputHead  <  _outputEnd)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	replace
322	[BUG]  [BUGGY]  while(_outputHead  <  _outputEnd)  {  [FE]  StringIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(_outputHead  <  _outputEnd)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(_outputHead  <  _outputEnd)  {	  while(offset    <    _outputEnd)    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	16	1	replace
323	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  len  <  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	while(len  <  SHORT_WRITE  &&  len  <  room)  {	  while(len    >    room    &&    len    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
324	[BUG]  [BUGGY]  while(len  <  SHORT_WRITE  &&  len  <  room)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  while(len  <  SHORT_WRITE  &&  len  <  room)  {  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	while(len  <  SHORT_WRITE  &&  len  <  room)  {	  while(len    >    room    &&    len    <    SHORT_WRITE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
325	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	add	if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	1	replace
326	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	484	484	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	1	replace
