bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  +=  amount;  _outputTail  +=  len;	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
2	[BUG]  [BUGGY]  offset  +=  amount;  _outputTail  +=  len;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  amount;  _outputTail  +=  len;	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	37	1	replace
3	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
4	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
5	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  offset  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    +    2;    offset  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
6	[BUG]  [BUGGY]  offset  -=  amount  +  2;  offset  -=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  offset  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    2;    offset  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    +    2;    _outputTail  -=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	64	1	add
8	[BUG]  [BUGGY]  offset  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  _outputTail  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    2;    _outputTail  -=  amount  +  2;	  	compilable	  [FE]  AssertionFailedError  	64	1	add
9	[BUG]  [BUGGY]  offset  -=  amount  +  2;  _offset  -=  amount  +  2;  [CE]  cannot  find  symbol  _offset  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  _offset  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    2;    _offset  -=  amount  +  2;	  	non-compiled	[CE]  cannot  find  symbol  _offset	64	None	add
10	[BUG]  [BUGGY]  _outputBuffer.append('n');  offset  +=  amount  +  1;  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append('n');  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append('n');  offset  +=  amount  +  1;	  offset    +=    amount    +    1;    _outputBuffer.append('n');    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
11	[BUG]  [BUGGY]  _outputBuffer.append('n');  _outputBuffer.append(amount  +  1);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append('n');  _outputBuffer.append(amount  +  1);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append('n');  _outputBuffer.append(amount  +  1);	  offset    +=    amount    +    1;    _outputBuffer.append('n');    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
12	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('n');    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
13	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	59	None	replace
14	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	59	None	replace
15	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	59	1	replace
16	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	59	1	replace
17	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	10	None	replace
18	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	10	None	replace
19	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	10	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_writer.write(text,  0,  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	46	1	replace
21	[BUG]  [BUGGY]  _writer.write(text,  0,  amount);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  0,  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	46	1	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	46	1	replace
23	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	46	1	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  0,  len  -  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_writer.write(text,  0,  len  -  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	46	1	replace
25	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  amount);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  0,  len  -  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  0,  len  -  amount);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	46	1	replace
26	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
27	[BUG]  [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
28	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
29	[BUG]  [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
30	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  -=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        offset    +=    amount    +    1;    offset  -=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
31	[BUG]  [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  -=  amount  +  1;  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  -=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        offset    +=    amount    +    1;    offset  -=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
32	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  =  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        offset    +=    amount    +    1;    offset  =  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
33	[BUG]  [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  =  amount  +  1;  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  offset  =  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        offset    +=    amount    +    1;    offset  =  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
34	[BUG]  [BUGGY]  _outputTail  +=  amounts;  [CE]  cannot  find  symbol  amounts  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amounts;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amounts;	  _outputTail    +=    length;    	non-compiled	[CE]  cannot  find  symbol  amounts	77	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  =  amount;	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
36	[BUG]  [BUGGY]  _outputTail  =  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  =  amount;	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  *=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  *=  len;	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
38	[BUG]  [BUGGY]  _outputTail  *=  len;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  *=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  *=  len;	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }	  offset    +=    amount    -    1;    _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
40	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }	  offset    +=    amount    -    1;    _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
41	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  offset    +=    amount    -    1;    _outputTail    +=    amount    -    1;    	non-compiled	[CE]  'void'  type  not  allowed  here	28	None	replace
42	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  offset    +=    amount    -    1;    _outputTail    +=    amount    -    1;    	non-compiled	[CE]  ')'  expected	28	None	replace
43	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  offset  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    -    1;    offset  -=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	73	1	add
44	[BUG]  [BUGGY]  offset  -=  amount  -  1;  offset  -=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  offset  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    -    1;    offset  -=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	73	1	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  _outputTail  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    -    1;    _outputTail  -=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	73	1	add
46	[BUG]  [BUGGY]  offset  -=  amount  -  1;  _outputTail  -=  amount  -  1;  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  _outputTail  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    -    1;    _outputTail  -=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	73	1	add
47	[BUG]  [BUGGY]  offset  -=  amount  -  1;  _offset  -=  amount  -  1;  [CE]  cannot  find  symbol  _offset  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  _offset  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    -    1;    _offset  -=  amount  -  1;	  	non-compiled	[CE]  cannot  find  symbol  _offset	73	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
49	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    _outputTail  +=  amount;  _outputTail  +=  amount;	  	compilable	  [FE]  AssertionFailedError  	7	1	add
50	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ')'  expected	7	None	add
51	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	7	None	add
52	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0),  len);  }  [CE]  'void'  type  not  allowed  here  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0),  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0),  len);  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	7	None	add
53	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0).toString());  }  [CE]  void  cannot  be  dereferenced  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0).toString());  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0).toString());  }	  	non-compiled	[CE]  void  cannot  be  dereferenced	7	None	add
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    -=    amount;    _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
55	[BUG]  [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
56	[BUG]  [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  }  len  -=  amount;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  }  len  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    _outputTail  -=  amount;  }  len  -=  amount;	  	non-compiled	[CE]  <identifier>  expected	19	None	add
57	[BUG]  [BUGGY]  _outputTail  -=  amount;  int  len  =  text.length();  _outputTail  -=  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  int  len  =  text.length();  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    int  len  =  text.length();  _outputTail  -=  amount;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	19	None	add
58	[BUG]  [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  }  len  -=  SHORT_WRITE;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  }  len  -=  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    _outputTail  -=  amount;  }  len  -=  SHORT_WRITE;	  	non-compiled	[CE]  <identifier>  expected	19	None	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
60	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
62	[BUG]  [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
64	[BUG]  [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  -=  amount  +  1;	  _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
66	[BUG]  [BUGGY]  _outputTail  -=  amount  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  -=  amount  +  1;	  _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  -=  len;	  _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
68	[BUG]  [BUGGY]  _outputTail  -=  len;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  -=  len;	  _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  -=  amount  +  2;	  _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
70	[BUG]  [BUGGY]  _outputTail  -=  amount  +  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  -=  amount  +  2;	  _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	20	1	replace
71	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  offset  -=  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    -=    amount;    offset  -=  amount;  _outputTail  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
72	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  offset  -=  amount;  _outputTail  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  offset  -=  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    -=    amount;    offset  -=  amount;  _outputTail  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    -=    amount;    _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
74	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    -=    amount;    _outputTail  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	42	1	add
75	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  int  len  =  text.length();  offset  -=  amount;  _outputTail  -=  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  int  len  =  text.length();  offset  -=  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    -=    amount;    int  len  =  text.length();  offset  -=  amount;  _outputTail  -=  amount;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	42	None	add
76	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  offset  =  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    -=    amount;    offset  =  amount;  _outputTail  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
77	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  offset  =  amount;  _outputTail  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  offset  =  amount;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    -=    amount;    offset  =  amount;  _outputTail  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
78	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
79	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  if(_outputTail  >  room)  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  if(_outputTail  >  room)  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
81	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  if(_outputTail  >  room)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  if(_outputTail  >  room)  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  if(_outputTail  >  room)  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
82	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  2;  offset  +=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    +    2;    offset  +=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
83	[BUG]  [BUGGY]  offset  +=  amount  +  2;  offset  +=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  2;  offset  +=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    +    2;    offset  +=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
84	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  2;  _outputTail  +=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    +    2;    _outputTail  +=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
85	[BUG]  [BUGGY]  offset  +=  amount  +  2;  _outputTail  +=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  2;  _outputTail  +=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    +    2;    _outputTail  +=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
86	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  2;  _outputTail  =  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    +    2;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
87	[BUG]  [BUGGY]  offset  +=  amount  +  2;  _outputTail  =  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  2;  _outputTail  =  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    +    2;    _outputTail  =  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
88	[BUG]  [BUGGY]  _outputBuffer  =  _outputTail;  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer  =  _outputTail;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer  =  _outputTail;	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  incompatible  types	70	None	replace
89	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0);	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	70	None	replace
90	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
91	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0))  {  _outputTail  +=  amount;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0))  {  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0))  {  _outputTail  +=  amount;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0))    {    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
93	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0))    {    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  _outputTail  +=  amount  *  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    amount    *    SHORT_WRITE;    _outputTail  +=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	23	1	add
95	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  _outputTail  +=  amount  *  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  _outputTail  +=  amount  *  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    _outputTail  +=  amount  *  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	23	1	add
96	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  int  len  =  text.length();  _outputTail  +=  amount  *  SHORT_WRITE;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  int  len  =  text.length();  _outputTail  +=  amount  *  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    int  len  =  text.length();  _outputTail  +=  amount  *  SHORT_WRITE;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	23	None	add
97	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  _outputTail  +=  amount  *  SHORT_WRITE;  }  len  -=  amount;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  _outputTail  +=  amount  *  SHORT_WRITE;  }  len  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    _outputTail  +=  amount  *  SHORT_WRITE;  }  len  -=  amount;	  	non-compiled	[CE]  <identifier>  expected	23	None	add
98	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  _outputTail  +=  amount  *  SHORT_WRITE;  this.writer.write(text,  0,  len);  [CE]  cannot  find  symbol  writer  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  _outputTail  +=  amount  *  SHORT_WRITE;  this.writer.write(text,  0,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    _outputTail  +=  amount  *  SHORT_WRITE;  this.writer.write(text,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  writer	23	None	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  /  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  /  SHORT_WRITE;	  _outputTail    +=    amount    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
100	[BUG]  [BUGGY]  _outputTail  +=  amount  /  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  /  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  /  SHORT_WRITE;	  _outputTail    +=    amount    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  *  2;	  _outputTail    +=    amount    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
102	[BUG]  [BUGGY]  _outputTail  +=  amount  *  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  *  2;	  _outputTail    +=    amount    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  4;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  *  4;	  _outputTail    +=    amount    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
104	[BUG]  [BUGGY]  _outputTail  +=  amount  *  4;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  4;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  *  4;	  _outputTail    +=    amount    *    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	24	1	replace
105	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  offset  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    +    1;    offset  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
106	[BUG]  [BUGGY]  offset  -=  amount  +  1;  offset  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  offset  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    1;    offset  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  _outputTail  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    +    1;    _outputTail  -=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
108	[BUG]  [BUGGY]  offset  -=  amount  +  1;  _outputTail  -=  amount  +  1;  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  _outputTail  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    1;    _outputTail  -=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
109	[BUG]  [BUGGY]  offset  -=  amount  +  1;  _offset  -=  amount  +  1;  [CE]  cannot  find  symbol  _offset  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  _offset  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    1;    _offset  -=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _offset	17	None	add
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  AssertionFailedError  	91	1	replace
111	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  AssertionFailedError  	91	1	replace
112	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	91	None	replace
113	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	91	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    len;    _outputTail  +=  len;	  	compilable	  [FE]  AssertionFailedError  	15	1	add
115	[BUG]  [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    _outputTail  +=  len;	  	compilable	  [FE]  AssertionFailedError  	15	1	add
116	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    len;    _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputTail);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
117	[BUG]  [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputTail);  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputTail);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
118	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    len;    _outputTail  +=  len;  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
119	[BUG]  [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail);  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    _outputTail  +=  len;  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
120	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    len;    _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
121	[BUG]  [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  [FE]  ArrayStoreException  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    _outputTail  +=  len;  System.arraycopy(text,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);	  	compilable	  [FE]  ArrayStoreException  	15	1	add
122	[BUG]  [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail,  amount);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  _outputTail  +=  len;  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail,  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    _outputTail  +=  len;  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputTail,  amount);	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	15	None	add
123	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        _outputTail    +=    amount    +    1;    offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
124	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    +=    amount    +    1;    offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
125	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        _outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
126	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	3	1	add
127	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    +=    amount    +    1;    int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	3	None	add
128	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  offset  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    /    1;    offset  +=  amount  /  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
129	[BUG]  [BUGGY]  offset  +=  amount  /  1;  offset  +=  amount  /  1;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  offset  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    /    1;    offset  +=  amount  /  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
130	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  _outputTail  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    /    1;    _outputTail  +=  amount  /  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
131	[BUG]  [BUGGY]  offset  +=  amount  /  1;  _outputTail  +=  amount  /  1;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  _outputTail  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    /    1;    _outputTail  +=  amount  /  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
132	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  _flushBuffer();  offset  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    /    1;    _flushBuffer();  offset  +=  amount  /  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
133	[BUG]  [BUGGY]  offset  +=  amount  /  1;  _flushBuffer();  offset  +=  amount  /  1;  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  _flushBuffer();  offset  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    /    1;    _flushBuffer();  offset  +=  amount  /  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  +  2;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
135	[BUG]  [BUGGY]  _outputTail  +=  amount  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  +  2;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  3;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  +  3;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
137	[BUG]  [BUGGY]  _outputTail  +=  amount  +  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  3;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  +  3;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
138	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  offset  +=  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    =    len;    offset  +=  len;  _outputTail  =  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
139	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  =  len;  offset  +=  len;  _outputTail  =  len;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  offset  +=  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    =    len;    offset  +=  len;  _outputTail  =  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
140	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  =  len;  Offset  +=  len;  _outputTail  =  len;  [CE]  cannot  find  symbol  Offset  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  Offset  +=  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    =    len;    Offset  +=  len;  _outputTail  =  len;	  	non-compiled	[CE]  cannot  find  symbol  Offset	62	None	add
141	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    =    len;    _outputTail  =  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
142	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  =  len;  _outputTail  =  len;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    =    len;    _outputTail  =  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
143	[BUG]  [BUGGY]  int  len  =  text.length()  -  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  len  =  text.length()  -  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  len  =  text.length()  -  amount;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	66	None	replace
144	[BUG]  [BUGGY]  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  len  =  text.length()  -  room;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  len  =  text.length()  -  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	66	None	replace
145	[BUG]  [BUGGY]  int  len  =  text.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  len  =  text.length()  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  len  =  text.length()  +  1;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	66	None	replace
146	[BUG]  [BUGGY]  int  len  =  text.length()  +  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  len  =  text.length()  +  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  len  =  text.length()  +  amount;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	66	None	replace
147	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  offset  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    -    2;    offset  +=  amount  -  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	1	add
148	[BUG]  [BUGGY]  offset  +=  amount  -  2;  offset  +=  amount  -  2;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  offset  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    -    2;    offset  +=  amount  -  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	1	add
149	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  _outputTail  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    -    2;    _outputTail  +=  amount  -  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	1	add
150	[BUG]  [BUGGY]  offset  +=  amount  -  2;  _outputTail  +=  amount  -  2;  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  _outputTail  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    -    2;    _outputTail  +=  amount  -  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	1	add
151	[BUG]  [BUGGY]  offset  +=  amount  -  2;  _offset  +=  amount  -  2;  [CE]  cannot  find  symbol  _offset  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  _offset  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    -    2;    _offset  +=  amount  -  2;	  	non-compiled	[CE]  cannot  find  symbol  _offset	30	None	add
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
153	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
155	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
156	[BUG]  [BUGGY]  _outputBuffer.append(text);  offset  +=  amount  +  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append(text);  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append(text);  offset  +=  amount  +  1;	  offset    +=    amount    +    1;    _outputBuffer.append(text);    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
157	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append(text);    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
158	[BUG]  [BUGGY]  _outputBuffer.append(text);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append(text);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append(text);	  offset    +=    amount    +    1;    _outputBuffer.append(text);    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
159	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
160	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  len;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  len;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
161	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  len;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	71	1	add
163	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	71	1	add
164	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  int  len  =  text.length();  _outputTail  +=  amount  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  int  len  =  text.length();  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    int  len  =  text.length();  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	71	None	add
165	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ||  amount  >  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  ||  amount  >  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    ||  amount  >  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
166	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ||  amount  >  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  ||  amount  >  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    ||  amount  >  SHORT_WRITE)  {  _outputTail  +=  amount  -  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  =  amount  -  1;	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
168	[BUG]  [BUGGY]  _outputTail  =  amount  -  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  =  amount  -  1;	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
170	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
171	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	non-compiled	[CE]  ')'  expected	85	None	replace
172	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	non-compiled	[CE]  'void'  type  not  allowed  here	85	None	replace
173	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  offset  -=  amount;  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    =    amount;    offset  -=  amount;  _outputTail  =  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
174	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  offset  -=  amount;  _outputTail  =  amount;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  offset  -=  amount;  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    offset  -=  amount;  _outputTail  =  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
175	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  int  len  =  text.length();  offset  -=  amount;  _outputTail  =  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  int  len  =  text.length();  offset  -=  amount;  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    int  len  =  text.length();  offset  -=  amount;  _outputTail  =  amount;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	87	None	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    =    amount;    _outputTail  =  amount;	  	compilable	  [FE]  AssertionFailedError  	87	1	add
177	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  _outputTail  =  amount;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    _outputTail  =  amount;	  	compilable	  [FE]  AssertionFailedError  	87	1	add
178	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  int  len  =  text.length();  _outputTail  =  len;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  int  len  =  text.length();  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    int  len  =  text.length();  _outputTail  =  len;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	87	None	add
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
180	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
182	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
184	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
185	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _output  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _output  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _output	  	non-compiled	[CE]  ';'  expected	92	None	add
186	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _outputBuffer.setLength(0);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _outputBuffer.setLength(0);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _outputBuffer.setLength(0);  }	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  -=  amount  +  1;  offset  +=  amount  +  1;	  offset    +=    amount    +    1;    offset    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
188	[BUG]  [BUGGY]  offset  -=  amount  +  1;  offset  +=  amount  +  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount  +  1;  offset  +=  amount  +  1;	  offset    +=    amount    +    1;    offset    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputHead    -=    amount;    _outputHead  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	78	1	add
190	[BUG]  [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    _outputHead  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	78	1	add
191	[BUG]  [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  }  len  -=  amount;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  }  len  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    _outputHead  -=  amount;  }  len  -=  amount;	  	non-compiled	[CE]  <identifier>  expected	78	None	add
192	[BUG]  [BUGGY]  _outputHead  -=  amount;  int  len  =  text.length();  _outputHead  -=  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  int  len  =  text.length();  _outputHead  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    int  len  =  text.length();  _outputHead  -=  amount;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	78	None	add
193	[BUG]  [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  }  len  -=  SHORT_WRITE;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  }  len  -=  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    _outputHead  -=  amount;  }  len  -=  SHORT_WRITE;	  	non-compiled	[CE]  <identifier>  expected	78	None	add
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputHead  -=  amount  +  1;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
195	[BUG]  [BUGGY]  _outputHead  -=  amount  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead  -=  amount  +  1;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputHead  -=  amount  *  SHORT_WRITE;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
197	[BUG]  [BUGGY]  _outputHead  -=  amount  *  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount  *  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead  -=  amount  *  SHORT_WRITE;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputHead  -=  len;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
199	[BUG]  [BUGGY]  _outputHead  -=  len;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead  -=  len;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
200	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  offset  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    len;    offset  -=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	add
201	[BUG]  [BUGGY]  offset  -=  len;  offset  -=  len;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  offset  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    len;    offset  -=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	add
202	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  _outputTail  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    len;    _outputTail  -=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	add
203	[BUG]  [BUGGY]  offset  -=  len;  _outputTail  -=  len;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  _outputTail  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    len;    _outputTail  -=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	add
204	[BUG]  [BUGGY]  offset  -=  len;  _offset  -=  len;  [CE]  cannot  find  symbol  _offset  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  _offset  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    len;    _offset  -=  len;	  	non-compiled	[CE]  cannot  find  symbol  _offset	13	None	add
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	49	1	add
206	[BUG]  [BUGGY]          _flushBuffer();  _flushBuffer();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	49	1	add
207	[BUG]  [BUGGY]          _flushBuffer();  _writeRawLong();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _writeRawLong();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    _writeRawLong();	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
208	[BUG]  [BUGGY]          _flushBuffer();  _outputBuffer();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _outputBuffer();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    _outputBuffer();	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _flushBuffer();    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	49	1	add
210	[BUG]  [BUGGY]          _flushBuffer();  _outputTail  =  len;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	49	1	add
211	[BUG]  [BUGGY]          _flushBuffer();  _writeRawLong(len);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _writeRawLong(len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    _writeRawLong(len);	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
212	[BUG]  [BUGGY]  _output  +=  amount  -  1;  [CE]  cannot  find  symbol  _output  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _output  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_output  +=  amount  -  1;	  offset    +=    amount    -    1;    _output    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol  _output	61	None	replace
213	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTa  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTa  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTa	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	90	None	replace
214	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	90	None	replace
215	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
216	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
217	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	90	None	replace
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  =  len  +  1;	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
219	[BUG]  [BUGGY]  _outputTail  =  len  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  =  len  +  1;	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  -  2;	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
221	[BUG]  [BUGGY]  _outputTail  +=  amount  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  -  2;	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  /  1;	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
223	[BUG]  [BUGGY]  _outputTail  +=  amount  /  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  /  1;	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
224	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        _outputTail    +=    amount    -    1;    offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
225	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    +=    amount    -    1;    offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
226	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        _outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
227	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    +=    amount    -    1;    _outputTail  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	27	1	add
228	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    +=    amount    -    1;    int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	27	None	add
229	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
230	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
231	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
232	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
233	[BUG]  [BUGGY]  offset  -=  amount;  offset  -=  len;  }  [CE]  <identifier>  expected  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  offset  -=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  offset  -=  len;  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	non-compiled	[CE]  <identifier>  expected	68	None	replace
234	[BUG]  [BUGGY]  offset  -=  amount;  offset  -=  len;  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  offset  -=  len;  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  offset  -=  len;  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	non-compiled	[CE]  	68	None	replace
235	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  offset  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  -=  amount;  offset  -=  len;	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
236	[BUG]  [BUGGY]  offset  -=  amount;  offset  -=  len;  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  offset  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  offset  -=  len;	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
237	[BUG]  [BUGGY]  offset  -=  amount;  offset  -=  len;  }  else  if(len  >  room)  {  System.arraycopy(_outputBuffer,  0,  len,  _outputTail,  _outputTail);  }  [CE]  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  offset  -=  len;  }  else  if(len  >  room)  {  System.arraycopy(_outputBuffer,  0,  len,  _outputTail,  _outputTail);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  offset  -=  len;  }  else  if(len  >  room)  {  System.arraycopy(_outputBuffer,  0,  len,  _outputTail,  _outputTail);  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	non-compiled	[CE]  	68	None	replace
238	[BUG]  [BUGGY]  _outputBuffer.append('f');  offset  +=  amount  +  1;  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append('f');  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append('f');  offset  +=  amount  +  1;	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
239	[BUG]  [BUGGY]  _outputBuffer.append('ufffd');  offset  +=  amount;  [CE]  unclosed  character  literal  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append('ufffd');  offset  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append('ufffd');  offset  +=  amount;	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
240	[BUG]  [BUGGY]  _offset  -=  amount;  [CE]  cannot  find  symbol  _offset  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_offset  -=  amount;	  offset    -=    amount;    _offset    -=    amount;    	non-compiled	[CE]  cannot  find  symbol  _offset	44	None	replace
241	[BUG]  [BUGGY]  offset  -=  amount;  _offset  -=  len;  [CE]  cannot  find  symbol  _offset  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  _offset  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  _offset  -=  len;	  offset    -=    amount;    _offset    -=    amount;    	non-compiled	[CE]  cannot  find  symbol  _offset	44	None	replace
242	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  offset  +=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    offset  +=  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
243	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  offset  +=  len;  offset  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  offset  +=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    offset  +=  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
244	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  +=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    _outputTail  +=  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
245	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  +=  len;  offset  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  +=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail  +=  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
246	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  offset  -=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    offset  -=  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
247	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  offset  -=  len;  offset  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  offset  -=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    offset  -=  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
248	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  offset  =  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    offset  =  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
249	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  offset  =  len;  offset  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  offset  =  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    offset  =  len;  offset  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  +=  amount  /  2;	  offset    +=    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	31	1	replace
251	[BUG]  [BUGGY]  offset  +=  amount  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  amount  /  2;	  offset    +=    amount    -    2;    	compilable	  [FE]  AssertionFailedError  	31	1	replace
252	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
253	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
254	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
255	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
256	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  _outputBuffer.append( "n ");  }  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  _outputBuffer.append( "n ");  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  _outputBuffer.append( "n ");  }	  offset    +=    len;    _outputTail    =    len;    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
257	[BUG]  [BUGGY]  _outputBuffer.append(text,  offset  +  amount  -  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append(text,  offset  +  amount  -  1);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append(text,  offset  +  amount  -  1);	  offset    +=    amount    -    1;    _outputBuffer.append(text,    offset    +    amount    -    1);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
258	[BUG]  [BUGGY]  _outputBuffer.append(text,  offset  +  len  -  1);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append(text,  offset  +  len  -  1);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append(text,  offset  +  len  -  1);	  offset    +=    amount    -    1;    _outputBuffer.append(text,    offset    +    amount    -    1);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
259	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }	  offset    +=    amount    -    1;    _outputBuffer.append(text,    offset    +    amount    -    1);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
260	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  _outputTail  =  len;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputBuffer.append(text,    offset    +    amount    -    1);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	45	1	add
262	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	45	1	add
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
264	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
266	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
268	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
270	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  *  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  +=  amount  *  1;	  offset    +=    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
272	[BUG]  [BUGGY]  offset  +=  amount  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  *  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  amount  *  1;	  offset    +=    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
273	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  amount;  _outputTail  =  amount;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
274	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  =  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  _outputTail  =  amount;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
275	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
276	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
277	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
278	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
279	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  offset  +=  len;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    amount;    offset  +=  len;  _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	add
280	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  offset  +=  len;  _outputTail  +=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  offset  +=  len;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    amount;    offset  +=  len;  _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	add
281	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  _outputTail  +=  len;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    amount;    _outputTail  +=  len;  _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	add
282	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  _outputTail  +=  len;  _outputTail  +=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  _outputTail  +=  len;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    amount;    _outputTail  +=  len;  _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	add
283	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    amount;    _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	add
284	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  _outputTail  +=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    amount;    _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	75	1	add
285	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  -=  len;  offset  -=  amount;	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
286	[BUG]  [BUGGY]  offset  -=  len;  offset  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  len;  offset  -=  amount;	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
287	[BUG]  [BUGGY]  offset  -=  amount;  offset  -=  length;  [CE]  cannot  find  symbol  length  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  offset  -=  length;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  offset  -=  length;	  offset    -=    amount;    offset    -=    amount;    	non-compiled	[CE]  cannot  find  symbol  length	41	None	replace
288	[BUG]  [BUGGY]  offset  -=  amount;  offset  -=  level;  [CE]  cannot  find  symbol  level  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  offset  -=  level;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  offset  -=  level;	  offset    -=    amount;    offset    -=    amount;    	non-compiled	[CE]  cannot  find  symbol  level	41	None	replace
289	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
290	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
291	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
292	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
293	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
294	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(len  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
295	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  else  {  _output  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  else  {  _output  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  else  {  _output	  	non-compiled	[CE]  ';'  expected	89	None	add
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
297	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
298	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	69	None	replace
299	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  3;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  -=  amount  +  3;	  offset    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
300	[BUG]  [BUGGY]  offset  -=  amount  +  3;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  3;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount  +  3;	  offset    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
302	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
304	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
306	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
307	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	93	None	replace
308	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    offset  +=  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
309	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    offset  +=  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
310	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
311	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  =  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
312	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  +=  amount  -  1;  _outputTail  =  amount  -  1;  [CE]  illegal  start  of  expression  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  +=  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    +=  amount  -  1;  _outputTail  =  amount  -  1;	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
313	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  +=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
314	[BUG]  [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  +=  amount  -  1;  offset  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  +=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
315	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
316	[BUG]  [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
317	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  -=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        offset    +=    amount    -    1;    offset  -=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
318	[BUG]  [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  -=  amount  -  1;  offset  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  -=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        offset    +=    amount    -    1;    offset  -=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
319	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  len  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  +=  len  -  1;	  offset    +=    amount    -    1;    offset    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
320	[BUG]  [BUGGY]  offset  +=  len  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  len  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  len  -  1;	  offset    +=    amount    -    1;    offset    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
321	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
322	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	76	1	replace
323	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
324	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
325	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  =  0;	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  AssertionFailedError  	39	1	replace
326	[BUG]  [BUGGY]  _outputTail  =  0;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  =  0;	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  AssertionFailedError  	39	1	replace
327	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  +=  amount;  offset  +=  len;  _outputTail  =  0;	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
328	[BUG]  [BUGGY]  offset  +=  amount;  offset  +=  len;  _outputTail  =  0;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  amount;  offset  +=  len;  _outputTail  =  0;	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
329	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
330	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
331	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
332	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
333	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    offset  +=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
334	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    offset  +=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
335	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
336	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
337	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	5	None	add
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  _writer.write(text);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
339	[BUG]  [BUGGY]          _writer.write(text);  _writer.write(text);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  _writer.write(text);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	47	1	add
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
341	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
342	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
343	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
344	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
345	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
346	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
347	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
348	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
349	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
350	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
351	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
352	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  System.arraycopy(text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead	  offset    -=    amount;    _outputTail    -=    amount;    	non-compiled	[CE]  ')'  expected	43	None	replace
353	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	12	None	replace
354	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	12	None	replace
355	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  +=  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  +=  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  +=  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	12	None	replace
356	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  =  amount  +  1;	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
357	[BUG]  [BUGGY]  _outputTail  =  amount  +  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  =  amount  +  1;	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
358	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
359	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
360	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	non-compiled	[CE]  ')'  expected	6	None	replace
361	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	non-compiled	[CE]  'void'  type  not  allowed  here	6	None	replace
362	[BUG]  [BUGGY]  _writer.writeRawLong(amount);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(amount);	          _writer.writeRawLong(len);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
363	[BUG]  [BUGGY]  _writer.writeRawLong(amount,  len);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(amount,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(amount,  len);	          _writer.writeRawLong(len);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
364	[BUG]  [BUGGY]  Writer  writer  =  _writer.writeRawLong(len);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  Writer  writer  =  _writer.writeRawLong(len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	Writer  writer  =  _writer.writeRawLong(len);	          _writer.writeRawLong(len);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
365	[BUG]  [BUGGY]  _writer.write(text,  offset+amount);  [CE]  no  suitable  method  found  for  write(String,int)  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  offset+amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  offset+amount);	          _writer.write(text);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int)	48	None	replace
366	[BUG]  [BUGGY]  _writer.write(text,  len);  [CE]  no  suitable  method  found  for  write(String,int)  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  len);	          _writer.write(text);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int)	48	None	replace
367	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  -=  amount  -  1;	  offset    -=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
368	[BUG]  [BUGGY]  _outputTail  -=  amount  -  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  -=  amount  -  1;	  offset    -=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	74	1	replace
369	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
370	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
371	[BUG]  [BUGGY]  _writer.writeRaw(text,  len);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRaw(text,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRaw(text,  len);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
372	[BUG]  [BUGGY]  _writer.writeRaw(text,  amount);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRaw(text,  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRaw(text,  amount);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
373	[BUG]  [BUGGY]  _writer.writeRaw(text,  offset);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRaw(text,  offset);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRaw(text,  offset);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
374	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  offset  -=  amount;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    offset  -=  amount;  offset  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
375	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  offset  -=  amount;  offset  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  offset  -=  amount;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    offset  -=  amount;  offset  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
376	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  _outputTail  -=  amount;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    _outputTail  -=  amount;  offset  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
377	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  _outputTail  -=  amount;  offset  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  _outputTail  -=  amount;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    _outputTail  -=  amount;  offset  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
378	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  _offset  -=  amount;  offset  -=  amount;  [CE]  cannot  find  symbol  _offset  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  _offset  -=  amount;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    _offset  -=  amount;  offset  -=  amount;	  	non-compiled	[CE]  cannot  find  symbol  _offset	40	None	add
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  offset  =  amount;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    offset  =  amount;  offset  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
380	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  offset  =  amount;  offset  -=  amount;  [FE]  AssertionFailedError  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  offset  =  amount;  offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    offset  =  amount;  offset  -=  amount;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  -=  len;  offset  +=  len;	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
382	[BUG]  [BUGGY]  offset  -=  len;  offset  +=  len;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  len;  offset  +=  len;	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
383	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  =  offset  +  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  =  offset  +  len;  offset  +=  len;	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
384	[BUG]  [BUGGY]  offset  =  offset  +  len;  offset  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  =  offset  +  len;  offset  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  =  offset  +  len;  offset  +=  len;	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
385	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    len;    offset  +=  len;  _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
386	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  +=  len;  _outputTail  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    offset  +=  len;  _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
387	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
388	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;  _outputTail  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
389	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  Offset  +=  len;  _outputTail  +=  len;  [CE]  cannot  find  symbol  Offset  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  Offset  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    Offset  +=  len;  _outputTail  +=  len;	  	non-compiled	[CE]  cannot  find  symbol  Offset	36	None	add
390	[BUG]  [BUGGY]  ||((  _outputTail  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ||((  _outputTail  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	||((  _outputTail  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0)))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
391	[BUG]  [BUGGY]  ||((  _outputTail  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ||((  _outputTail  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	||((  _outputTail  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0)))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
392	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    =    len;    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	55	1	add
393	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    _outputTail  =  len;	  	compilable	  [FE]  AssertionFailedError  	55	1	add
394	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  Len;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  _outputTail  =  Len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    _outputTail  =  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	55	None	add
395	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  lan;  [CE]  cannot  find  symbol  lan  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  _outputTail  =  lan;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    _outputTail  =  lan;	  	non-compiled	[CE]  cannot  find  symbol  lan	55	None	add
396	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  len);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  _outputTail  =  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    _outputTail  =  len);	  	non-compiled	[CE]  ';'  expected	55	None	add
397	[BUG]  [BUGGY]  _outputBuffer.append(text);  offset  +=  amount  -  1;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append(text);  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append(text);  offset  +=  amount  -  1;	  offset    +=    amount    -    1;    _outputBuffer.append(text);    offset    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
398	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }	  offset    +=    amount    -    1;    _outputBuffer.append(text);    offset    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
399	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >  room)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >  room)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }	  offset    +=    amount    -    1;    _outputBuffer.append(text);    offset    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
400	[BUG]  [BUGGY]  _writer.writeRawLong(text,  len);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(text,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(text,  len);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
401	[BUG]  [BUGGY]  _writer.writeRawLong(text,  amount);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(text,  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(text,  amount);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
402	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(text,  offset);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(text,  offset);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	51	None	replace
403	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
404	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
405	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
406	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	21	1	add
408	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    _outputTail  +=  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	21	1	add
409	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  _outputEnd  :  _outputBuffer.finishCurrentSegment();  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  _outputEnd  :  _outputBuffer.finishCurrentSegment();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  0)?  _outputEnd  :  _outputBuffer.finishCurrentSegment();	  	non-compiled	[CE]  not  a  statement	21	None	add
410	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  int  len  =  text.length();  _outputTail  +=  amount  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  int  len  =  text.length();  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    int  len  =  text.length();  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	21	None	add
411	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  _outputEnd  :  _outputBuffer.toString();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  _outputEnd  :  _outputBuffer.toString();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  0)?  _outputEnd  :  _outputBuffer.toString();	  	non-compiled	[CE]  not  a  statement	21	None	add
412	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)?  _outputEnd  :  _outputBuffer.toString();  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)?  _outputEnd  :  _outputBuffer.toString();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  ==  0)?  _outputEnd  :  _outputBuffer.toString();	  	non-compiled	[CE]  not  a  statement	21	None	add
413	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    offset  +=  len;  offset  +=  len;  _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
414	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    offset  +=  len;  offset  +=  len;  _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
415	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
416	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _outputTail  =  0;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
417	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  offset  =  len;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    offset  =  len;  offset  +=  len;  _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
418	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  offset  =  len;  offset  +=  len;  _outputTail  =  0;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  offset  =  len;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    offset  =  len;  offset  +=  len;  _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
419	[BUG]  [BUGGY]  _offset  +=  amount  -  1;  [CE]  cannot  find  symbol  _offset  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_offset  +=  amount  -  1;	  offset    +=    amount    -    1;    _offset    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol  _offset	29	None	replace
420	[BUG]  [BUGGY]  int  offset  +=  amount  -  1;  _offset  +=  amount  -  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  offset  +=  amount  -  1;  _offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  offset  +=  amount  -  1;  _offset  +=  amount  -  1;	  offset    +=    amount    -    1;    _offset    +=    amount    -    1;    	non-compiled	[CE]  ';'  expected	29	None	replace
421	[BUG]  [BUGGY]  int  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;	  offset    +=    amount    -    1;    _offset    +=    amount    -    1;    	non-compiled	[CE]  ';'  expected	29	None	replace
422	[BUG]  [BUGGY]  offset  -=  amount  +  2;  -=  amount  +  2;  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    2;    -=  amount  +  2;	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
423	[BUG]  [BUGGY]  offset  -=  amount  +  2;  ++=  amount  +  2;  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  ++=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    2;    ++=  amount  +  2;	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
424	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
425	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
426	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
427	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
428	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  null;  }  [CE]  incompatible  types  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  null;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  null;  }	  	non-compiled	[CE]  incompatible  types	40	None	add
429	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
430	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    if(amount  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
431	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  *  1;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
432	[BUG]  [BUGGY]  _outputTail  +=  amount  *  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  *  1;	  _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	22	1	replace
433	[BUG]  [BUGGY]  _writer.write(text,  offset);  [CE]  no  suitable  method  found  for  write(String,int)  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.write(text,  offset);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.write(text,  offset);	          _writer.write(text);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int)	48	None	replace
434	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
435	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
436	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
437	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
438	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
439	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
440	[BUG]  [BUGGY]  if(amount  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	69	None	replace
441	[BUG]  [BUGGY]  offset  -=  amount  +  1;  ++=  amount  +  1;  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  ++=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    1;    ++=  amount  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
442	[BUG]  [BUGGY]  offset  -=  amount  +  1;  -=  amount  +  1;  [CE]  illegal  start  of  expression  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    1;    -=  amount  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
443	[BUG]  [BUGGY]  offset  -=  len;  int  offset  -=  len;  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  int  offset  -=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    len;    int  offset  -=  len;	  	non-compiled	[CE]  ';'  expected	13	None	add
444	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [CE]  cannot  find  symbol  _offset  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    _offset  +=  len;  offset  +=  len;  _outputTail  =  0;	  	non-compiled	[CE]  cannot  find  symbol  _offset	38	None	add
445	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
446	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
447	[BUG]  [BUGGY]  int  len  =  text.length()  +  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  len  =  text.length()  +  room;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  len  =  text.length()  +  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	66	None	replace
448	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
449	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
450	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  offset  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  offset  =  len;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
451	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  offset  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  offset  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  offset  =  len;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
452	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
453	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
454	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
455	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  }	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
457	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  }	  _outputTail    =    len;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
458	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
459	[BUG]  [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
460	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
461	[BUG]  [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
462	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
463	[BUG]  [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
464	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
465	[BUG]  [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    if(amount  >=  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	49	1	add
466	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    	non-compiled	[CE]  ';'  expected	94	None	replace
467	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    	non-compiled	[CE]  ';'  expected	94	None	replace
468	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    	non-compiled	[CE]  ';'  expected	94	None	replace
469	[BUG]  [BUGGY]  int  offset  -=  amount;  _offset  -=  amount;  [CE]  ';'  expected  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  offset  -=  amount;  _offset  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  offset  -=  amount;  _offset  -=  amount;	  offset    -=    amount;    _offset    -=    amount;    	non-compiled	[CE]  ';'  expected	44	None	replace
470	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
471	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
472	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  offset    +=    amount    -    1;    _outputBuffer.append(text,    offset    +    amount    -    1);    	non-compiled	[CE]  ';'  expected	86	None	replace
473	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputBuffer.append(text,    offset    +    amount    -    1);    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
474	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    =    len;    _outputTail  =  amount;	  	compilable	  [FE]  AssertionFailedError  	55	1	add
475	[BUG]  [BUGGY]  _outputTail  =  len;  _outputTail  =  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  _outputTail  =  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    _outputTail  =  amount;	  	compilable	  [FE]  AssertionFailedError  	55	1	add
476	[BUG]  [BUGGY]  _outputTail  =  len;  (_outputTail  =  len;  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  (_outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    (_outputTail  =  len;	  	non-compiled	[CE]  ')'  expected	55	None	add
477	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
478	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
479	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
480	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
481	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
482	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
483	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
484	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
485	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
486	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	45	None	add
487	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	45	None	add
488	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	45	None	add
489	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	45	None	add
490	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  _outputTail  =  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    -    2;    _outputTail  =  amount  -  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	1	add
491	[BUG]  [BUGGY]  offset  +=  amount  -  2;  _outputTail  =  amount  -  2;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  _outputTail  =  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    -    2;    _outputTail  =  amount  -  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	30	1	add
492	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  AssertionFailedError  	91	1	replace
493	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  AssertionFailedError  	91	1	replace
494	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	1	replace
495	[BUG]  [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	91	1	replace
496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
497	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
499	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
501	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
502	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  offset  +=  amount  /  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    +=    amount    /    1;    offset  +=  amount  /  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
503	[BUG]  [BUGGY]  offset  +=  amount  /  1;  offset  +=  amount  /  2;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  offset  +=  amount  /  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    /    1;    offset  +=  amount  /  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	32	1	add
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
505	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	90	1	replace
506	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
507	[BUG]  [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	90	1	replace
508	[BUG]  [BUGGY]  offset  +=  amount  -  1;  _output  +=  amount;  [CE]  cannot  find  symbol  _output  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  1;  _output  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  amount  -  1;  _output  +=  amount;	  offset    +=    amount    -    1;    _output    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol  _output	61	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
510	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
511	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
512	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
513	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
514	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  +=  amount;  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
515	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  offset  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    offset  =  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
516	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  offset  =  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  offset  =  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    offset  =  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
517	[BUG]  [BUGGY]  if(amount  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	70	None	replace
518	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
519	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
520	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  *  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  -=  amount  *  2;	  offset    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
521	[BUG]  [BUGGY]  offset  -=  amount  *  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  *  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount  *  2;	  offset    -=    amount    +    2;    	compilable	  [FE]  StringIndexOutOfBoundsException  	65	1	replace
522	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
523	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
524	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
525	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
526	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  -=  amount  /  1;	  offset    +=    amount    /    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	33	1	replace
527	[BUG]  [BUGGY]  offset  -=  amount  /  1;  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount  /  1;	  offset    +=    amount    /    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	33	1	replace
528	[BUG]  [BUGGY]  _writer.writeRaw(text,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRaw(text,  _outputBuffer);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRaw(text,  _outputBuffer);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
529	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }	  offset    +=    amount    -    1;    _outputBuffer.append(text);    offset    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
530	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
531	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
532	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
533	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
534	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
535	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
536	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
537	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
538	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
539	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
540	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  [CE]  ';'  expected  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =	  offset    +=    len;    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	63	None	replace
541	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
542	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
543	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  int  _outputTail  +=  amount  -  1;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  int  _outputTail  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    int  _outputTail  +=  amount  -  1;	  	non-compiled	[CE]  ';'  expected	71	None	add
544	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +=  amount  -  1);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +=  amount  -  1);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +=  amount  -  1);	  	non-compiled	[CE]  ')'  expected	71	None	add
545	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1);	  	non-compiled	[CE]  ')'  expected	71	None	add
546	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount  +  1;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
547	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room)))  {  _outputTail  +=  amount  +  1;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room)))  {  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room)))  {  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
548	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputMaxContiguous  >  0))  {  _outputTail  +=  amount  +  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputMaxContiguous  >  0))  {  _outputTail  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputMaxContiguous  >  0))  {  _outputTail  +=  amount  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
549	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount  +  1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  ==  0)  &&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount  +  1;  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
550	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  3;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset  +=  amount  +  3;	  offset    +=    amount    +    1;    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
551	[BUG]  [BUGGY]  offset  +=  amount  +  3;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  +  3;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  amount  +  3;	  offset    +=    amount    +    1;    offset    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	2	1	replace
552	[BUG]  [BUGGY]  _outputTail  +=  amount.length;  [CE]  int  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount.length;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount.length;	  _outputTail    +=    length;    	non-compiled	[CE]  int  cannot  be  dereferenced	77	None	replace
553	[BUG]  [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  Literal.writeRaw(text,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Literal  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  Literal.writeRaw(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    _outputTail  -=  amount;  Literal.writeRaw(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Literal	19	None	add
554	[BUG]  [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  Literal.writeRaw(text,  offset+len,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  Literal  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  Literal.writeRaw(text,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    _outputTail  -=  amount;  Literal.writeRaw(text,  offset+len,  _outputBuffer,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  Literal	19	None	add
555	[BUG]  [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  Literal.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Literal  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  _outputTail  -=  amount;  Literal.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    _outputTail  -=  amount;  Literal.writeRawLong(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Literal	19	None	add
556	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
557	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
558	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
559	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	4	1	replace
560	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputHead  -=  amount  +  2;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
561	[BUG]  [BUGGY]  _outputHead  -=  amount  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead  -=  amount  +  2;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
562	[BUG]  [BUGGY]  SHORT_WRITE.writeRawLong(len);  [CE]  int  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  SHORT_WRITE.writeRawLong(len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	SHORT_WRITE.writeRawLong(len);	          _writer.writeRawLong(len);    	non-compiled	[CE]  int  cannot  be  dereferenced	52	None	replace
563	[BUG]  [BUGGY]  _writer.writeRaw(amount);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRaw(amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRaw(amount);	          _writer.writeRawLong(len);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
564	[BUG]  [BUGGY]  _writer.writeRawLong(anchor);  [CE]  cannot  find  symbol  anchor  [FE]                    AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(anchor);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(anchor);	          _writer.writeRawLong(len);    	non-compiled	[CE]  cannot  find  symbol  anchor	52	None	replace
565	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	58	None	replace
566	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	58	None	replace
567	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
568	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
569	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
570	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  =  text.charAt(len  -  1);  _outputTail  =  text.charAt(  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  =  text.charAt(len  -  1);  _outputTail  =  text.charAt(  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  =  text.charAt(len  -  1);  _outputTail  =  text.charAt(	  	non-compiled	[CE]  ')'  expected	7	None	add
571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
572	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  +=  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
573	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  =  text.charAt(len  -  1);  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  =  text.charAt(len  -  1);  _outputTail  +=  length;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  room)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _outputTail  =  text.charAt(len  -  1);  _outputTail  +=  length;  }	  	non-compiled	[CE]  cannot  find  symbol  length	7	None	add
574	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    len;    _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
575	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
576	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  -=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    len;    offset  -=  len;  _outputTail  +=  len;	  	compilable	  [FE]  AssertionFailedError  	36	1	add
577	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  -=  len;  _outputTail  +=  len;  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  -=  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    offset  -=  len;  _outputTail  +=  len;	  	compilable	  [FE]  AssertionFailedError  	36	1	add
578	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  +=  len;  _outputTail  +=  Len;  [CE]  cannot  find  symbol  Len  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  offset  +=  len;  _outputTail  +=  Len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    offset  +=  len;  _outputTail  +=  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	36	None	add
579	[BUG]  [BUGGY]  _outputTail  +=  len;  int  len  =  text.length();  _outputTail  +=  len;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  int  len  =  text.length();  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    int  len  =  text.length();  _outputTail  +=  len;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	15	None	add
580	[BUG]  [BUGGY]  _outputTail  +=  len;  ((  _outputTail  +  len)  >=  _outputEnd);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  ((  _outputTail  +  len)  >=  _outputEnd);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    ((  _outputTail  +  len)  >=  _outputEnd);	  	non-compiled	[CE]  not  a  statement	15	None	add
581	[BUG]  [BUGGY]  _outputTail  +=  len;  ((  _outputTail  +  len)  >=  0);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  ((  _outputTail  +  len)  >=  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    ((  _outputTail  +  len)  >=  0);	  	non-compiled	[CE]  not  a  statement	15	None	add
582	[BUG]  [BUGGY]  _outputTail  +=  len;  int  len  =  text.length();  _outputTail  +=  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  int  len  =  text.length();  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    int  len  =  text.length();  _outputTail  +=  amount;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	15	None	add
583	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(_outputTail  >  room)  {  offset  -=  amount;  offset  -=  amount;  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  AssertionFailedError  	68	1	replace
584	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  [FE]  AssertionFailedError  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >  room)  {  offset  -=  amount;  offset  -=  amount;  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  AssertionFailedError  	68	1	replace
585	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  _flushBuffer();  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
586	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  _flushBuffer();  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
587	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  len  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  len  -=  amount;  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
588	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  len  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  len  -=  amount;  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	68	1	replace
589	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)  >=  0);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)  >=  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)  >=  0);	  	non-compiled	[CE]  not  a  statement	23	None	add
590	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)!=  0);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)!=  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)!=  0);	  	non-compiled	[CE]  not  a  statement	23	None	add
591	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)  ==  0);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)  ==  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    ((  SHORT_WRITE  +  amount  *  SHORT_WRITE)  ==  0);	  	non-compiled	[CE]  not  a  statement	23	None	add
592	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
593	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  =  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
594	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  ';'  expected	9	None	replace
595	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    =    amount;    if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
596	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
597	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  qlen;  }  [CE]  cannot  find  symbol  qlen  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  qlen;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  qlen;  }	  	non-compiled	[CE]  cannot  find  symbol  qlen	87	None	add
598	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    =    amount;    if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
599	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
600	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  null;  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  null;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    if(amount  >=  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  null;  }	  	non-compiled	[CE]  incompatible  types	87	None	add
601	[BUG]  [BUGGY]  offset  -=  amount  -  1;  -=  amount  -  1;  [CE]  illegal  start  of  expression  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    -    1;    -=  amount  -  1;	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
603	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
605	[BUG]  [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
606	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  ==  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  ==  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
607	[BUG]  [BUGGY]  if(amount  ==  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  ==  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  ==  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
608	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
609	[BUG]  [BUGGY]  if(amount  >  _outputEnd)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  _outputEnd)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  _outputEnd)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
610	[BUG]  [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  -=  amount;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  -=  amount;	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
611	[BUG]  [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
612	[BUG]  [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
613	[BUG]  [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  -=  amount;  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    _outputHead  -=  amount;  Set  <  String>  len  =  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  -=  amount;	  	non-compiled	[CE]  cannot  find  symbol	78	None	add
614	[BUG]  [BUGGY]  _writeRawLong(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writeRawLong(text);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writeRawLong(text);	          _flushBuffer();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
615	[BUG]  [BUGGY]  _writeRawLong();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writeRawLong();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writeRawLong();	          _flushBuffer();    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
616	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append(text);    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
617	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append(text);    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
618	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
619	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
620	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
621	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
622	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)||((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  len;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)||((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)||((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  len;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	59	None	replace
623	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
624	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  StringIndexOutOfBoundsException  	39	1	replace
625	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('n');    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
626	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >  room)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('n');    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
627	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  =  len;  int  len  =  text.length();  offset  +=  len;  _outputTail  =  len;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  int  len  =  text.length();  offset  +=  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    =    len;    int  len  =  text.length();  offset  +=  len;  _outputTail  =  len;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	62	None	add
628	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  int  len  =  text.length();  offset  +=  len;  _outputTail  +=  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  int  len  =  text.length();  offset  +=  len;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    amount;    int  len  =  text.length();  offset  +=  len;  _outputTail  +=  amount;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	75	None	add
629	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  +=  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  +=  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
630	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  +=  amount  -  1;  _outputTail  =  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  _outputTail  +=  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    _outputTail  +=  amount  -  1;  _outputTail  =  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	84	1	add
631	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0)))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
632	[BUG]  [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	((  _outputTail  +  amount)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  <  =  0)))  {  _outputTail  +=  amount;	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0)))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
633	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
634	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
635	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  alpha  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  alpha	89	None	add
636	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
637	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	89	1	add
638	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	10	None	replace
639	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  _outputEnd)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	10	None	replace
640	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  =  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        offset    +=    amount    -    1;    offset  =  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
641	[BUG]  [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  =  amount  -  1;  offset  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  offset  =  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        offset    +=    amount    -    1;    offset  =  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
642	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  null;  }  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  null;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  null;  }	  	non-compiled	[CE]  incompatible  types	92	None	add
643	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  _writer.write(text);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	92	1	add
644	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  _writer.write(text);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  _writer.write(text);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	92	1	add
645	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }  else  {  _outputLong  =  SHORT_WRITE;  _output  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }  else  {  _outputLong  =  SHORT_WRITE;  _output  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  }  else  {  _outputLong  =  SHORT_WRITE;  _output	  	non-compiled	[CE]  ';'  expected	92	None	add
646	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }	  offset    +=    amount    -    1;    offset    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
647	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }	  offset    +=    amount    -    1;    offset    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
648	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >=  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }	  offset    +=    amount    -    1;    offset    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
649	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  -  1;  offset  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  return;  }	  offset    +=    amount    -    1;    offset    +=    amount    -    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	26	1	replace
650	[BUG]  [BUGGY]  _writer.writeLong(text,  0,  len);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeLong(text,  0,  len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeLong(text,  0,  len);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
651	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  amount);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRaw(text,  0,  amount);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRaw(text,  0,  amount);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
652	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [CE]  unclosed  character  literal  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
653	[BUG]  [BUGGY]  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  [CE]  unclosed  character  literal  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputBuffer.append('ufffd');  offset  +=  amount  +  1;	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
654	[BUG]  [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  unclosed  character  literal  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
655	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        offset    +=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
656	[BUG]  [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        offset    +=    amount    +    1;    _flushBuffer();  offset  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
657	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _writer.write(text,  0,  len);  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        offset    +=    amount    +    1;    _writer.write(text,  0,  len);  offset  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
658	[BUG]  [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _writer.write(text,  0,  len);  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _writer.write(text,  0,  len);  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        offset    +=    amount    +    1;    _writer.write(text,  0,  len);  offset  +=  amount  +  1;  offset  +=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	1	1	add
659	[BUG]  [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _writeRawLong(text);  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    offset  +=  amount  +  1;  _writeRawLong(text);  offset  +=  amount  +  1;  offset  +=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        offset    +=    amount    +    1;    _writeRawLong(text);  offset  +=  amount  +  1;  offset  +=  amount  +  1;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
660	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  _outputTail  +=  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    =    len;    _outputTail  +=  len;  _outputTail  =  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
661	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  =  len;  _outputTail  +=  len;  _outputTail  =  len;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  _outputTail  +=  len;  _outputTail  =  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    =    len;    _outputTail  +=  len;  _outputTail  =  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	62	1	add
662	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  =  len;  offset  +=  len;  _outputTail  =  Len;  [CE]  cannot  find  symbol  Len  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  =  len;  offset  +=  len;  _outputTail  =  Len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    =    len;    offset  +=  len;  _outputTail  =  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	62	None	add
663	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  +=  level  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  +=  amount  +  1;  int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  +=  level  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    +=    amount    +    1;    int  len  =  text.length();  offset  +=  amount  +  1;  _outputTail  +=  level  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	3	None	add
664	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  +=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
665	[BUG]  [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  +=  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    +    1;    _outputTail  =  amount  +  1;  _outputTail  +=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        +        1;        _outputTail    =    amount    +    1;    _outputTail  +=  amount  +  1;  _outputTail  =  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	add
666	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
667	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
668	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
669	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  offset    -=    amount;    offset    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	41	1	replace
670	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  offset    -=    amount;    offset    -=    amount;    	non-compiled	[CE]  'void'  type  not  allowed  here	41	None	replace
671	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
672	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
673	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
674	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	34	1	add
675	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	34	None	add
676	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  qlen;  }  [CE]  cannot  find  symbol  qlen  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  qlen;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  qlen;  }	  	non-compiled	[CE]  cannot  find  symbol  qlen	34	None	add
677	[BUG]  [BUGGY]  offset  -=  amount;  }  else  if(len  >  room)  {  offset  +=  amount;  }  [CE]  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  }  else  if(len  >  room)  {  offset  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  }  else  if(len  >  room)  {  offset  +=  amount;  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	non-compiled	[CE]  	68	None	replace
678	[BUG]  [BUGGY]  offset  -=  amount;  }  else  if(len  >  room)  {  offset++;  len  -=  amount;  }  [CE]  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount;  }  else  if(len  >  room)  {  offset++;  len  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  -=  amount;  }  else  if(len  >  room)  {  offset++;  len  -=  amount;  }	  offset    -=    amount;    offset    -=    amount;    }    len    -=    amount;    	non-compiled	[CE]  	68	None	replace
679	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
680	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  StringIndexOutOfBoundsException  	6	1	replace
681	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
682	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  =  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	6	1	replace
683	[BUG]  [BUGGY]  if(_outputBuffer!=  null)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputBuffer!=  null)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputBuffer!=  null)  {  offset  +=  amount  -  1;  _outputBuffer.append(text);  offset  +=  amount  -  1;  }	  offset    +=    amount    -    1;    _outputBuffer.append(text);    offset    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
684	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    len;    _outputTail  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	add
685	[BUG]  [BUGGY]  offset  -=  len;  _outputTail  -=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  len;  _outputTail  -=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    len;    _outputTail  -=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	13	1	add
686	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  +=  length  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  +=  amount  -  1;  int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  +=  length  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    +=    amount    -    1;    int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  +=  length  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	27	None	add
687	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _output  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _output  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _output	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0)))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
688	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0)))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
689	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _output  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _output  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _output	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0)))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
690	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
691	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
692	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  <  SHORT_WRITE)  {  _outputTail  +=  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  }	  _outputTail    +=    len;    	non-compiled	[CE]  'void'  type  not  allowed  here	16	None	replace
693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
694	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  _outputTail    +=    len;    	compilable	  [FE]  AssertionFailedError  	16	1	replace
695	[BUG]  [BUGGY]  _outputHead  -=  amount;  int  len  =  text.length();  _outputHead  -=  level;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  amount;  int  len  =  text.length();  _outputHead  -=  level;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead    -=    amount;    int  len  =  text.length();  _outputHead  -=  level;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	78	None	add
696	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  >  0))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	59	None	replace
697	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  >  0))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	59	None	replace
698	[BUG]  [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount;  ((  _outputTail  +  len)  >=  0)&&((  _outputHead  >  0)&&(_outputTail  >  0))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    >    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	59	None	replace
699	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  _outputTail;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  _outputTail;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  _outputTail;	  	non-compiled	[CE]  not  a  statement	21	None	add
700	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  _outputTail;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  ==  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  _outputTail;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  ==  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  _outputTail;	  	non-compiled	[CE]  not  a  statement	21	None	add
701	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+len,  _outputBuffer,  0):  _outputTail;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+len,  _outputBuffer,  0):  _outputTail;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+len,  _outputBuffer,  0):  _outputTail;	  	non-compiled	[CE]  not  a  statement	21	None	add
702	[BUG]  [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0)  :  text.length();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  +  1;  ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0)  :  text.length();  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    +    1;    ((  _outputTail  +  amount  +  1)  >=  0)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0)  :  text.length();	  	non-compiled	[CE]  not  a  statement	21	None	add
703	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  int  len  =  text.length();  _outputTail  +=  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  amount;  int  len  =  text.length();  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    amount;    int  len  =  text.length();  _outputTail  +=  amount;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	75	None	add
704	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  _outputEnd  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    -    1;    _outputEnd  -=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	73	1	add
705	[BUG]  [BUGGY]  offset  -=  amount  -  1;  _outputEnd  -=  amount  -  1;  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  _outputEnd  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    -    1;    _outputEnd  -=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	73	1	add
706	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  _outputHead  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    -    1;    _outputHead  -=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	73	1	add
707	[BUG]  [BUGGY]  offset  -=  amount  -  1;  _outputHead  -=  amount  -  1;  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  -  1;  _outputHead  -=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    -    1;    _outputHead  -=  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	73	1	add
708	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
709	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  offset    +=    amount    -    1;    _outputTail    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	85	1	replace
710	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  _outputEnd  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    +    1;    _outputEnd  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
711	[BUG]  [BUGGY]  offset  -=  amount  +  1;  _outputEnd  -=  amount  +  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  _outputEnd  -=  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    1;    _outputEnd  -=  amount  +  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	17	1	add
712	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
713	[BUG]  [BUGGY]  offset  -=  amount  +  1;  _outputTail  =  amount  +  1;  [FE]  AssertionFailedError  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  1;  _outputTail  =  amount  +  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    1;    _outputTail  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
714	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [CE]  unclosed  character  literal  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
715	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [CE]  unclosed  character  literal  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  _outputEnd)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
716	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [CE]  unclosed  character  literal  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputBuffer.append('ufffd');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('ufffd');    offset    +=    amount    +    1;    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
717	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
718	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
719	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
720	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	42	1	add
721	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  ')'  expected	42	None	add
722	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
723	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
724	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
725	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
726	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
727	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
728	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
729	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	45	1	add
730	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;	  	non-compiled	[CE]  not  a  statement	23	None	add
731	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;	  	non-compiled	[CE]  not  a  statement	23	None	add
732	[BUG]  [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  text;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  *  SHORT_WRITE;  ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  text;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    *    SHORT_WRITE;    ((  SHORT_WRITE  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  text;	  	non-compiled	[CE]  not  a  statement	23	None	add
733	[BUG]  [BUGGY]  _outputTail  +=  level;  [CE]  cannot  find  symbol  level  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  level;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  level;	  _outputTail    +=    length;    	non-compiled	[CE]  cannot  find  symbol  level	77	None	replace
734	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
735	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  offset  +=  amount  +  1;  _outputTail  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputTail    +=    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
736	[BUG]  [BUGGY]  _writer.writeRaw(text,  null);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRaw(text,  null);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRaw(text,  null);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
737	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
738	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
739	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
740	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
741	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
742	[BUG]  [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    _outputTail  +=  amount;  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        _outputTail    +=    amount;    if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	7	1	add
743	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  +=  amount;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  not  a  statement	9	None	replace
744	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  _outputEnd  -=  _outputBuffer.finishCurrentSegment();  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    +=    amount;    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
745	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
746	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }	  _outputTail    +=    amount;    _outputTail    +=    amount;    	compilable	  [FE]  AssertionFailedError  	8	1	replace
747	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
748	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
749	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
750	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  _outputTail  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  }	  offset    +=    len;    _outputTail    =    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	1	replace
751	[BUG]  [BUGGY]  _outputHead  -=  level;  [CE]  cannot  find  symbol  level  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  level;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead  -=  level;	  _outputHead    -=    amount;    	non-compiled	[CE]  cannot  find  symbol  level	79	None	replace
752	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputHead  -=  2;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
753	[BUG]  [BUGGY]  _outputHead  -=  2;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputHead  -=  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputHead  -=  2;	  _outputHead    -=    amount;    	compilable	  [FE]  AssertionFailedError  	79	1	replace
754	[BUG]  [BUGGY]  if(_outputTail  >=  amount)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  amount)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >=  amount)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	10	None	replace
755	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    	non-compiled	[CE]  ';'  expected	94	None	replace
756	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    =    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
757	[BUG]  [BUGGY]  if(_outputBuffer!=  null)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputBuffer!=  null)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputBuffer!=  null)  {  offset  +=  amount  +  1;  _outputBuffer.append(text);  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append(text);    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
758	[BUG]  [BUGGY]  offset  +=  length  -  1;  [CE]  cannot  find  symbol  length  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  length  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset  +=  length  -  1;	  offset    +=    amount    -    1;    offset    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol  length	26	None	replace
759	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _writer.write(text,  0,  len);  offset  +=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        offset    +=    amount    -    1;    _writer.write(text,  0,  len);  offset  +=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
760	[BUG]  [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _writer.write(text,  0,  len);  offset  +=  amount  -  1;  offset  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _writer.write(text,  0,  len);  offset  +=  amount  -  1;  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        offset    +=    amount    -    1;    _writer.write(text,  0,  len);  offset  +=  amount  -  1;  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
761	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _writer.write(text,  0,  len);  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        amount        -        1;        offset    +=    amount    -    1;    _writer.write(text,  0,  len);  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
762	[BUG]  [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _writer.write(text,  0,  len);  offset  +=  amount  -  1;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    offset  +=  amount  -  1;  _writer.write(text,  0,  len);  offset  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        offset    +=    amount    -    1;    _writer.write(text,  0,  len);  offset  +=  amount  -  1;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	25	1	add
763	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
764	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
765	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _writer.write(text);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _writer.write(text);  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
766	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _writer.write(text);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _writer.write(text);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  else  {  _writer.write(text);  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
767	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
768	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
769	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
770	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	47	1	add
771	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
772	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
773	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
774	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
775	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
776	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  _outputTail  +=  len;  }  else  {  _flushBuffer();  }	  offset    +=    len;    _outputTail    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	37	1	replace
777	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
778	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  _outputTail  -=  amount;  }  else  {  _flushBuffer();  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	43	1	replace
779	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  -=  amount;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
780	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  -=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  -=  amount;  }	  offset    -=    amount;    _outputTail    -=    amount;    	compilable	  [FE]  AssertionFailedError  	43	1	replace
781	[BUG]  [BUGGY]  _writer.writeRawLong(text,  length);  [CE]  cannot  find  symbol  length  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(text,  length);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(text,  length);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
782	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  /  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  amount  /  2;	  offset    +=    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
783	[BUG]  [BUGGY]  _outputTail  +=  amount  /  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  /  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  amount  /  2;	  offset    +=    amount    /    1;    	compilable	  [FE]  AssertionFailedError  	33	1	replace
784	[BUG]  [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    amount    -    1;    _outputTail  =  amount  -  1;  int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        amount        -        1;        _outputTail    =    amount    -    1;    int  len  =  text.length();  offset  +=  amount  -  1;  _outputTail  =  amount  -  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	84	None	add
785	[BUG]  [BUGGY]  _outputTail  -=  level;  [CE]  cannot  find  symbol  level  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  level;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  -=  level;	  _outputTail    -=    amount;    	non-compiled	[CE]  cannot  find  symbol  level	20	None	replace
786	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  _flushBuffer();  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
787	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  _flushBuffer();  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	88	1	replace
788	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  AssertionFailedError  	88	1	replace
789	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }	  offset    -=    amount;    _outputTail    =    amount;    	compilable	  [FE]  AssertionFailedError  	88	1	replace
790	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)||((  _outputHead  >  0)&&  _outputTail  <  =  0))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    ||((    _outputHead    >    0)&&(_outputTail    <    =    0))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
791	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    =    amount;    if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
792	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
793	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        _outputTail    =    amount;    if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
794	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    if(amount  >  0)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	87	1	add
795	[BUG]  [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    _outputTail  =  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        _outputTail    =    amount;    if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =	  	non-compiled	[CE]  ';'  expected	87	None	add
796	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  =  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    len;    _outputTail  =  len;  _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
797	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  =  len;  _outputTail  +=  len;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  =  len;  _outputTail  +=  len;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    _outputTail  =  len;  _outputTail  +=  len;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
798	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        _outputTail    +=    len;    _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
799	[BUG]  [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  amount;  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    _outputTail  +=  len;  _outputTail  +=  amount;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        _outputTail    +=    len;    _outputTail  +=  amount;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	36	1	add
800	[BUG]  [BUGGY]  offset  +=  amount  /  1;  _outputBuffer.append(text);  offset  +=  amount  /  1;  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  _outputBuffer.append(text);  offset  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    /    1;    _outputBuffer.append(text);  offset  +=  amount  /  1;	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
801	[BUG]  [BUGGY]  offset  +=  amount  /  1;  _outputBuffer.append('ufffd');  offset  +=  amount  /  1;  [CE]  unclosed  character  literal  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  _outputBuffer.append('ufffd');  offset  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    /    1;    _outputBuffer.append('ufffd');  offset  +=  amount  /  1;	  	non-compiled	[CE]  unclosed  character  literal	32	None	add
802	[BUG]  [BUGGY]  offset  +=  amount  /  1;  _outputBuffer.append('n');  offset  +=  amount  /  1;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  /  1;  _outputBuffer.append('n');  offset  +=  amount  /  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    /    1;    _outputBuffer.append('n');  offset  +=  amount  /  1;	  	non-compiled	[CE]  cannot  find  symbol	32	None	add
803	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
804	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	89	1	add
805	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  else  {  _outputBuffer  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  else  {  _outputBuffer  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  else  {  _outputBuffer	  	non-compiled	[CE]  ';'  expected	89	None	add
806	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _out  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _out  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _out	  	non-compiled	[CE]  ';'  expected	89	None	add
807	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
808	[BUG]  [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
809	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
810	[BUG]  [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _flushBuffer();  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	50	1	replace
811	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputBuffer.append(text,  offset  +  amount  -  1);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  offset    +=    amount    -    1;    _outputBuffer.append(text,    offset    +    amount    -    1);    	non-compiled	[CE]  ';'  expected	86	None	replace
812	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
813	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  len;  _outputTail  +=  amount;  }  else  {  _flushBuffer();  }	  offset    +=    len;    _outputTail    +=    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	replace
814	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
815	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
816	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
817	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  _outputTail  =  len;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	93	1	replace
818	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ')'  expected	91	None	replace
819	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  AssertionFailedError  	91	1	replace
820	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	compilable	  [FE]  AssertionFailedError  	91	1	replace
821	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  ';'  expected	91	None	replace
822	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.charAt(offset,  offset+len,  _outputBuffer,  0));  _outputHead  =  0;  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.charAt(offset,  offset+len,  _outputBuffer,  0));  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.charAt(offset,  offset+len,  _outputBuffer,  0));  _outputHead  =  0;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	91	None	replace
823	[BUG]  [BUGGY]  offset  +=  amount  -  2;  _output  +=  amount  -  2;  [CE]  cannot  find  symbol  _output  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  +=  amount  -  2;  _output  +=  amount  -  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    +=    amount    -    2;    _output  +=  amount  -  2;	  	non-compiled	[CE]  cannot  find  symbol  _output	30	None	add
824	[BUG]  [BUGGY]  int  _output  +=  amount  -  1;  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  int  _output  +=  amount  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	int  _output  +=  amount  -  1;	  offset    +=    amount    -    1;    _output    +=    amount    -    1;    	non-compiled	[CE]  ';'  expected	61	None	replace
825	[BUG]  [BUGGY]          _flushBuffer();  _writeRawLong(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _writeRawLong(text);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    _writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol	49	None	add
826	[BUG]  [BUGGY]          _flushBuffer();  _flushBuffer(len);  [CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]          _flushBuffer();  _flushBuffer(len);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	                _flushBuffer();    _flushBuffer(len);	  	non-compiled	[CE]  method  _flushBuffer  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	49	None	add
827	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ')'  expected	90	None	replace
828	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0));  _outputTail  +=  amount;  }  [CE]  'void'  type  not  allowed  here  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0));  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.getChars(offset,  offset+len,  _outputBuffer,  0));  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	90	None	replace
829	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.charAt(offset,  offset+len,  _outputBuffer,  0));  _outputTail  +=  amount;  }  [CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.charAt(offset,  offset+len,  _outputBuffer,  0));  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.append(text.charAt(offset,  offset+len,  _outputBuffer,  0));  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  method  charAt  in  class  String  cannot  be  applied  to  given  types;	90	None	replace
830	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	92	None	add
831	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
832	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  +=  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	92	1	add
833	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  +=  amount;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =	  	non-compiled	[CE]  ';'  expected	92	None	add
834	[BUG]  [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _outputBuffer.append(text);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail    +=    amount;    if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _outputBuffer.append(text);  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail        +=        amount;        if(amount    >    0)    {    _outputTail    +=    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputHead    =    0;    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _outputBuffer.append(text);  }	  	non-compiled	[CE]  cannot  find  symbol	92	None	add
835	[BUG]  [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [CE]  <identifier>  expected  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;	  	non-compiled	[CE]  <identifier>  expected	19	None	add
836	[BUG]  [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  [CE]  <identifier>  expected  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  0;	  	non-compiled	[CE]  <identifier>  expected	19	None	add
837	[BUG]  [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  <identifier>  expected	19	None	add
838	[BUG]  [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  -=  amount;  if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    -=    amount;    if(_outputTail  >  amount)  {  _outputTail  -=  amount;  }  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  <identifier>  expected	19	None	add
839	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  _outputEnd?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  not  a  statement	12	None	replace
840	[BUG]  [BUGGY]  if(len  >  room)  {  _outputTail  +=  amount;  _outputEnd?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  _outputTail  +=  amount;  _outputEnd?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  _outputTail  +=  amount;  _outputEnd?  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  not  a  statement	12	None	replace
841	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  _outputBuffer.finishCurrentSegment()  :  SHORT_WRITE;  _outputTail  =  len;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    SHORT_WRITE;    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	12	None	replace
842	[BUG]  [BUGGY]  _outputTail  =  length;  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  length;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  =  length;	  _outputTail    =    len;    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
843	[BUG]  [BUGGY]  _outputTail  =  level;  [CE]  cannot  find  symbol  level  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  level;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  =  level;	  _outputTail    =    len;    	non-compiled	[CE]  cannot  find  symbol  level	56	None	replace
844	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  +  1;  _outputBuffer.append('n');  offset  +=  amount  +  1;  }	  offset    +=    amount    +    1;    _outputBuffer.append('n');    offset    +=    amount    +    1;    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
845	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  _outputEnd  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset    -=    amount    +    2;    _outputEnd  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
846	[BUG]  [BUGGY]  offset  -=  amount  +  2;  _outputEnd  -=  amount  +  2;  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset  -=  amount  +  2;  _outputEnd  -=  amount  +  2;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset    -=    amount    +    2;    _outputEnd  -=  amount  +  2;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	64	1	add
847	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len):  text.substring(len,  _outputBuffer,  _outputTail);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len):  text.substring(len,  _outputBuffer,  _outputTail);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len):  text.substring(len,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  not  a  statement	71	None	add
848	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len):  text.substring(offset,  offset+alpha,  _outputBuffer,  _outputTail));  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len):  text.substring(offset,  offset+alpha,  _outputBuffer,  _outputTail));  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len):  text.substring(offset,  offset+alpha,  _outputBuffer,  _outputTail));	  	non-compiled	[CE]  not  a  statement	71	None	add
849	[BUG]  [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len)  :  text.substring(len,  _outputBuffer,  _outputTail));  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  amount  -  1;  ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len)  :  text.substring(len,  _outputBuffer,  _outputTail));  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    amount    -    1;    ((  _outputTail  +  amount  -  1)  >=  _outputEnd)?  text.substring(0,  len)  :  text.substring(len,  _outputBuffer,  _outputTail));	  	non-compiled	[CE]  not  a  statement	71	None	add
850	[BUG]  [BUGGY]  _writer.writeRawLong(alpha);  [CE]  cannot  find  symbol  alpha  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _writer.writeRawLong(alpha);  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_writer.writeRawLong(alpha);	          _writer.writeRawLong(len);    	non-compiled	[CE]  cannot  find  symbol  alpha	52	None	replace
851	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail  +=  len  -  1;	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
852	[BUG]  [BUGGY]  _outputTail  +=  len  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  len  -  1;	  _outputTail    +=    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	72	1	replace
853	[BUG]  [BUGGY]  _outputTail  +=  level  -  1;  [CE]  cannot  find  symbol  level  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  level  -  1;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail  +=  level  -  1;	  _outputTail    +=    amount    -    1;    	non-compiled	[CE]  cannot  find  symbol  level	72	None	replace
854	[BUG]  [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _out  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _out  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _out	  	non-compiled	[CE]  ')'  expected	55	None	add
855	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    =    len;    if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	55	1	add
856	[BUG]  [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	55	1	add
857	[BUG]  [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,	  	non-compiled	[CE]  ')'  expected	55	None	add
858	[BUG]  [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  =  len;  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    =    len;    if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	55	None	add
859	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  AssertionFailedError  	39	1	replace
860	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  offset    +=    len;    offset    +=    len;    _outputTail    =    0;    	compilable	  [FE]  AssertionFailedError  	39	1	replace
861	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
862	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  <  SHORT_WRITE)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
863	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
864	[BUG]  [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  +=  len;  offset  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  offset    +=    len;    offset    +=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
865	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    len;    if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
866	[BUG]  [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
867	[BUG]  [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+text,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  no  suitable  method  found  for  getChars(int,String,char[],int)  [FE]      AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+text,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+text,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,String,char[],int)	15	None	add
868	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	_outputTail    +=    len;    if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
869	[BUG]  [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  +=  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  0;  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	15	1	add
870	[BUG]  [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  _outputTail  +=  len;  if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	_outputTail    +=    len;    if(len  >  room)  {  _outputTail  +=  len;  }  else  {  _outputTail  =  SHORT_WRITE;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  	non-compiled	[CE]  ';'  expected	15	None	add
871	[BUG]  [BUGGY]  if(_outputTail  >=  amount)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >=  amount)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >=  amount)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
872	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(_outputTail  >  room)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(_outputTail  >  room)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputBuffer.finishCurrentSegment()  :  null;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)>    _outputEnd)?    _outputBuffer.finishCurrentSegment()    :    null;    	non-compiled	[CE]  not  a  statement	11	None	replace
873	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
874	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
875	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
876	[BUG]  [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(len  >  room)  {  offset  -=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  offset    -=    len;    	compilable	  [FE]  StringIndexOutOfBoundsException  	14	1	replace
877	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTail  +=  amount;  }	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
878	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _output  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _output  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _output	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
879	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTa  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTa  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  <  SHORT_WRITE)  {  _outputTail  +=  amount;  ((  _outputTail  +  amount)  >=  0)&&((  _outputHead  <  =  0)||(_outputTail  >  room))  {  _outputTa	  _outputTail    +=    amount;    ((    _outputTail    +    amount)    >=    0)    &&((    _outputHead    <    =    0)||(_outputTail    >    room))    {    _outputTail    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
880	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
881	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    if(amount  <  SHORT_WRITE)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
882	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
883	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
884	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        -=        amount;        offset    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
885	[BUG]  [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    -=    amount;    offset  -=  amount;  if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        -=        amount;        offset    -=    amount;    if(amount  >  0)  {  offset  -=  amount;  offset  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	40	1	add
886	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
887	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
888	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
889	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    if(len  >  room)  {  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
890	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _flushBuffer();  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	add	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    _flushBuffer();  offset  +=  len;  offset  +=  len;  _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
891	[BUG]  [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _flushBuffer();  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  offset    +=    len;    offset  +=  len;  _outputTail  =  0;  _flushBuffer();  offset  +=  len;  offset  +=  len;  _outputTail  =  0;  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	offset        +=        len;        offset    +=    len;    _outputTail    =    0;    _flushBuffer();  offset  +=  len;  offset  +=  len;  _outputTail  =  0;	  	compilable	  [FE]  StringIndexOutOfBoundsException  	38	1	add
892	[BUG]  [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [CE]  ';'  expected  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();      [BUGGY]  if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output  [BUGGY]      len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	490	490	1	replace	if(amount  >  0)  {  offset  +=  amount  -  1;  _outputTail  +=  amount  -  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _output	  offset    +=    amount    -    1;    _outputTail    +=    amount    -    1;    	non-compiled	[CE]  ';'  expected	28	None	replace
