bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _flushBuffer();  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_flushBuffer();	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _outputTail  =  _outputEnd;  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  _outputEnd;	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  _outputTail  =  _outputHead;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _outputTail  =  _outputHead;  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  _outputHead;	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  _outputBuffer[_outputTail];	  if(typeMsg    ==    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  _writer.write(c);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(c);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c);	  _writer.write(typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  _outputBuffer,  _outputTail);	  _writer.write(typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  typeMsg.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(typeMsg,  0,  typeMsg.length);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  typeMsg.length);	  _writer.write(typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  _writer.write(c,  typeMsg);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(c,  typeMsg);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  typeMsg);	  _writer.write(typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(typeMsg!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();	  if(_writer!=    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();	  if(_writer!=    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(typeMsg!=  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg    ==    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg    ==    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(typeMsg!=  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  c;  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  c;  }	  if(typeMsg    ==    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  if(typeMsg    ==    null)    {    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _outputTail  =  System.currentTimeMillis();  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  System.currentTimeMillis();	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);	  if(_writer!=    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputTail);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputTail);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.read(buf,  0,  _outputTail);	  if(_writer!=    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  for(int  i  =  1,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(typeMsg!=  null)  {  for(int  i  =  1,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  for(int  i  =  1,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg    ==    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  >  expected  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(typeMsg!=  null)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg    ==    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  >  expected	6	None	replace
22	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(typeMsg,  _outputBuffer);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  _outputBuffer);	  _writer.write(typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(buf,  start,  _outputBuffer,  _outputTail);	  if(typeMsg    ==    null)    {    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  _outputBuffer.length);	  if(typeMsg    ==    null)    {    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  _writer  =  _writer.finishCurrentSegment();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer  =  _writer.finishCurrentSegment();  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.finishCurrentSegment();	  if(_writer!=    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  if(_writer!=  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  if(_writer!=  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_writer!=  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  if(_writer!=    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  _outputBuffer,  _outputTail);	  if(typeMsg    ==    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
29	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  len);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  _writer.write(typeMsg,  0,  len);  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  len);	  if(typeMsg    ==    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;    [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [BUGGY]      [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
