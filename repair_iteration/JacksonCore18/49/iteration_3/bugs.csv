bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||(c  >=  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(c  >=  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(c  >=  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!Character.isDigit(c)))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  ||(_outputTail  >>  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >>  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >>  _outputEnd  &&!Character.isDigit(c)))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!Character.isDigit(c)))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.read(buf,  0,  _outputBuffer,  _outputTail);	  _writer    =    _writer.read(buf,    0,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputBuffer.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputBuffer.length);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.read(buf,  0,  _outputBuffer.length);	  _writer    =    _writer.read(buf,    0,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
5	[BUG]  [BUGGY]  _writer  =  _writer.read(buffer,  0,  _outputTail);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.read(buffer,  0,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.read(buffer,  0,  _outputTail);	  _writer    =    _writer.read(buf,    0,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
6	[BUG]  [BUGGY]  _writer  =  _writer.read(c,  0,  _outputTail);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.read(c,  0,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.read(c,  0,  _outputTail);	  _writer    =    _writer.read(buf,    0,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  ||(c!=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(c!=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(c!=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!c.isEmpty()))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
8	[BUG]  [BUGGY]  ||(c  >=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(c  >=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(c  >=  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!c.isEmpty()))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  ||(_outputTail  >>  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >>  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >>  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!c.isEmpty()))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
10	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  _outputTail);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  0,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  _outputTail);	  _writer.write(typeMsg,    0,    len);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
11	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  0,  c);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  c);	  _writer.write(typeMsg,    0,    len);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
12	[BUG]  [BUGGY]  _outputTail  =  c;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  c;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  c;	  _outputTail    =    _outputHead;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  _outputTail  =  0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  0;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  0;	  _outputTail    =    _outputHead;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    len    =    typeMsg.length;    for(int    i    =    0,    len    =    _outputBuffer.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
15	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer[_outputTail];  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer[_outputTail];  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer[_outputTail];  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    len    =    typeMsg.length;    for(int    i    =    0,    len    =    _outputBuffer.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
16	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  int  len  =  getTypeMsgLength();  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg!=  null)  {  int  len  =  getTypeMsgLength();  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  int  len  =  getTypeMsgLength();  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    len    =    typeMsg.length;    for(int    i    =    0,    len    =    _outputBuffer.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  _outputTail  =  -1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  -1;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  -1;	  _outputTail    =    _outputEnd;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
18	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  _writeBuffer[_outputTail]  =  c;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writeBuffer[_outputTail]  =  c;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writeBuffer[_outputTail]  =  c;	  if(typeMsg!=    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _writeBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	  ||(_outputTail    >=    _outputEnd    &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
21	[BUG]  [BUGGY]  ||(_outputTail  >>  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >>  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >>  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	  ||(_outputTail    >=    _outputEnd    &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
22	[BUG]  [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail  +  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(buf,  start,  _outputBuffer,  _outputTail  +  1);	  _writer.write(buf,    start,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
23	[BUG]  [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail  +  1,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail  +  1,  c);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(buf,  start,  _outputBuffer,  _outputTail  +  1,  c);	  _writer.write(buf,    start,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
24	[BUG]  [BUGGY]  _writer.write(buf,  0,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(buf,  0,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(buf,  0,  _outputBuffer,  _outputTail);	  _writer.write(buf,    start,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
25	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  1,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  1,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  for(int  i  =  1,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    for(int    i    =    1,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
26	[BUG]  [BUGGY]  _writer.write(c,  _outputBuffer,  typeMsg);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  _outputBuffer,  typeMsg);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  _outputBuffer,  typeMsg);	  _writer.write(c,    typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  _writer.write(c,  typeMsg,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  typeMsg,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  typeMsg,  _outputBuffer,  _outputTail);	  _writer.write(c,    typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
28	[BUG]  [BUGGY]  _writer.write(c,  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  0);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  0);	  _writer.write(c,    typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
29	[BUG]  [BUGGY]  _writer.write(c,  0,  typeMsg);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  0,  typeMsg);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  0,  typeMsg);	  _writer.write(c,    typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS,  typeMsg);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS,  typeMsg);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS,  typeMsg);	  _writer    =    _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS  +  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS  +  1);	  _writer    =    _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  _writer  =  writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);	  _writer    =    _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail  +  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  _outputBuffer,  _outputTail  +  1);	  _writer.write(c,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
34	[BUG]  [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  _writer.write(c,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
35	[BUG]  [BUGGY]  ||(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >>  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }	  ||(_outputTail    >=    _outputEnd    &&    _outputBuffer[_outputTail]!=    null))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
36	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&    _outputBuffer[_outputTail]!=    null))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
37	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]  ==  null))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]  ==  null))  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]  ==  null))  {  _flushBuffer();  }	  ||(_outputTail    >=    _outputEnd    &&    _outputBuffer[_outputTail]!=    null))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
38	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  System.currentTimeMillis()  +  1;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  System.currentTimeMillis()  +  1;	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
39	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  1;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  System.currentTimeMillis()  -  1;	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
41	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
42	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!Character.isDigit(_outputBuffer,  _outputTail)))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!Character.isDigit(_outputBuffer,  _outputTail)))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!Character.isDigit(_outputBuffer,  _outputTail)))  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
43	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
44	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail];  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail];  }  else  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail];  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
45	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
46	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  typeMsg,  _outputTail);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(_outputBuffer,  typeMsg,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(_outputBuffer,  typeMsg,  _outputTail);	  _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
47	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  typeMsg);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(_outputBuffer,  typeMsg);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(_outputBuffer,  typeMsg);	  _writer.write(typeMsg,    _outputBuffer);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
48	[BUG]  [BUGGY]  _writer  =  _writer.finishCurrentSegment(c);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.finishCurrentSegment(c);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.finishCurrentSegment(c);	  _writer    =    _writer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
49	[BUG]  [BUGGY]  _writer  =  _writer.finishSegment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.finishSegment();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.finishSegment();	  _writer    =    _writer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
50	[BUG]  [BUGGY]  _writer.write(c,  0,  typeMsg.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  0,  typeMsg.length);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  0,  typeMsg.length);	  _writer.write(typeMsg,    0,    typeMsg.length);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
51	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  typeMsg.length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  0,  typeMsg.length  +  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  typeMsg.length  +  1);	  _writer.write(typeMsg,    0,    typeMsg.length);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  typeMsg.length  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  0,  typeMsg.length  -  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  typeMsg.length  -  1);	  _writer.write(typeMsg,    0,    typeMsg.length);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  typeMsg.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(_outputBuffer,  0,  typeMsg.length);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(_outputBuffer,  0,  typeMsg.length);	  _writer.write(typeMsg,    0,    _outputBuffer.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
54	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length  -  _outputTail);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length  -  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  _outputBuffer.length  -  _outputTail);	  _writer.write(typeMsg,    0,    _outputBuffer.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
55	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length  -  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  _outputBuffer.length  -  1);	  _writer.write(typeMsg,    0,    _outputBuffer.length);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  >  expected	21	None	replace
57	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  int  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  >  expected	21	None	replace
58	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail]  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail]  +  1;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  _outputBuffer[_outputTail]  +  1;	  _outputTail    =    _outputBuffer[_outputTail];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  _outputTail  =  c[_outputTail];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  c[_outputTail];  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  c[_outputTail];	  _outputTail    =    _outputBuffer[_outputTail];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  _outputMaxContiguous);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  0,  _outputMaxContiguous);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  0,  _outputMaxContiguous);	  _writer.write(typeMsg,    0,    len);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
61	[BUG]  [BUGGY]  if(typeMsg  ==  null  ||  typeMsg.length  <  2)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null  ||  typeMsg.length  <  2)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null  ||  typeMsg.length  <  2)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _buffer[_outputTail]!=  null))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _buffer[_outputTail]!=  null))  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&  _buffer[_outputTail]!=  null))  {  _flushBuffer();  }	  ||(_outputTail    >=    _outputEnd    &&    _outputBuffer[_outputTail]!=    null))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
63	[BUG]  [BUGGY]  _outputTail  =  System.identityHashCode(_outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  System.identityHashCode(_outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  System.identityHashCode(_outputBuffer,  _outputTail);	  _outputTail    =    _outputEnd;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  _writer  =  _writer.finishCurrentSegment(_outputBuffer);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.finishCurrentSegment(_outputBuffer);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.finishCurrentSegment(_outputBuffer);	  _writer    =    _writer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
65	[BUG]  [BUGGY]  _writer  =  typeMsg.finishCurrentSegment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  typeMsg.finishCurrentSegment();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  typeMsg.finishCurrentSegment();	  _writer    =    _writer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
66	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
67	[BUG]  [BUGGY]  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	int  len  =  typeMsg.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    len    =    typeMsg.length;    for(int    i    =    0,    len    =    _outputBuffer.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
68	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  int  len  =  _outputBuffer.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg!=  null)  {  int  len  =  _outputBuffer.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  int  len  =  _outputBuffer.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    len    =    typeMsg.length;    for(int    i    =    0,    len    =    _outputBuffer.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
69	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  c;  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  c;  }	  if(typeMsg!=    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _writeBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  if(typeMsg!=    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _writeBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  SHORT_WRITE;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  SHORT_WRITE;  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  for(int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _writeBuffer[_outputTail]  =  SHORT_WRITE;  }	  if(typeMsg!=    null)    {    for(int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _writeBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  _writer.write(c,  ++_outputTail);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  ++_outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  ++_outputTail);	  _writer.write(c,    typeMsg);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  *  1000;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  System.currentTimeMillis()  *  1000;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  System.currentTimeMillis()  *  1000;	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
74	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail  +  1];  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  _outputBuffer[_outputTail  +  1];	  _outputTail    =    _outputBuffer[_outputTail];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null)  {  _flushBuffer();  }	  _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
76	[BUG]  [BUGGY]  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  >  expected  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  >  expected	21	None	replace
77	[BUG]  [BUGGY]  if(typeMsg  ==  null  ||  typeMsg.length  <  2)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  >  expected  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg  ==  null  ||  typeMsg.length  <  2)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg  ==  null  ||  typeMsg.length  <  2)  {  int  i  =  0,  len  =  typeMsg.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    i    =    0,    len    =    typeMsg.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  >  expected	21	None	replace
78	[BUG]  [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputTail  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.read(buf,  0,  _outputTail  +  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.read(buf,  0,  _outputTail  +  1);	  _writer    =    _writer.read(buf,    0,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
79	[BUG]  [BUGGY]  _writer.write(c,  0,  _outputTail);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  0,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  0,  _outputTail);	  _writer.write(c,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
80	[BUG]  [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS,  _outputBuffer,  _outputTail);	  _writer    =    _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
81	[BUG]  [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.START_AS_IS);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.getWriteRoot(JsonWriteContext.START_AS_IS);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.getWriteRoot(JsonWriteContext.START_AS_IS);	  _writer    =    _writer.getWriteRoot(JsonWriteContext.STATUS_OK_AS_IS);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
82	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd))  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
83	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&  typeMsg!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&  typeMsg!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd)&&  typeMsg!=  null)  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
84	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&  typeMsg  ==  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&  typeMsg  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd)&&  typeMsg  ==  null)  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
85	[BUG]  [BUGGY]  _writer.write(c,  start,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(c,  start,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(c,  start,  _outputBuffer,  _outputTail);	  _writer.write(buf,    start,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
86	[BUG]  [BUGGY]  _writer  =  _writer.read(buffer,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.read(buffer,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.read(buffer,  _outputBuffer,  _outputTail);	  _writer    =    _writer.read(buf,    0,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  _outputTail  =  ++_outputHead;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _outputTail  =  ++_outputHead;  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_outputTail  =  ++_outputHead;	  _outputTail    =    _outputHead;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
88	[BUG]  [BUGGY]  ||(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  <  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }	  ||(_outputTail    >=    _outputEnd    &&    _outputBuffer[_outputTail]!=    null))    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
89	[BUG]  [BUGGY]  _writer  =  _writer.finishCurrentSegment(_outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.finishCurrentSegment(_outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.finishCurrentSegment(_outputBuffer,  _outputTail);	  _writer    =    _writer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
90	[BUG]  [BUGGY]  _writer  =  text.finishCurrentSegment();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  text.finishCurrentSegment();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  text.finishCurrentSegment();	  _writer    =    _writer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
91	[BUG]  [BUGGY]  _writer  =  _writer.finishCurrentSegment(c,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer  =  _writer.finishCurrentSegment(c,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer  =  _writer.finishCurrentSegment(c,  _outputBuffer,  _outputTail);	  _writer    =    _writer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
92	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
93	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
94	[BUG]  [BUGGY]  _writer.write(typeMsg,  start,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  start,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  start,  _outputBuffer,  _outputTail);	  _writer.write(buf,    start,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
95	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputHead);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputHead);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  _outputBuffer,  _outputHead);	  _writer.write(typeMsg,    _outputBuffer);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
96	[BUG]  [BUGGY]  _writer.write(typeMsg,  c,  _outputBuffer,  _outputTail);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  c,  _outputBuffer,  _outputTail);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  c,  _outputBuffer,  _outputTail);	  _writer.write(c,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
97	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail  +  1);  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	_writer.write(typeMsg,  _outputBuffer,  _outputTail  +  1);	  _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
98	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
99	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  int  len  =  _outputEnd.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  if(typeMsg!=  null)  {  int  len  =  _outputEnd.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	if(typeMsg!=  null)  {  int  len  =  _outputEnd.length;  for(int  i  =  0,  len  =  _outputBuffer.length;  i  <  len;  ++i)  {  _flushBuffer();  }	  if(typeMsg!=    null)    {    int    len    =    typeMsg.length;    for(int    i    =    0,    len    =    _outputBuffer.length;    i    <    len;    ++i)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
100	[BUG]  [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||  _outputTail  >=  _outputEnd)  {  throw  new  IllegalStateException( " ");  }	  if(_outputTail    >=    _outputEnd)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
101	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!Character.isWhitespace(c)))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!Character.isWhitespace(c)))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&!Character.isWhitespace(c)))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!Character.isDigit(c)))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
102	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  Character.isDigit(c)))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  Character.isDigit(c)))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >=  _outputEnd  &&  Character.isDigit(c)))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!Character.isDigit(c)))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
103	[BUG]  [BUGGY]  ||(_outputTail  >  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  ++_outputTail;      [BUGGY]  ||(_outputTail  >  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();  [BUGGY]        [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	790	790	1	replace	||(_outputTail  >  _outputEnd  &&!c.isEmpty()))  {  _flushBuffer();	  ||(_outputTail    >=    _outputEnd    &&!c.isEmpty()))    {    _flushBuffer();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
