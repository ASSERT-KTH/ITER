bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    raw    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
2	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    raw    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	10	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    raw    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	10	2	replace
4	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    raw    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	10	2	replace
5	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]              AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    raw    ==    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	replace
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _writeQuotedRaw(raw);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	        _writeQuotedRaw(raw);	  	compilable	  [FE]  AssertionFailedError  	7	3	add
7	[BUG]  [BUGGY]      _writeQuotedRaw(raw);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _writeQuotedRaw(raw);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	        _writeQuotedRaw(raw);	  	compilable	  [FE]  AssertionFailedError  	7	3	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _verifyValueWrite(WRITE_NUMBER);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	        _verifyValueWrite(WRITE_NUMBER);	  	compilable	  [FE]  AssertionFailedError  	7	3	add
9	[BUG]  [BUGGY]      _verifyValueWrite(WRITE_NUMBER);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _verifyValueWrite(WRITE_NUMBER);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	        _verifyValueWrite(WRITE_NUMBER);	  	compilable	  [FE]  AssertionFailedError  	7	3	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _flushBuffer();  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	        _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	7	1	add
11	[BUG]  [BUGGY]      _flushBuffer();  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _flushBuffer();  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	        _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	7	1	add
12	[BUG]  [BUGGY]      _writer.writeQuotedRaw(raw);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _writer.writeQuotedRaw(raw);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	        _writer.writeQuotedRaw(raw);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
13	[BUG]  [BUGGY]      _verifyValueWrite(WRITE_NUMBER,  raw);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,String)  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _verifyValueWrite(WRITE_NUMBER,  raw);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	        _verifyValueWrite(WRITE_NUMBER,  raw);	  	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,String)	7	None	add
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
15	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	compilable	  [FE]  AssertionFailedError  	2	1	replace
16	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN	2	None	replace
17	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN	2	None	replace
18	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_QUOTE  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_QUOTE)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE	5	None	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
20	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	4	2	replace
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
22	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
23	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	3	1	add
25	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	3	1	add
26	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  else  if(_cfgNumbersAsStrings)  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  else  if(_cfgNumbersAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings)    {    else  if(_cfgNumbersAsStrings)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
27	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumberAsStrings)  {  [CE]  cannot  find  symbol  _cfgNumberAsStrings  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumberAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumberAsStrings)  {	  	non-compiled	[CE]  cannot  find  symbol  _cfgNumberAsStrings	3	None	add
28	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	3	3	add
29	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	3	3	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
31	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	3	1	add
32	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_QUOTE  [FE]              AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_QUOTE)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE	6	None	replace
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
34	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
35	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
37	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
38	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&|  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&|  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&|  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
39	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_NUMBER  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_NUMBER)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER	5	None	replace
40	[BUG]  [BUGGY]  }  else  if(_cfgPlainStrings)  {  [CE]  cannot  find  symbol  _cfgPlainStrings  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgPlainStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgPlainStrings)  {	  }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _cfgPlainStrings	4	None	replace
41	[BUG]  [BUGGY]  }  else  if(_writeQuotedRaw)  {  [CE]  cannot  find  symbol  _writeQuotedRaw  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_writeQuotedRaw)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_writeQuotedRaw)  {	  }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _writeQuotedRaw	4	None	replace
42	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))  {  [CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_STRING  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))  {	  }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_STRING	4	None	replace
43	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
44	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	3	1	add
45	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	3	1	add
46	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  writer  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings)    {    writer.writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol  writer	3	None	add
47	[BUG]  [BUGGY]      _verifyValueWrite(WRITE_NUMBER_AS_PLAIN);  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _verifyValueWrite(WRITE_NUMBER_AS_PLAIN);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	        _verifyValueWrite(WRITE_NUMBER_AS_PLAIN);	  	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN	7	None	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _reportUnsupportedOperation();  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	        _reportUnsupportedOperation();	  	compilable	  [FE]  AssertionFailedError  	7	3	add
49	[BUG]  [BUGGY]      _reportUnsupportedOperation();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]      _reportUnsupportedOperation();  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	        _reportUnsupportedOperation();	  	compilable	  [FE]  AssertionFailedError  	7	3	add
50	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_WRITE_AS_PLAIN  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_WRITE_AS_PLAIN	2	None	replace
51	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_WRITE  [FE]              AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_WRITE)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_WRITE	6	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  _writer.write(raw);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_writer.write(raw);	      	compilable	  [FE]  AssertionFailedError  	8	4	replace
53	[BUG]  [BUGGY]  _writer.write(raw);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  _writer.write(raw);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);	      	compilable	  [FE]  AssertionFailedError  	8	4	replace
54	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_BIGDECIMAL_AS_PLAIN);  [CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_PLAIN  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  _verifyValueWrite(WRITE_BIGDECIMAL_AS_PLAIN);  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_BIGDECIMAL_AS_PLAIN);	      	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_PLAIN	8	None	replace
55	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value.getValue()!=  null)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);    [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value.getValue()!=  null)  {  [BUGGY]    writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value.getValue()!=  null)  {	  }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
