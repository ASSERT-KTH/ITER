bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  _verifyValueWrite(WRITE_NUMBER);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _verifyValueWrite(WRITE_NUMBER);    _verifyValueWrite(WRITE_NUMBER);	  	compilable	  [FE]  AssertionFailedError  	8	3	add
2	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  _verifyValueWrite(WRITE_NUMBER);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  _verifyValueWrite(WRITE_NUMBER);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    _verifyValueWrite(WRITE_NUMBER);	  	compilable	  [FE]  AssertionFailedError  	8	3	add
3	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  writeRaw(value.toPlainString());  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  incompatible  types	8	None	add
4	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }	  	non-compiled	[CE]  incompatible  types	8	None	add
5	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  writeRaw(raw.toPlainString());  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  writeRaw(raw.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  writeRaw(raw.toPlainString());  }	  	non-compiled	[CE]  incompatible  types	8	None	add
6	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  _writeQuotedRaw(raw);  }  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  _writeQuotedRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    if(_verifyValueWrite(WRITE_NUMBER))  {  _verifyValueWrite(WRITE_NUMBER);  }  else  {  _writeQuotedRaw(raw);  }	  	non-compiled	[CE]  incompatible  types	8	None	add
7	[BUG]  [BUGGY]  _writer.writeQuotedRaw(raw,  _cfgNumbersAsStrings);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.writeQuotedRaw(raw,  _cfgNumbersAsStrings);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.writeQuotedRaw(raw,  _cfgNumbersAsStrings);	          _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
8	[BUG]  [BUGGY]  _writer.writeQuotedRaw(raw,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.writeQuotedRaw(raw,  _outputBuffer);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.writeQuotedRaw(raw,  _outputBuffer);	          _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
9	[BUG]  [BUGGY]  _writer.writeQuotedRaw(raw,  value);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.writeQuotedRaw(raw,  value);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.writeQuotedRaw(raw,  value);	          _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
10	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGINT)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_BIGINT  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGINT)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGINT)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_QUOTE)||    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGINT	32	None	replace
11	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER,  raw,  value);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,String,BigDecimal)  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER,  raw,  value);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_NUMBER,  raw,  value);	          _verifyValueWrite(WRITE_NUMBER,    raw);    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,String,BigDecimal)	13	None	replace
12	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER,  raw,  _cfgNumbersAsStrings);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,String,boolean)  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER,  raw,  _cfgNumbersAsStrings);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_NUMBER,  raw,  _cfgNumbersAsStrings);	          _verifyValueWrite(WRITE_NUMBER,    raw);    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,String,boolean)	13	None	replace
13	[BUG]  [BUGGY]  _verifyValueWrite(raw,  WRITE_NUMBER);  [CE]  no  suitable  method  found  for  _verifyValueWrite(String,String)  [FE]                    AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(raw,  WRITE_NUMBER);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(raw,  WRITE_NUMBER);	          _verifyValueWrite(WRITE_NUMBER,    raw);    	non-compiled	[CE]  no  suitable  method  found  for  _verifyValueWrite(String,String)	13	None	replace
14	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER,  raw,  _writeQuotedRaw);  [CE]  cannot  find  symbol  _writeQuotedRaw  [FE]                      AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER,  raw,  _writeQuotedRaw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_NUMBER,  raw,  _writeQuotedRaw);	          _verifyValueWrite(WRITE_NUMBER,    raw);    	non-compiled	[CE]  cannot  find  symbol  _writeQuotedRaw	13	None	replace
15	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGINT)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_BIGINT  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGINT)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGINT)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_QUOTE)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGINT	18	None	replace
16	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_QUOTE  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_QUOTE)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_QUOTE)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE	18	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
18	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	compilable	  [FE]  AssertionFailedError  	20	1	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
20	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
22	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
24	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	1	2	add
25	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	1	None	add
26	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >>  null)  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >>  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >>  null)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	1	None	add
27	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null  &&  value.getValue()!=  null)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null  &&  value.getValue()!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value!=  null  &&  value.getValue()!=  null)  {	  }    else    if(_cfgNumbersAsStrings    &&    value.getValue()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
28	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null?  value.getValue()!=  null  :  value.getValue()!=  null)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null?  value.getValue()!=  null  :  value.getValue()!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value!=  null?  value.getValue()!=  null  :  value.getValue()!=  null)  {	  }    else    if(_cfgNumbersAsStrings    &&    value.getValue()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
29	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value  ==  null  &&  value.getValue()!=  null)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value  ==  null  &&  value.getValue()!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value  ==  null  &&  value.getValue()!=  null)  {	  }    else    if(_cfgNumbersAsStrings    &&    value.getValue()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {	  	compilable	  [FE]  AssertionFailedError  	3	1	add
31	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {	  	compilable	  [FE]  AssertionFailedError  	3	1	add
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
33	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  	compilable	  [FE]  AssertionFailedError  	3	2	add
34	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >=  null)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	3	None	add
35	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >>  null)  {  [CE]  bad  operand  types  for  binary  operator  '>>'  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >>  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  >>  null)  {	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>>'	3	None	add
36	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  [Delete]  null)  {  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  [Delete]  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  [Delete]  null)  {	  	non-compiled	[CE]  ')'  expected	3	None	add
37	[BUG]  [BUGGY]  }  else  if(raw)  {  [CE]  cannot  find  symbol  raw  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(raw)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(raw)  {	  }    else    if(_writeQuotedRaw)    {    	non-compiled	[CE]  cannot  find  symbol  raw	41	None	replace
38	[BUG]  [BUGGY]  }  else  if(raw.length())  {  [CE]  cannot  find  symbol  raw  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(raw.length())  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(raw.length())  {	  }    else    if(_writeQuotedRaw)    {    	non-compiled	[CE]  cannot  find  symbol  raw	41	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  value  ==  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  value  ==  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
40	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  value  ==  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  value  ==  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  value  ==  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    	compilable	  [FE]  AssertionFailedError  	4	1	replace
41	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_REASON)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_NUMBER_REASON  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_REASON)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_NUMBER_REASON)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_REASON	50	None	replace
42	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_QUOTE  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_QUOTE)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_QUOTE)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE	16	None	replace
43	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_NUMBER  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_NUMBER)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER	16	None	replace
44	[BUG]  [BUGGY]  }  else  if(_cfgQuotedRaw)  {  [CE]  cannot  find  symbol  _cfgQuotedRaw  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgQuotedRaw)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgQuotedRaw)  {	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _cfgQuotedRaw	45	None	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
46	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
47	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
48	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
50	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&!_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&!_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
52	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&!_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&!_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&!_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
53	[BUG]  [BUGGY]  _reportError();  [CE]  method  _reportError  in  class  JsonGenerator  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _reportError();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_reportError();	          _reportUnsupportedOperation();    	non-compiled	[CE]  method  _reportError  in  class  JsonGenerator  cannot  be  applied  to  given  types;	49	None	replace
54	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    &&    value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
55	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null  &&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null  &&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value!=  null  &&  value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    &&    value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	33	2	add
57	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	33	2	add
58	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeQuotedRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	33	2	add
59	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeQuotedRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	33	2	add
60	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
61	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [CE]  cannot  find  symbol  raw  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeQuotedRaw(raw);	  	non-compiled	[CE]  cannot  find  symbol  raw	33	None	add
62	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(raw);  [CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    Writer  value  =  _writeQuotedRaw(raw);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)	33	None	add
63	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	10	1	add
64	[BUG]  [BUGGY]          _flushBuffer();  _flushBuffer();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	10	1	add
65	[BUG]  [BUGGY]          _flushBuffer();  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _flushBuffer();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _flushBuffer();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _flushBuffer();	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
67	[BUG]  [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
68	[BUG]  [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw.toPlainString());  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw.toPlainString());  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
69	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
70	[BUG]  [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
71	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER_AS_PLAIN,  raw);  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER_AS_PLAIN,  raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_NUMBER_AS_PLAIN,  raw);	          _verifyValueWrite(WRITE_NUMBER_AS_PLAIN);    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN	47	None	replace
72	[BUG]  [BUGGY]  _verifyValueWrite(READ_NUMBER);  [CE]  cannot  find  symbol  READ_NUMBER  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(READ_NUMBER);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(READ_NUMBER);	          _verifyValueWrite(WRITE_NUMBER_AS_PLAIN);    	non-compiled	[CE]  cannot  find  symbol  READ_NUMBER	47	None	replace
73	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_QUOTE);  [CE]  cannot  find  symbol  WRITE_QUOTE  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_QUOTE);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_QUOTE);	          _verifyValueWrite(WRITE_NUMBER_AS_PLAIN);    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE	47	None	replace
74	[BUG]  [BUGGY]  _writer.write(raw,  0,  raw.length);  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw,  0,  raw.length);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw,  0,  raw.length);	  _writer.write(raw);    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
75	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
76	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  illegal  start  of  type	30	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	30	1	add
78	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	30	1	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	30	1	add
80	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	30	1	add
81	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString()  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString()  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString()	  	non-compiled	[CE]  ')'  expected	30	None	add
82	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_WRITE)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN	51	None	replace
83	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  raw!=  null)  {  [CE]  cannot  find  symbol  raw  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  raw!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  raw!=  null)  {	  }    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  raw	22	None	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  _writer.write(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_writer.write(raw);    _writer.write(raw);	  	compilable	  [FE]  AssertionFailedError  	52	3	add
85	[BUG]  [BUGGY]  _writer.write(raw);  _writer.write(raw);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  _writer.write(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    _writer.write(raw);	  	compilable	  [FE]  AssertionFailedError  	52	3	add
86	[BUG]  [BUGGY]  _writer.write(raw);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_writer.write(raw);    if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
88	[BUG]  [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
89	[BUG]  [BUGGY]  _writer.write(raw);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  _writeQuotedRaw(raw);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  _writeQuotedRaw(raw);	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
90	[BUG]  [BUGGY]  _writer.write(raw);  _writer.write(raw,  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN));  [CE]  no  suitable  method  found  for  write(String,boolean)  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  _writer.write(raw,  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN));  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    _writer.write(raw,  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN));	  	non-compiled	[CE]  no  suitable  method  found  for  write(String,boolean)	52	None	add
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writeNull();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_writeNull();	          _writeQuotedRaw(raw);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
92	[BUG]  [BUGGY]  _writeNull();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writeNull();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writeNull();	          _writeQuotedRaw(raw);    	compilable	  [FE]  AssertionFailedError  	7	4	replace
93	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw.toPlainString());  }  [CE]  illegal  start  of  type  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw.toPlainString());  }	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
94	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());  }	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
95	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
96	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  }	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  AssertionFailedError  	48	3	add
98	[BUG]  [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  _reportUnsupportedOperation();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    _reportUnsupportedOperation();	  	compilable	  [FE]  AssertionFailedError  	48	3	add
99	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
100	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
101	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw.toPlainString());  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw.toPlainString());  }	  	non-compiled	[CE]  cannot  find  symbol	48	None	add
102	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
103	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
104	[BUG]  [BUGGY]          _reportUnsupportedOperation();  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(_cfgNumbersAsStrings  ||!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	29	2	replace
106	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  ||!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	29	2	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
108	[BUG]  [BUGGY]  }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	29	1	replace
109	[BUG]  [BUGGY]  _verifyValueWrite(RESULT_NUMBER);  [CE]  cannot  find  symbol  RESULT_NUMBER  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(RESULT_NUMBER);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(RESULT_NUMBER);	  _verifyValueWrite(WRITE_BIGDECIMAL_AS_PLAIN);    	non-compiled	[CE]  cannot  find  symbol  RESULT_NUMBER	54	None	replace
110	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	if(_cfgNumbersAsStrings)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	11	4	replace
111	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	if(_cfgNumbersAsStrings)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	11	4	replace
112	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	44	1	add
113	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	44	1	add
114	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  writer  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    writer.writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol  writer	44	None	add
115	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  Writer  value  =  _writeQuotedRaw(raw);  [CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  Writer  value  =  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    Writer  value  =  _writeQuotedRaw(raw);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)	44	None	add
116	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  Writer  value  =  _writeQuotedRaw(raw.length());  [CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  Writer  value  =  _writeQuotedRaw(raw.length());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    Writer  value  =  _writeQuotedRaw(raw.length());	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)	44	None	add
117	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_WRITE  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_WRITE)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_NUMBER)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_WRITE	39	None	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	24	1	add
119	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	24	1	add
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	2	add
121	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	2	add
122	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings).writeRaw(value.toPlainString());  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings).writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings).writeRaw(value.toPlainString());	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
123	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_NULL))  {  [CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_NULL  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_NULL))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_NULL))  {	  	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_NULL	24	None	add
124	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_FUNCTION))  {  [CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_FUNCTION  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_FUNCTION))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_FUNCTION))  {	  	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_FUNCTION	24	None	add
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_verifyValueWrite(raw);	          _verifyValueWrite(WRITE_NUMBER);    	compilable	  [FE]  AssertionFailedError  	9	4	replace
126	[BUG]  [BUGGY]  _verifyValueWrite(raw);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(raw);	          _verifyValueWrite(WRITE_NUMBER);    	compilable	  [FE]  AssertionFailedError  	9	4	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite( "write  number ");  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_verifyValueWrite( "write  number ");	          _verifyValueWrite(WRITE_NUMBER);    	compilable	  [FE]  AssertionFailedError  	9	4	replace
128	[BUG]  [BUGGY]  _verifyValueWrite( "write  number ");  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite( "write  number ");  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite( "write  number ");	          _verifyValueWrite(WRITE_NUMBER);    	compilable	  [FE]  AssertionFailedError  	9	4	replace
129	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_NUMBER_AS_STRING))  {  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_STRING  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_NUMBER_AS_STRING))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_NUMBER_AS_STRING))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_STRING	42	None	replace
130	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_QUOTE))  {  [CE]  cannot  find  symbol  WRITE_QUOTE  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_QUOTE))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_QUOTE))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE	42	None	replace
131	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))  {  [CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_STRING  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGDECIMAL_AS_STRING	42	None	replace
132	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_QUOTE_AS_STRING))  {  [CE]  cannot  find  symbol  WRITE_QUOTE_AS_STRING  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_QUOTE_AS_STRING))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_QUOTE_AS_STRING))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE_AS_STRING	42	None	replace
133	[BUG]  [BUGGY]  }  else  if(_outputTail)  {  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_outputTail)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_outputTail)  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(_cfgNumberAsStrings)    {    	non-compiled	[CE]  incompatible  types	27	None	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.toPlainString()!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.toPlainString()!=  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    >=    null)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
135	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.toPlainString()!=  null)  {  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.toPlainString()!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value.toPlainString()!=  null)  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    >=    null)    {    	compilable	  [FE]  AssertionFailedError  	5	1	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	1	add
137	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	1	add
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
139	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
140	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
141	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
142	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
143	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	2	add
144	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
145	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
146	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  'else'  without  'if'	14	None	add
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
148	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	14	2	add
149	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WITE_BIGDECIMAL_AS_PLAIN  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  cannot  find  symbol  WITE_BIGDECIMAL_AS_PLAIN	14	None	add
150	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)|&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)|&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)|&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
151	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writer.writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writer.writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  _writer.writeRaw(value.toPlainString());	  }    else    if(_cfgNumbersAsStrings)    {    writer.writeRaw(value.toPlainString());    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
152	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    _writeQuotedRaw(raw);	  	compilable	  [FE]  AssertionFailedError  	6	3	add
153	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  _writeQuotedRaw(raw);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    _writeQuotedRaw(raw);	  	compilable	  [FE]  AssertionFailedError  	6	3	add
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
155	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
156	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  _writeQuotedRaw(raw,  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN));  [CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  _writeQuotedRaw(raw,  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN));  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    _writeQuotedRaw(raw,  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN));	  	non-compiled	[CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	6	None	add
157	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);	  	non-compiled	[CE]  illegal  start  of  expression	6	None	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
159	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
161	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
162	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	3	add
163	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	3	add
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
165	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	2	add
166	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  'else'  without  'if'  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  'else'  without  'if'	21	None	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	36	2	add
168	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	36	2	add
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeQuotedRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	36	2	add
170	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeQuotedRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	36	2	add
171	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
172	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  illegal  start  of  expression	36	None	add
173	[BUG]  [BUGGY]  }  else  if(_asPlainString())  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_asPlainString())  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_asPlainString())  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
174	[BUG]  [BUGGY]  }  else  if(_asStrings)  {  [CE]  cannot  find  symbol  _asStrings  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_asStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_asStrings)  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _asStrings	29	None	replace
175	[BUG]  [BUGGY]  }  else  if(_cfgRaw)  {  [CE]  cannot  find  symbol  _cfgRaw  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgRaw)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgRaw)  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _cfgRaw	29	None	replace
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
177	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	21	1	add
178	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  ||  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  ||  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  cannot  find  symbol	21	None	add
179	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	24	1	add
180	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	24	1	add
181	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  else  if(_cfgNumbersAsStrings)  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    else  if(_cfgNumbersAsStrings)  {	  	non-compiled	[CE]  'else'  without  'if'	24	None	add
182	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  writer  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    writer.writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol  writer	24	None	add
183	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_fgNumbersAsStrings)  {  [CE]  cannot  find  symbol  _fgNumbersAsStrings  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_fgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_fgNumbersAsStrings)  {	  	non-compiled	[CE]  cannot  find  symbol  _fgNumbersAsStrings	24	None	add
184	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LPAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_LPAIN  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LPAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_LPAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_LPAIN	16	None	replace
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	compilable	  [FE]  AssertionFailedError  	31	2	replace
186	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	compilable	  [FE]  AssertionFailedError  	31	2	replace
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	writeRaw(value.toPlainString());	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	compilable	  [FE]  AssertionFailedError  	31	4	replace
188	[BUG]  [BUGGY]  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	writeRaw(value.toPlainString());	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	compilable	  [FE]  AssertionFailedError  	31	4	replace
189	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  [CE]  cannot  find  symbol  raw  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	non-compiled	[CE]  cannot  find  symbol  raw	31	None	replace
190	[BUG]  [BUGGY]  }  else  if(value  &&  _cfgNumbersAsStrings.getValue()!=  null)  {  [CE]  boolean  cannot  be  dereferenced  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(value  &&  _cfgNumbersAsStrings.getValue()!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(value  &&  _cfgNumbersAsStrings.getValue()!=  null)  {	  }    else    if(_cfgNumbersAsStrings    &&    value.getValue()!=    null)    {    	non-compiled	[CE]  boolean  cannot  be  dereferenced	55	None	replace
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(_cfgNumbersAsStrings  &&  value!=  null)  {	  }    else    if(_cfgNumbersAsStrings    &&    value.getValue()!=    null)    {    	compilable	  [FE]  AssertionFailedError  	55	2	replace
192	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null)  {  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value!=  null)  {	  }    else    if(_cfgNumbersAsStrings    &&    value.getValue()!=    null)    {    	compilable	  [FE]  AssertionFailedError  	55	2	replace
193	[BUG]  [BUGGY]  }  else  if(_plainStrings)  {  [CE]  cannot  find  symbol  _plainStrings  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_plainStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_plainStrings)  {	  }    else    if(_cfgPlainStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _plainStrings	40	None	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER  +  1);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_verifyValueWrite(WRITE_NUMBER  +  1);	          _verifyValueWrite(WRITE_NUMBER);    	compilable	  [FE]  AssertionFailedError  	9	4	replace
195	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER  +  1);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_NUMBER  +  1);	          _verifyValueWrite(WRITE_NUMBER);    	compilable	  [FE]  AssertionFailedError  	9	4	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  if(raw!=  null)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	if(raw!=  null)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	11	4	replace
197	[BUG]  [BUGGY]  if(raw!=  null)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  if(raw!=  null)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	if(raw!=  null)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	11	4	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
199	[BUG]  [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
200	[BUG]  [BUGGY]  _writer.writeQuotedRaw(raw,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.writeQuotedRaw(raw,  _outputTail);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.writeQuotedRaw(raw,  _outputTail);	          _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
201	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_WRITE_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_WRITE_AS_PLAIN  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_WRITE_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_WRITE_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_WRITE_AS_PLAIN	20	None	replace
202	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_RANGE_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_RANGE_AS_PLAIN  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_RANGE_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_RANGE_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_RANGE_AS_PLAIN	20	None	replace
203	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_WRITE_AS_STRING))  {  [CE]  cannot  find  symbol  WRITE_WRITE_AS_STRING  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_WRITE_AS_STRING))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_WRITE_AS_STRING))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_WRITE_AS_STRING	42	None	replace
204	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_QUOTE))  {  [CE]  cannot  find  symbol  WRITE_QUOTE  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_QUOTE))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_QUOTE))  {	  }    else    if(isEnabled(Feature.WRITE_QUOTE)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_QUOTE	18	None	replace
205	[BUG]  [BUGGY]  }  else  if(_isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_QUOTE)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
206	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LPAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_LPAIN  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LPAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_LPAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_WRITE)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_LPAIN	51	None	replace
207	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LP)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_LP  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LP)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_LP)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_LP	50	None	replace
208	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_NUMBER)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  QUOTE_NUMBER  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.QUOTE_NUMBER)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.QUOTE_NUMBER)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  QUOTE_NUMBER	50	None	replace
209	[BUG]  [BUGGY]  }  else  if(_inputTail)  {  [CE]  cannot  find  symbol  _inputTail  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_inputTail)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_inputTail)  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(_cfgNumberAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _inputTail	27	None	replace
210	[BUG]  [BUGGY]  }  else  if(_writeRaw)  {  [CE]  cannot  find  symbol  _writeRaw  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_writeRaw)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_writeRaw)  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _writeRaw	25	None	replace
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
212	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	28	3	add
213	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	28	2	add
214	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	28	2	add
215	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  else  if(!_cfgNumbersAsStrings)  {  [CE]  'else'  without  'if'  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  else  if(!_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    else  if(!_cfgNumbersAsStrings)  {	  	non-compiled	[CE]  'else'  without  'if'	28	None	add
216	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  writer  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  writer.writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    writer.writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol  writer	28	None	add
217	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_RANGE_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_RANGE_AS_PLAIN  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_RANGE_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_RANGE_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_RANGE_AS_PLAIN	22	None	replace
218	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  cannot  find  symbol	14	None	add
219	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGINT_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_BIGINT_AS_PLAIN  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(isEnabled(Feature.WRITE_BIGINT_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGINT_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGINT_AS_PLAIN	14	None	add
220	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER_AS_NUMERIC_NUMBERS);  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_NUMERIC_NUMBERS  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER_AS_NUMERIC_NUMBERS);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_NUMBER_AS_NUMERIC_NUMBERS);	          _writeQuotedRaw(raw);    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_NUMERIC_NUMBERS	7	None	replace
221	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  'else'  without  'if'	19	None	add
222	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(_cfgNumbersAsStrings  &&  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(_cfgNumbersAsStrings  &&  areEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
224	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
225	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&  isEnabled(Feature.WRITE_WRITE_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_WRITE_AS_PLAIN  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&  isEnabled(Feature.WRITE_WRITE_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_WRITE_AS_PLAIN)&&  isEnabled(Feature.WRITE_WRITE_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_WRITE_AS_PLAIN	15	None	replace
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
227	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
229	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  _writeQuotedRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
230	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(raw.toPlainString());  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(raw.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(raw.toPlainString());  }	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
232	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(raw!=  null)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
233	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LPAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_LPAIN  [FE]                AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_LPAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_LPAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_NUMBER)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_LPAIN	39	None	replace
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _throwInternal();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  AssertionFailedError  	49	4	replace
235	[BUG]  [BUGGY]  _throwInternal();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _throwInternal();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_throwInternal();	          _reportUnsupportedOperation();    	compilable	  [FE]  AssertionFailedError  	49	4	replace
236	[BUG]  [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimalWriter();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimalWriter();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_writer!=  null)  {  _writer  =  new  BigDecimalWriter();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	52	None	add
237	[BUG]  [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimalBuilder();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimalBuilder();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_writer!=  null)  {  _writer  =  new  BigDecimalBuilder();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	52	None	add
238	[BUG]  [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimal();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimal();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_writer!=  null)  {  _writer  =  new  BigDecimal();  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	52	None	add
239	[BUG]  [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimalWriter(raw);  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer  =  new  BigDecimalWriter(raw);  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_writer!=  null)  {  _writer  =  new  BigDecimalWriter(raw);  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	52	None	add
240	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _verifyValueWrite(WRITE_NUMBER);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _verifyValueWrite(WRITE_NUMBER);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _verifyValueWrite(WRITE_NUMBER);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
241	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)?  value.toPlainString()  :  value.toPlainString());  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)?  value.toPlainString()  :  value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)?  value.toPlainString()  :  value.toPlainString());	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
242	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(raw);	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
243	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)?  value.toPlainString()  :  value.toPlainString();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)?  value.toPlainString()  :  value.toPlainString();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)?  value.toPlainString()  :  value.toPlainString();	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
244	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  'else'  without  'if'	30	None	add
245	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  {  writeRa  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  {  writeRa  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  {  writeRa	  	non-compiled	[CE]  not  a  statement	30	None	add
246	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
247	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [CE]  'else'  without  'if'  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
248	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    _writeQuotedRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	44	1	add
249	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    _writeQuotedRaw(value.toPlainString());	  	compilable	  [FE]  AssertionFailedError  	44	1	add
250	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  _writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    _writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol	44	None	add
251	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value);  [CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(value);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    _writeQuotedRaw(value);	  	non-compiled	[CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	44	None	add
252	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol	36	None	add
253	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writer.writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  writer  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writer.writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writer.writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol  writer	36	None	add
254	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(raw);  [CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(raw);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    Writer  value  =  _writeQuotedRaw(raw);	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)	36	None	add
255	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol	33	None	add
256	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writer.writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  writer  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writer.writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    writer.writeRaw(value.toPlainString());	  	non-compiled	[CE]  cannot  find  symbol  writer	33	None	add
257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	compilable	  [FE]  AssertionFailedError  	37	1	replace
258	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	compilable	  [FE]  AssertionFailedError  	37	1	replace
259	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  raw.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  cannot  find  symbol  raw  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  raw.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  raw.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  }    else    if(_cfgNumbersAsStrings    &&    value.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  raw	23	None	replace
260	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value!=    null)    {    else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value!=  null)  {	  	non-compiled	[CE]  'else'  without  'if'	1	None	add
261	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_NUMBER_AS_PLAIN)||  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_QUOTE)||    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_AS_PLAIN	32	None	replace
262	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	44	1	add
263	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {	  	compilable	  [FE]  AssertionFailedError  	44	1	add
264	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_asStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [CE]  cannot  find  symbol  _asStrings  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  }  else  if(_asStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_asStrings)  {  writeRaw(value.toPlainString());  }  else  if(_cfgNumbersAsStrings)  {	  	non-compiled	[CE]  cannot  find  symbol  _asStrings	44	None	add
265	[BUG]  [BUGGY]  }  else  if(!_writeQuotedRaw)  {  [CE]  cannot  find  symbol  _writeQuotedRaw  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(!_writeQuotedRaw)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(!_writeQuotedRaw)  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(!_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _writeQuotedRaw	29	None	replace
266	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	1	add
267	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	1	add
268	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	3	add
269	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	3	add
270	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	3	add
271	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(_cfgNumbersAsStrings)  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	24	3	add
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
273	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw( " ");  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
274	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeNull();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeNull();  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
275	[BUG]  [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeNull();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _writeQuotedRaw(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeNull();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _writeQuotedRaw(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  _writeNull();  }	  	compilable	  [FE]  AssertionFailedError  	6	3	add
276	[BUG]  [BUGGY]  }  else  if(_asPlainStrings)  {  [CE]  cannot  find  symbol  _asPlainStrings  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_asPlainStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_asPlainStrings)  {	  }    else    if(_cfgNumbersAsStrings)    {    }    else    if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _asPlainStrings	25	None	replace
277	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [CE]  'else'  without  'if'  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        writeRaw(value.toPlainString());    else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  'else'  without  'if'	30	None	add
278	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_cfgNumbersAsStrings)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    if(_cfgNumbersAsStrings)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	48	None	add
279	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_writer!=  null)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _reportUnsupportedOperation();    if(_writer!=  null)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
280	[BUG]  [BUGGY]          _reportUnsupportedOperation();  if(_writer!=  null)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _reportUnsupportedOperation();  if(_writer!=  null)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _reportUnsupportedOperation();    if(_writer!=  null)  {  _reportUnsupportedOperation();  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	48	3	add
281	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null  ||  raw.length()  ==  0)  {  [CE]  cannot  find  symbol  raw  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null)  {  }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null  ||  raw.length()  ==  0)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    value    ==    null)    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  value  ==  null  ||  raw.length()  ==  0)  {	  	non-compiled	[CE]  cannot  find  symbol  raw	3	None	add
282	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(.isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	non-compiled	[CE]  illegal  start  of  expression	28	None	add
283	[BUG]  [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  <  writeRaw(value.toPlainString());  [CE]  >  expected  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  {  }  else  if(!_cfgNumbersAsStrings)  <  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(_cfgNumbersAsStrings)        {        }    else    if(!_cfgNumbersAsStrings)    {    }  else  if(!_cfgNumbersAsStrings)  <  writeRaw(value.toPlainString());	  	non-compiled	[CE]  >  expected	28	None	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	3	add
285	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	19	3	add
286	[BUG]  [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGINT_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [CE]  cannot  find  symbol  WRITE_BIGINT_AS_PLAIN  [FE]                  AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(isEnabled(Feature.WRITE_BIGINT_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(isEnabled(Feature.WRITE_BIGINT_AS_PLAIN)&&  isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))  {	  }    else    if(isEnabled(Feature.WRITE_WRITE)&&    isEnabled(Feature.WRITE_NUMBER_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_BIGINT_AS_PLAIN	51	None	replace
287	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value);  [CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeQuotedRaw(value);	  	non-compiled	[CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	36	None	add
288	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(value.toPlainString());  [CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)&&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    Writer  value  =  _writeQuotedRaw(value.toPlainString());	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)	36	None	add
289	[BUG]  [BUGGY]  _writer.writeQuotedRaw(raw,  _outputHead);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.writeQuotedRaw(raw,  _outputHead);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.writeQuotedRaw(raw,  _outputHead);	          _writer.writeQuotedRaw(raw);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
290	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	11	4	replace
291	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	if(_cfgNumbersAsStrings)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }	          _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	11	4	replace
292	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_writer.write(raw);    if(_writer!=  null)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
293	[BUG]  [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_writer!=  null)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_writer!=  null)  {  _writer.write(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_writer.write(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
295	[BUG]  [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_cfgNumbersAsStrings)  {  _writeQuotedRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw( " ");  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	_writer.write(raw);    if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw( " ");  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
297	[BUG]  [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw( " ");  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writer.write(raw);  if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw( " ");  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writer.write(raw);    if(_cfgNumbersAsStrings)  {  _writer.write(raw);  }  else  {  writeRaw( " ");  }	  	compilable	  [FE]  AssertionFailedError  	52	3	add
298	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BRIDGE_AS_STRING))  {  [CE]  cannot  find  symbol  WRITE_BRIDGE_AS_STRING  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BRIDGE_AS_STRING))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BRIDGE_AS_STRING))  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_STRING))    {    	non-compiled	[CE]  cannot  find  symbol  WRITE_BRIDGE_AS_STRING	42	None	replace
299	[BUG]  [BUGGY]  }  else  if(_inputTail  >=  _outputEnd)  {  writeRaw(value.toPlainString());  [CE]  cannot  find  symbol  _inputTail  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_inputTail  >=  _outputEnd)  {  writeRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_inputTail  >=  _outputEnd)  {  writeRaw(value.toPlainString());	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	non-compiled	[CE]  cannot  find  symbol  _inputTail	31	None	replace
300	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  writeRaw(raw);  }  else  {  writeRaw(value.toPlainString());  }	  }    else    if(_cfgNumbersAsStrings)    {    writeRaw(value.toPlainString());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
301	[BUG]  [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(value.toPlainString());  }  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _verifyValueWrite(WRITE_NUMBER);  if(_verifyValueWrite(WRITE_NUMBER))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _verifyValueWrite(WRITE_NUMBER);    if(_verifyValueWrite(WRITE_NUMBER))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  incompatible  types	8	None	add
302	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value  ==  null?  value.getValue()!=  null  :  value.toPlainString())  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  value  ==  null?  value.getValue()!=  null  :  value.toPlainString())  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  value  ==  null?  value.getValue()!=  null  :  value.toPlainString())  {	  }    else    if(_cfgNumbersAsStrings    &&    value.getValue()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
303	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writer.writeRaw(value.toPlainString());  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  _writer.writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  _writer.writeRaw(value.toPlainString());  }	  }    else    if(_cfgNumbersAsStrings)    {    writer.writeRaw(value.toPlainString());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
304	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings)  {  writeRaw(value.toPlainString());  }	  }    else    if(_cfgNumbersAsStrings)    {    writer.writeRaw(value.toPlainString());    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
305	[BUG]  [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_cfgNumbersAsStrings)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    if(_cfgNumbersAsStrings)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	10	None	add
306	[BUG]  [BUGGY]          _flushBuffer();  if(_flushBuffer)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }  [CE]  cannot  find  symbol  _flushBuffer  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_flushBuffer)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    if(_flushBuffer)  {  _flushBuffer();  }  else  {  writeRaw(value.toPlainString());  }	  	non-compiled	[CE]  cannot  find  symbol  _flushBuffer	10	None	add
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	10	3	add
308	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(raw);  }	  	compilable	  [FE]  AssertionFailedError  	10	3	add
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	add	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	3	add
310	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  ||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}    else    if(_cfgNumbersAsStrings    ||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(!isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {	  	compilable	  [FE]  AssertionFailedError  	21	3	add
311	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER_FIELD_NAMES);  [CE]  cannot  find  symbol  WRITE_NUMBER_FIELD_NAMES  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _verifyValueWrite(WRITE_NUMBER_FIELD_NAMES);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_verifyValueWrite(WRITE_NUMBER_FIELD_NAMES);	          _verifyValueWrite(WRITE_NUMBER_AS_PLAIN);    	non-compiled	[CE]  cannot  find  symbol  WRITE_NUMBER_FIELD_NAMES	47	None	replace
312	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value);  [CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  _writeQuotedRaw(value);  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    _writeQuotedRaw(value);	  	non-compiled	[CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	33	None	add
313	[BUG]  [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(value.toPlainString());  [CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)  [FE]      AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    }  else  if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  Writer  value  =  _writeQuotedRaw(value.toPlainString());  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}        else        if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||        isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))        {        }    else    if(isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    Writer  value  =  _writeQuotedRaw(value.toPlainString());	  	non-compiled	[CE]  variable  value  is  already  defined  in  method  writeNumber(BigDecimal)	33	None	add
314	[BUG]  [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  raw.length()  ==  0)  {  [CE]  cannot  find  symbol  raw  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  raw.length()  ==  0)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgNumbersAsStrings  &&  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)||  raw.length()  ==  0)  {	  }    else    if(_cfgNumbersAsStrings    &&    isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))    {    	non-compiled	[CE]  cannot  find  symbol  raw	20	None	replace
315	[BUG]  [BUGGY]  _writeQuotedRaw();  [CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError    [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  _writeQuotedRaw();  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	_writeQuotedRaw();	          _reportUnsupportedOperation();    	non-compiled	[CE]  method  _writeQuotedRaw  in  class  WriterBasedJsonGenerator  cannot  be  applied  to  given  types;	49	None	replace
316	[BUG]  [BUGGY]  }  else  if(_cfgPlainStringsAsStrings)  {  [CE]  cannot  find  symbol  _cfgPlainStringsAsStrings  [FE]        AssertionFailedError      [CONTEXT]      public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);  if  (value  ==  null)  {  _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);      [BUGGY]  }  else  if(_cfgPlainStringsAsStrings)  {  [BUGGY]      writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	689	689	1	replace	}  else  if(_cfgPlainStringsAsStrings)  {	  }    else    if(_cfgPlainStrings)    {    	non-compiled	[CE]  cannot  find  symbol  _cfgPlainStringsAsStrings	40	None	replace
