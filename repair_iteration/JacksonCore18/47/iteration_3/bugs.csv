bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	20	5	replace
2	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	20	5	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	20	5	replace
4	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	20	5	replace
5	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  null;  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  null;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  null;  }	  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]    =    0;    	non-compiled	[CE]  incompatible  types	20	None	replace
6	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	33	None	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	33	5	replace
8	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	33	5	replace
9	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	33	None	replace
10	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	57	5	add
11	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	57	5	add
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.END_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.END_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	57	5	add
13	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.END_OK_AS_IS;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.END_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.END_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	57	5	add
14	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.StarT_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.StarT_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	57	5	add
15	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.StarT_OK_AS_IS;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.StarT_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.StarT_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	57	5	add
16	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	57	5	add
17	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	57	5	add
18	[BUG]  [BUGGY]  _writeRaw(typeMsg,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeRaw(typeMsg,  _outputBuffer);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writeRaw(typeMsg,  _outputBuffer);	          _writeRaw(typeMsg);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
19	[BUG]  [BUGGY]  _writeRaw(typeMsg,  c);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeRaw(typeMsg,  c);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writeRaw(typeMsg,  c);	          _writeRaw(typeMsg);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
20	[BUG]  [BUGGY]  _writeRaw(typeMsg,  _outputTail);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeRaw(typeMsg,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writeRaw(typeMsg,  _outputTail);	          _writeRaw(typeMsg);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
21	[BUG]  [BUGGY]  _outputBuffer[_outputTail  +  2]  ='  {  ';  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail  +  2]  ='  {  ';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail  +  2]  ='  {  ';	  _outputBuffer[_outputTail    +    1]    ='{    ';    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  _outputBuffer[_outputTail]  =  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    _outputBuffer[_outputTail]  =  1;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
23	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  _outputBuffer[_outputTail]  =  1;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  _outputBuffer[_outputTail]  =  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    _outputBuffer[_outputTail]  =  1;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
25	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
26	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
27	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	29	5	add
29	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	29	5	add
30	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  2;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  2;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
31	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  2;  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  2;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  1;  }  else  {  _outputBuffer[_outputTail]  =  2;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
32	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	50	None	replace
33	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	50	5	replace
34	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]              ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	50	5	replace
35	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  Json  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  Json  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  Json	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	50	None	replace
36	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _rootValueSeparator);  [CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,SerializableString)  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _rootValueSeparator);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _rootValueSeparator);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext();    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,SerializableString)	68	None	replace
37	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }	          if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	11	5	replace
38	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }	          if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	11	5	replace
39	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OBJECT;  [CE]  cannot  find  symbol  STATUS_OBJECT  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OBJECT;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OBJECT;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  STATUS_OBJECT	56	None	replace
40	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{  '+_outputHead  + "'   ";  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{  '+_outputHead  + "'   ";  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='{  '+_outputHead  + "'   ";	  _outputBuffer[_outputTail]    ='{'+    _outputEnd    +   "'   ";    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
41	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  _outputHead  + "',  ' "+_outputEnd  + "' ";  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  _outputHead  + "',  ' "+_outputEnd  + "' ";  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='{'+  _outputHead  + "',  ' "+_outputEnd  + "' ";	  _outputBuffer[_outputTail]    ='{'+    _outputEnd    +   "'   ";    	non-compiled	[CE]  incompatible  types	63	None	replace
42	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  0;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  0;	  _outputBuffer[_outputTail]    =    typeMsg,    _outputHead;    	non-compiled	[CE]  ';'  expected	62	None	replace
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	65	5	replace
44	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	65	5	replace
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	65	5	replace
46	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	65	5	replace
47	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
48	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	43	5	replace
49	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	43	5	replace
50	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	43	5	replace
51	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	43	5	replace
52	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	35	None	replace
53	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  -1);  [CE]  no  suitable  method  found  for  createRootContext(int,int,int)  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  -1);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  -1);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(-1,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int,int)	67	None	replace
54	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  0);  [CE]  no  suitable  method  found  for  createRootContext(int,int,int)  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  0);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  0);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(-1,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int,int)	67	None	replace
55	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  1);  [CE]  no  suitable  method  found  for  createRootContext(int,int)  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  1);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  1);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(-1,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int)	67	None	replace
56	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
57	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
58	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >>  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  	non-compiled	[CE]  incompatible  types	27	None	add
59	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
60	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(_rootValueSeparator.getValue());  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(_rootValueSeparator.getValue());  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(_rootValueSeparator.getValue());  }	  	non-compiled	[CE]  cannot  find  symbol	27	None	add
61	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
62	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  _outputBuffer[_outputTail]  =  4;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    _outputBuffer[_outputTail]  =  4;	  	compilable	  [FE]  AssertionFailedError  	60	1	add
63	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  _outputBuffer[_outputTail]  =  4;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  _outputBuffer[_outputTail]  =  4;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    _outputBuffer[_outputTail]  =  4;	  	compilable	  [FE]  AssertionFailedError  	60	1	add
64	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
65	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
66	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
67	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  3;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  3;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
69	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  3;  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  3;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  3;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
71	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  4;  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
72	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	64	5	add
73	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	64	5	add
74	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;	  	compilable	  [FE]  ComparisonFailure  	64	5	add
75	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;	  	compilable	  [FE]  ComparisonFailure  	64	5	add
76	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  else  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  else  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  else  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
77	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
78	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  cannot  find  symbol	64	None	add
79	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  ==  _outputEnd;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  ==  _outputEnd;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  ==  _outputEnd;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    ||    _outputTail    >=    _outputEnd;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
80	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >>  _outputEnd;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >>  _outputEnd;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >>  _outputEnd;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    ||    _outputTail    >=    _outputEnd;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
82	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;	  	compilable	  [FE]  AssertionFailedError  	17	1	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
84	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
85	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;	  	non-compiled	[CE]  illegal  start  of  type	17	None	add
86	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  else  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  type	17	None	add
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  _outputBuffer[_outputTail]  =  'n';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    'n';    _outputBuffer[_outputTail]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	44	1	add
88	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  _outputBuffer[_outputTail]  =  'n';  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  _outputBuffer[_outputTail]  =  'n';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    _outputBuffer[_outputTail]  =  'n';	  	compilable	  [FE]  AssertionFailedError  	44	1	add
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
90	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
91	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	44	None	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '#';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '#';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
93	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '#';  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '#';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '#';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '.';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '.';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
95	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '.';  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '.';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  'n';  }  else  {  _outputBuffer[_outputTail]  =  '.';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
96	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_	  	non-compiled	[CE]  ';'  expected	36	None	add
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	36	1	add
98	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	36	1	add
99	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_	  	non-compiled	[CE]  ';'  expected	36	None	add
100	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK	  	non-compiled	[CE]  ';'  expected	36	None	add
101	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS	  	non-compiled	[CE]  ';'  expected	36	None	add
102	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,char[],int)  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer,  _outputTail);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(this);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,char[],int)	69	None	replace
103	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer);  [CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,char[])  [FE]              ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(this);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,char[])	69	None	replace
104	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputHead);  [CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,int)  [FE]                ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputHead);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputHead);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(this);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,int)	69	None	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
106	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
108	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	46	1	add
109	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	46	1	add
110	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	46	1	add
111	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTa  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTa  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTa	  	non-compiled	[CE]  ']'  expected	46	None	add
112	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  J  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  J  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  J	  	non-compiled	[CE]  ';'  expected	46	None	add
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_writer.write(_outputBuffer,  0,  _outputTail);	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	74	5	replace
114	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  0,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(_outputBuffer,  0,  _outputTail);	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	74	5	replace
115	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail);	  _outputBuffer[_outputTail]    =    1;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	30	None	replace
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  STATUS_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
117	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  STATUS_OK_AS_IS;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  STATUS_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
118	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  c,  typeMsg;  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  c,  typeMsg;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  c,  typeMsg;	  _outputBuffer[_outputTail]    =    typeMsg,    c;    	non-compiled	[CE]  ';'  expected	3	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  _outputBuffer[_outputTail]  =  '>';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    '>';    _outputBuffer[_outputTail]  =  '>';	  	compilable	  [FE]  AssertionFailedError  	13	1	add
120	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  _outputBuffer[_outputTail]  =  '>';  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  _outputBuffer[_outputTail]  =  '>';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    _outputBuffer[_outputTail]  =  '>';	  	compilable	  [FE]  AssertionFailedError  	13	1	add
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
122	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
123	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  =  '  [CE]  illegal  line  end  in  character  literal  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  =  '  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  =  '	  	non-compiled	[CE]  illegal  line  end  in  character  literal	13	None	add
124	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  ='<  ';  }  [CE]  unclosed  character  literal  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  ='<  ';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  ='<  ';  }	  	non-compiled	[CE]  unclosed  character  literal	13	None	add
125	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  ='}  ';  }  [CE]  unclosed  character  literal  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  ='}  ';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  '>';  }  else  {  _outputBuffer[_outputTail]  ='}  ';  }	  	non-compiled	[CE]  unclosed  character  literal	13	None	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
127	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
128	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	38	None	add
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
130	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
131	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  cannot  find  symbol	38	None	add
132	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush  [CE]  ']'  expected  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush	  	non-compiled	[CE]  ']'  expected	38	None	add
133	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
134	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
136	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
137	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	8	None	add
138	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
139	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
140	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  typeMsg,  _outputTail);  [CE]  no  suitable  method  found  for  write(char[],String,int)  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  typeMsg,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(_outputBuffer,  typeMsg,  _outputTail);	          _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(char[],String,int)	55	None	replace
141	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  _rootValueSeparator);  [CE]  no  suitable  method  found  for  write(String,char[],int,SerializableString)  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  _rootValueSeparator);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg,  _outputBuffer,  _outputTail,  _rootValueSeparator);	          _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int,SerializableString)	55	None	replace
142	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  no  suitable  method  found  for  write(String,char[],int,int)  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg,  _outputBuffer,  _outputTail,  _outputHead);	          _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int,int)	55	None	replace
143	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  _outputEnd);  [CE]  no  suitable  method  found  for  write(String,char[],int,int)  [FE]              ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  _outputEnd);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg,  _outputBuffer,  _outputTail,  _outputEnd);	          _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int,int)	55	None	replace
144	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	compilable	  [FE]  ComparisonFailure  	37	5	replace
145	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	compilable	  [FE]  ComparisonFailure  	37	5	replace
146	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='}  ';  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='}  ';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='}  ';	  _outputBuffer[_outputTail]    =    '>';    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
147	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(_rootValueSeparator.getValue());  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(_rootValueSeparator.getValue());  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(_rootValueSeparator.getValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
148	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
149	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  writeRaw(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
150	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  writeRaw(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
151	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  _writeRaw(typeMsg);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  _writeRaw(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    _writeRaw(typeMsg);	  	non-compiled	[CE]  cannot  find  symbol	25	None	add
152	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
153	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator!=  null)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  ComparisonFailure  	5	5	replace
154	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _flushBuffer();  }	          _flushBuffer();    	compilable	  [FE]  ComparisonFailure  	5	5	replace
155	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >=  _outputEnd);  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >=  _outputEnd);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >=  _outputEnd);	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    	non-compiled	[CE]  ';'  expected	18	None	replace
156	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_outputBuffer,  0,  _outputBuffer,  _outputTail);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_outputBuffer,  0,  _outputBuffer,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  System.arraycopy(_outputBuffer,  0,  _outputBuffer,  _outputTail);	  _outputBuffer[_outputTail]    =    System.arraycopy(_rootValueSeparator,    0,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	replace
157	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  _outputEnd);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  _outputEnd);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  _outputEnd);	  _outputBuffer[_outputTail]    =    System.arraycopy(_rootValueSeparator,    0,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	replace
158	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  0,  _outputBuffer,  _outputTail,  _outputEnd);  [CE]  incompatible  types  [FE]              ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  0,  _outputBuffer,  _outputTail,  _outputEnd);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  0,  _outputBuffer,  _outputTail,  _outputEnd);	  _outputBuffer[_outputTail]    =    System.arraycopy(_rootValueSeparator,    0,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  incompatible  types	31	None	replace
159	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
160	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
161	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
162	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
163	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
164	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0	  	non-compiled	[CE]  ';'  expected	23	None	add
165	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTa  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTa  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTa	  	non-compiled	[CE]  ']'  expected	21	None	add
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
167	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
168	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
169	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
171	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
173	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
175	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
176	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTa  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTa  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTa	  	non-compiled	[CE]  ']'  expected	48	None	add
177	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  J  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  J  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  J	  	non-compiled	[CE]  ';'  expected	48	None	add
178	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	39	5	replace
179	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	39	5	replace
180	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
181	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
182	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
183	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
184	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
186	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
188	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
190	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
192	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  AssertionFailedError  	40	1	add
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
194	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
196	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  0;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _outputBuffer[_outputTail]  =  0;  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
197	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputTail  =  System.currentTimeMillis();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputTail  =  System.currentTimeMillis();	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '/';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  '/';	  _outputBuffer[_outputTail]    =    'ufffd';    	compilable	  [FE]  ComparisonFailure  	70	5	replace
199	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '/';  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '/';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  '/';	  _outputBuffer[_outputTail]    =    'ufffd';    	compilable	  [FE]  ComparisonFailure  	70	5	replace
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]              AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '.';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  '.';	  _outputBuffer[_outputTail]    =    'ufffd';    	compilable	  [FE]  ComparisonFailure  	70	5	replace
201	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '.';  [FE]  ComparisonFailure  [FE]              AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '.';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  '.';	  _outputBuffer[_outputTail]    =    'ufffd';    	compilable	  [FE]  ComparisonFailure  	70	5	replace
202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  3;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  3;	  _outputBuffer[_outputTail]    =    4;    	compilable	  [FE]  ComparisonFailure  	61	5	replace
203	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  3;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  3;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  3;	  _outputBuffer[_outputTail]    =    4;    	compilable	  [FE]  ComparisonFailure  	61	5	replace
204	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  _outputBuffer[_outputTail]  ='  {  '+  1;  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  _outputBuffer[_outputTail]  ='  {  '+  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    ='{'+    1;    _outputBuffer[_outputTail]  ='  {  '+  1;	  	non-compiled	[CE]  unclosed  character  literal	51	None	add
205	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  ='  {  '+  1;  }  [CE]  unclosed  character  literal  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  ='  {  '+  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  ='  {  '+  1;  }	  	non-compiled	[CE]  unclosed  character  literal	51	None	add
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
207	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
208	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	51	None	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
210	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	32	1	add
211	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS	  	non-compiled	[CE]  ';'  expected	32	None	add
212	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JSONWriteContext.STATUS_OK_AS_IS;  [CE]  cannot  find  symbol  JSONWriteContext  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JSONWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JSONWriteContext.STATUS_OK_AS_IS;	  	non-compiled	[CE]  cannot  find  symbol  JSONWriteContext	32	None	add
213	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK	  	non-compiled	[CE]  ';'  expected	32	None	add
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	4	1	add
215	[BUG]  [BUGGY]          _flushBuffer();  _flushBuffer();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	4	1	add
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
217	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                _flushBuffer();    if(_rootValueSeparator!=  null)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
219	[BUG]  [BUGGY]          _flushBuffer();  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _flushBuffer();    if(_rootValueSeparator!=  null)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
221	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
222	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
223	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
224	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getKey());  [CE]  cannot  find  symbol  [FE]    JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getKey());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getKey());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
225	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getTypeDesc());  [CE]  cannot  find  symbol  [FE]      JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getTypeDesc());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getTypeDesc());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
226	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.toString());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.toString());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    	compilable	  [FE]  JsonGenerationException  	72	5	replace
227	[BUG]  [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.toString());  [FE]  JsonGenerationException  [FE]        JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.toString());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.toString());	          _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    	compilable	  [FE]  JsonGenerationException  	72	5	replace
228	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  c,  typeMsg);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  c,  typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  c,  typeMsg);	  _outputBuffer[_outputTail]    =    typeMsg,    c);    	non-compiled	[CE]  ';'  expected	66	None	replace
229	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  0);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  0);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  0);	  _outputBuffer[_outputTail]    =    typeMsg,    c);    	non-compiled	[CE]  ';'  expected	66	None	replace
230	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputHead);  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputHead);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  _outputHead);	  _outputBuffer[_outputTail]    =    typeMsg,    c);    	non-compiled	[CE]  ';'  expected	66	None	replace
231	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _output  [CE]  ';'  expected  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _output  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _output	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    else    {    _outputBuffer[_outputTail]    =    J    	non-compiled	[CE]  ';'  expected	34	None	replace
232	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[  [CE]  ']'  expected  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    else    {    _outputBuffer[_outputTail]    =    J    	non-compiled	[CE]  ']'  expected	34	None	replace
233	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd  +  1);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd  +  1);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  _outputEnd  +  1);	  _outputBuffer[_outputTail]    =    typeMsg,    _outputEnd);    	non-compiled	[CE]  ';'  expected	2	None	replace
234	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '0';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  '0';	  _outputBuffer[_outputTail]    =    'n';    	compilable	  [FE]  ComparisonFailure  	45	5	replace
235	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '0';  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '0';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  '0';	  _outputBuffer[_outputTail]    =    'n';    	compilable	  [FE]  ComparisonFailure  	45	5	replace
236	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  ';';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  ';';	  _outputBuffer[_outputTail]    =    'n';    	compilable	  [FE]  ComparisonFailure  	45	5	replace
237	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  ';';  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  ';';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  ';';	  _outputBuffer[_outputTail]    =    'n';    	compilable	  [FE]  ComparisonFailure  	45	5	replace
238	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_writer.write(typeMsg);    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	53	5	add
239	[BUG]  [BUGGY]  _writer.write(typeMsg);  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	53	5	add
240	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
241	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  ComparableString(_rootValueSeparator.getValue());  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  ComparableString(_rootValueSeparator.getValue());  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  ComparableString(_rootValueSeparator.getValue());  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
242	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.removeValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
243	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.write(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.write(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.write(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
244	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputTail  =  _outputHead;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputTail  =  _outputHead;	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	7	5	replace
245	[BUG]  [BUGGY]  _outputTail  =  _outputHead;  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputTail  =  _outputHead;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputTail  =  _outputHead;	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	7	5	replace
246	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	22	5	replace
247	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	22	5	replace
248	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	22	5	replace
249	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	22	5	replace
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	41	5	replace
251	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	41	5	replace
252	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	41	5	replace
253	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	41	5	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
255	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  AssertionFailedError  	19	1	add
256	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
257	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
258	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
259	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
260	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	19	5	add
261	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	19	5	add
262	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	26	5	replace
263	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	26	5	replace
264	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
265	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
266	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	6	None	add
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
268	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
270	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
271	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  ComparisonFailure  	42	5	add
272	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _outputBuffer[_outputTail]  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _outputBuffer[_outputTail]  =  0;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  ComparisonFailure  	42	5	add
273	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _writeRaw(typeMsg);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _writeRaw(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    _writeRaw(typeMsg);	  	non-compiled	[CE]  cannot  find  symbol	42	None	add
274	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _writeRaw(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
275	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _writeRaw(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
276	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _writer.write(_outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(char[],int)  [FE]            ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _writer.write(_outputBuffer,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    _writer.write(_outputBuffer,  _outputTail);	  	non-compiled	[CE]  no  suitable  method  found  for  write(char[],int)	42	None	add
277	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(c);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_writer.write(c);	  _writer.write(typeMsg);    	compilable	  [FE]  ComparisonFailure  	54	5	replace
278	[BUG]  [BUGGY]  _writer.write(c);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(c);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(c);	  _writer.write(typeMsg);    	compilable	  [FE]  ComparisonFailure  	54	5	replace
279	[BUG]  [BUGGY]  _writer.write(typeMsg,  _rootValueSeparator.getValue());  [CE]  no  suitable  method  found  for  write(String,String)  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg,  _rootValueSeparator.getValue());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg,  _rootValueSeparator.getValue());	  _writer.write(typeMsg);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,String)	54	None	replace
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
281	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
283	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
284	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	10	None	add
285	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	10	5	add
286	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	10	5	add
287	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='  {  '+16;  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='  {  '+16;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='  {  '+16;	  _outputBuffer[_outputTail]    ='{'+    1;    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
288	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());	  	compilable	  [FE]  JsonGenerationException  	71	5	add
289	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  [FE]  JsonGenerationException  [FE]    JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());	  	compilable	  [FE]  JsonGenerationException  	71	5	add
290	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getKey());  [CE]  cannot  find  symbol  [FE]      JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getKey());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    _reportError( "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getKey());	  	non-compiled	[CE]  cannot  find  symbol	71	None	add
291	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	38	5	add
292	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	38	5	add
293	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
294	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
295	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
296	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	38	None	add
297	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [CE]  ';'  expected  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	35	None	replace
298	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	35	None	replace
299	[BUG]  [BUGGY]  _writeRaw(typeMsg,  _rootValueSeparator);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeRaw(typeMsg,  _rootValueSeparator);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writeRaw(typeMsg,  _rootValueSeparator);	          _writeRaw(typeMsg);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
300	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer);  [CE]  no  suitable  method  found  for  write(String,char[])  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg,  _outputBuffer);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg,  _outputBuffer);	  _writer.write(typeMsg);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[])	54	None	replace
301	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
302	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputEnd);  [CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,int)  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputEnd);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputEnd);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(this);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,int)	69	None	replace
303	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	28	5	replace
304	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	28	5	replace
305	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
306	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
307	[BUG]  [BUGGY]  _outputBuffer[_outputTail  +  1]  ='<  ';  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail  +  1]  ='<  ';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail  +  1]  ='<  ';	  _outputBuffer[_outputTail    +    1]    ='{    ';    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
309	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
310	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail	  	non-compiled	[CE]  ')'  expected	13	None	add
311	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _output  [CE]  ']'  expected  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _output  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _output	  	non-compiled	[CE]  ']'  expected	13	None	add
312	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWrite  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWrite  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWrite	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  ';'  expected	37	None	replace
313	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  c,  _outputEnd);  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  c,  _outputEnd);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  c,  _outputEnd);	  _outputBuffer[_outputTail]    =    typeMsg,    _outputEnd);    	non-compiled	[CE]  ';'  expected	2	None	replace
314	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  else  {  _outputBuffer[_outputTa  [CE]  ']'  expected  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  else  {  _outputBuffer[_outputTa  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  else  {  _outputBuffer[_outputTa	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    	non-compiled	[CE]  ']'  expected	65	None	replace
315	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
316	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
317	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  null;  _outputBuffer[_outputTail]  =  0;  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  null;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  null;  _outputBuffer[_outputTail]  =  0;  }	  	non-compiled	[CE]  incompatible  types	19	None	add
318	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  typeMsg);  [CE]  no  suitable  method  found  for  write(char[],String)  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(_outputBuffer,  typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(_outputBuffer,  typeMsg);	          _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(char[],String)	55	None	replace
319	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer()  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer()  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer()	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  ';'  expected	47	None	replace
320	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flush  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flush  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flush	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  ';'  expected	47	None	replace
321	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	23	5	add
322	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	23	5	add
323	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
324	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
325	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
326	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
327	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
328	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
329	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(this,  typeMsg);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(this,  typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(this,  typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
330	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(this,  typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(this,  typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(this,  typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
331	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	36	1	add
332	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	36	1	add
333	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
334	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
335	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
336	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
337	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputTail  =  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputTail  =  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  _outputTail  =	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
338	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	46	5	add
339	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	46	5	add
340	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
341	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
342	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
343	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	46	5	add
344	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  ComparisonFailure  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	46	5	add
345	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
346	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	51	1	add
347	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  [CE]  ']'  expected  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail	  	non-compiled	[CE]  ']'  expected	51	None	add
348	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }	          if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
349	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }	          if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
350	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
351	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	21	5	add
352	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	21	5	add
353	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
354	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
355	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
356	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
357	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputHead  +  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputHead  +  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  _outputHead  +  1;	  _outputBuffer[_outputTail]    =    typeMsg,    _outputHead;    	non-compiled	[CE]  ';'  expected	62	None	replace
358	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	20	5	replace
359	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	20	5	replace
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
361	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
363	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
365	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                _flushBuffer();    if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
367	[BUG]  [BUGGY]          _flushBuffer();  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _flushBuffer();    if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
368	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg!=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(typeMsg!=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	10	5	add
369	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg!=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg!=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(typeMsg!=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	10	5	add
370	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg  ==  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(typeMsg  ==  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
371	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg  ==  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg  ==  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(typeMsg  ==  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
372	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg!=  null)  {  _writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg!=  null)  {  _writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(typeMsg!=  null)  {  _writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
374	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
375	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  2;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  2;	  _outputBuffer[_outputTail]    =    1;    	compilable	  [FE]  ComparisonFailure  	30	5	replace
376	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  2;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  2;	  _outputBuffer[_outputTail]    =    1;    	compilable	  [FE]  ComparisonFailure  	30	5	replace
377	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail  +  1]  =  JsonWriteContext.START_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail  +  1]  =  JsonWriteContext.START_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
378	[BUG]  [BUGGY]  _outputBuffer[_outputTail  +  1]  =  JsonWriteContext.START_OK_AS_IS;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail  +  1]  =  JsonWriteContext.START_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail  +  1]  =  JsonWriteContext.START_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
379	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
380	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd  +  1;  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd  +  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  _outputEnd  +  1;	  _outputBuffer[_outputTail]    =    typeMsg,    _outputEnd;    	non-compiled	[CE]  ';'  expected	1	None	replace
381	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	40	5	add
382	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	40	5	add
383	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
384	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
385	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
386	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
387	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	27	5	add
388	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	27	5	add
389	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
390	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	27	1	add
392	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _flushBuffer();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	27	1	add
393	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	33	None	replace
394	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWrite  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWrite  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWrite	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	33	None	replace
395	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
396	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
397	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
398	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  4;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
399	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  5;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  5;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
400	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  5;  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  5;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  5;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
401	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(true);  [CE]  no  suitable  method  found  for  createRootContext(boolean)  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(true);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(true);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext();    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(boolean)	68	None	replace
402	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(null);  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(null);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(null);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext();    	non-compiled	[CE]  incompatible  types	68	None	replace
403	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	50	5	replace
404	[BUG]  [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	50	5	replace
405	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	73	5	add
406	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	73	5	add
407	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
408	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
409	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
410	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	73	None	add
411	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_ARRAY;  [CE]  cannot  find  symbol  START_ARRAY  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_ARRAY;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.START_ARRAY;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  START_ARRAY	56	None	replace
412	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.END_OBJECT;  [CE]  cannot  find  symbol  END_OBJECT  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.END_OBJECT;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.END_OBJECT;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  END_OBJECT	56	None	replace
413	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer()  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer()  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer()	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  ';'  expected	49	None	replace
414	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
415	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  _outputHead);  [CE]  no  suitable  method  found  for  createRootContext(int,int,int)  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  _outputHead);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1,  _outputHead);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(-1,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int,int)	67	None	replace
416	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
417	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(this,  typeMsg);  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(this,  typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.writeValue(this,  typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
418	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
420	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'r';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'r';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
422	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'r';  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'r';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'r';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
423	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRa  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRa  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRa	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
424	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeM  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeM  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeM	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
425	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
426	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_rootValueSeparator!=  null)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
427	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
428	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
429	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  return;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  return;  }	  	compilable	  [FE]  ComparisonFailure  	8	5	add
430	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  return;  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  return;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  return;  }	  	compilable	  [FE]  ComparisonFailure  	8	5	add
431	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _buffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [CE]  cannot  find  symbol  _buffer  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  _buffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    _buffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _buffer	17	None	add
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
433	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
434	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
435	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  &&  _outputTail  >=  _outputEnd;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  &&  _outputTail  >=  _outputEnd;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  &&  _outputTail  >=  _outputEnd;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    ||    _outputTail    >=    _outputEnd;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	16	None	replace
436	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputHead  >=  _outputEnd;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputHead  >=  _outputEnd;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputHead  >=  _outputEnd;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    ||    _outputTail    >=    _outputEnd;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
437	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  &&  _outputEnd  >=  _outputTail;  [CE]  bad  operand  types  for  binary  operator  '&&'  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  &&  _outputEnd  >=  _outputTail;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  &&  _outputEnd  >=  _outputTail;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    ||    _outputTail    >=    _outputEnd;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '&&'	16	None	replace
438	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	48	5	add
439	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	48	5	add
440	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
441	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	48	1	add
442	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
443	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.setValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
444	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  new  SerializableString(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
445	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
446	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _writer.write(_rootValueSeparator.getValue());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    _writer.write(_rootValueSeparator.getValue());	  	compilable	  [FE]  ComparisonFailure  	42	5	add
447	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _writer.write(_rootValueSeparator.getValue());  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  _writer.write(_rootValueSeparator.getValue());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    _writer.write(_rootValueSeparator.getValue());	  	compilable	  [FE]  ComparisonFailure  	42	5	add
448	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
449	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
450	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_CANCEL_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [CE]  cannot  find  symbol  STATUS_CANCEL_AS_IS  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_CANCEL_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_CANCEL_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	non-compiled	[CE]  cannot  find  symbol  STATUS_CANCEL_AS_IS	32	None	add
451	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS	  	non-compiled	[CE]  ';'  expected	32	None	add
452	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	64	5	add
453	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _writer.write(typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	64	5	add
454	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  getRootValueSeparator();  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
455	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	64	5	add
456	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  ComparisonFailure  	64	5	add
457	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator.reset();  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
458	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  ':';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  ':';	  _outputBuffer[_outputTail]    =    'ufffd';    	compilable	  [FE]  AssertionFailedError  	70	2	replace
459	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  ':';  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  ':';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  ':';	  _outputBuffer[_outputTail]    =    'ufffd';    	compilable	  [FE]  AssertionFailedError  	70	2	replace
460	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_rootValueSeparator  ==  null)  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	7	5	replace
461	[BUG]  [BUGGY]  if(_rootValueSeparator  ==  null)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator  ==  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator  ==  null)  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	7	5	replace
462	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_START_OBJECT;  [CE]  cannot  find  symbol  STATUS_START_OBJECT  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_START_OBJECT;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_START_OBJECT;	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OBJECT;    	non-compiled	[CE]  cannot  find  symbol  STATUS_START_OBJECT	56	None	replace
463	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
464	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
465	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  _rootValueSeparator.getValue();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  _rootValueSeparator.getValue();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  if(_rootValueSeparator!=  null)  {  _rootValueSeparator  =  _rootValueSeparator.getValue();  }	  	non-compiled	[CE]  illegal  start  of  expression	53	None	add
466	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_writer.write(typeMsg);    if(typeMsg!=  null)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	53	5	add
467	[BUG]  [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg);  if(typeMsg!=  null)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);    if(typeMsg!=  null)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	53	5	add
468	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputEnd  >=  _outputBuffer.length;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputEnd  >=  _outputBuffer.length;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputEnd  >=  _outputBuffer.length;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    ||    _outputTail    >=    _outputEnd;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	16	None	replace
469	[BUG]  [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  _reportError(, "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  [CE]  illegal  start  of  expression  [FE]    JsonGenerationException    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _reportError(   "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  _reportError(, "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _reportError(   "Current    context    not    an    ARRAY    but   "+_rootValueSeparator.getValue());    _reportError(, "Current  context  not  an  ARRAY  but   "+_rootValueSeparator.getValue());	  	non-compiled	[CE]  illegal  start  of  expression	71	None	add
470	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail  +  1]  =  '>';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail  +  1]  =  '>';	  _outputBuffer[_outputTail    +    1]    ='{    ';    	compilable	  [FE]  ComparisonFailure  	15	5	replace
471	[BUG]  [BUGGY]  _outputBuffer[_outputTail  +  1]  =  '>';  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail  +  1]  =  '>';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail  +  1]  =  '>';	  _outputBuffer[_outputTail    +    1]    ='{    ';    	compilable	  [FE]  ComparisonFailure  	15	5	replace
472	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]!=  null)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]!=  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]!=  null)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    1;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
474	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  1;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    1;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	29	1	add
475	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
476	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  'n';  }	  	compilable	  [FE]  AssertionFailedError  	44	1	add
477	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  'n';  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  'n';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    'n';    if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  'n';  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	44	None	add
478	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer,  _outputHead);  [CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,char[],int)  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer,  _outputHead);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this,  _outputBuffer,  _outputHead);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(this);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator,char[],int)	69	None	replace
479	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  2;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  ='{'+  2;	  _outputBuffer[_outputTail]    ='{'+    1;    	compilable	  [FE]  ComparisonFailure  	52	5	replace
480	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  2;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  2;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='{'+  2;	  _outputBuffer[_outputTail]    ='{'+    1;    	compilable	  [FE]  ComparisonFailure  	52	5	replace
481	[BUG]  [BUGGY]  _writer.write(typeMsg,  c);  [CE]  no  suitable  method  found  for  write(String,char)  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg,  c);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg,  c);	  _writer.write(typeMsg);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char)	54	None	replace
482	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  <identifier>  expected	50	None	replace
483	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _rootValueSeparator.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _rootValueSeparator.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	||(_outputTail  >=  _outputEnd  &&  _rootValueSeparator.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
484	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _rootValueSeparator.hasValue()))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _rootValueSeparator.hasValue()))  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	||(_outputTail  >=  _outputEnd  &&  _rootValueSeparator.hasValue()))  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
485	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
486	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(0,  0);  [CE]  no  suitable  method  found  for  createRootContext(int,int)  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(0,  0);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(0,  0);	  _outputBuffer[_outputTail]    =    JsonWriteContext.createRootContext(-1,    -1);    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int)	67	None	replace
487	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  BYTE_QUOTE;  [CE]  cannot  find  symbol  BYTE_QUOTE  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  BYTE_QUOTE;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  BYTE_QUOTE;	  _outputBuffer[_outputTail]    =    1;    	non-compiled	[CE]  cannot  find  symbol  BYTE_QUOTE	30	None	replace
488	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail++]  =  1;	  _outputBuffer[_outputTail]    =    1;    	compilable	  [FE]  ComparisonFailure  	30	5	replace
489	[BUG]  [BUGGY]  _outputBuffer[_outputTail++]  =  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail++]  =  1;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail++]  =  1;	  _outputBuffer[_outputTail]    =    1;    	compilable	  [FE]  ComparisonFailure  	30	5	replace
490	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    	compilable	  [FE]  ComparisonFailure  	18	5	replace
491	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS    +    1;    	compilable	  [FE]  ComparisonFailure  	18	5	replace
492	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  ='  {  '+  2;  }  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  ='  {  '+  2;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    ='{'+    1;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  ='  {  '+  2;  }	  	non-compiled	[CE]  unclosed  character  literal	51	None	add
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    4;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
494	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	60	1	add
495	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  4;  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  4;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    4;    if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  4;  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	60	None	add
496	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  	  	non-compiled	[CE]  ')'  expected	48	None	add
497	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail	  	non-compiled	[CE]  ']'  expected	48	None	add
498	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
499	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
500	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
501	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  _rootValueSeparator.writeValue(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  _rootValueSeparator.writeValue(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator  ==  null)  {  _rootValueSeparator.writeValue(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
503	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	38	1	add
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	38	1	add
505	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _flushBuffer();  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	38	1	add
506	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.write(typeMsg,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,char[],int)  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _writer.write(typeMsg,  _outputBuffer,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    _writer.write(typeMsg,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int)	38	None	add
507	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
508	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWrite  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWrite  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWrite	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	33	None	replace
509	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  Json  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  Json  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  Json	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  ';'  expected	33	None	replace
510	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(c  ==  'n'  ||  c  ==  'r')  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	22	5	replace
511	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    	compilable	  [FE]  ComparisonFailure  	22	5	replace
512	[BUG]  [BUGGY]  [FE]  junit.framework.ComparisonFailure:  expected:<{ "foo "[:]1}>  but  was:<{ "foo "[  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  ',';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  ',';	  _outputBuffer[_outputTail]    =    'n';    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "foo "[:]1}>  but  was:<{ "foo "[  	45	4	replace
513	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  ',';  [FE]  junit.framework.ComparisonFailure:  expected:<{ "foo "[:]1}>  but  was:<{ "foo "[  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  ',';  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  ',';	  _outputBuffer[_outputTail]    =    'n';    	compilable	  [FE]  junit.framework.ComparisonFailure:  expected:<{ "foo "[:]1}>  but  was:<{ "foo "[  	45	4	replace
514	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  	  	non-compiled	[CE]  ')'  expected	46	None	add
515	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	46	5	add
516	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	46	5	add
517	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail	  	non-compiled	[CE]  ']'  expected	46	None	add
518	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
519	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(typeMsg  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(typeMsg  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	26	5	replace
520	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(typeMsg  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(typeMsg  ==  null)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    	compilable	  [FE]  ComparisonFailure  	26	5	replace
521	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
522	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
523	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
524	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0	  	non-compiled	[CE]  ';'  expected	27	None	add
525	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =	  	non-compiled	[CE]  illegal  start  of  expression	27	None	add
526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
527	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
529	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
530	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush  [CE]  ']'  expected  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush	  	non-compiled	[CE]  ']'  expected	40	None	add
531	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flus  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flus  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flus	  	non-compiled	[CE]  ']'  expected	40	None	add
532	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{  '+_outputEnd  + ",' ";  [CE]  unclosed  character  literal  [FE]            AssertionFailedError      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  ='{  '+_outputEnd  + ",' ";  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='{  '+_outputEnd  + ",' ";	  _outputBuffer[_outputTail]    ='{'+    _outputEnd    +   "'   ";    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
534	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
535	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	21	None	add
536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
537	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	21	1	add
538	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	21	1	add
539	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _flushBuffer();  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    _outputBuffer[_outputTail]    =    0;    }    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	21	1	add
540	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  J  [CE]  ';'  expected  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  J  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  J	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    ++_outputTail;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
541	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg  >=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(typeMsg  >=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(typeMsg  >=  null)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	10	None	add
542	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(TypeMsg.equals(typeMsg))  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  TypeMsg  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  if(TypeMsg.equals(typeMsg))  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    writeRaw(typeMsg);    }    else    {    _flushBuffer();    }    if(TypeMsg.equals(typeMsg))  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol  TypeMsg	10	None	add
543	[BUG]  [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  c);  [CE]  no  suitable  method  found  for  write(String,char[],int,char)  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writer.write(typeMsg,  _outputBuffer,  _outputTail,  c);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg,  _outputBuffer,  _outputTail,  c);	          _writer.write(typeMsg,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int,char)	55	None	replace
544	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flush  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flush  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flush	  	non-compiled	[CE]  ']'  expected	73	None	add
545	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flus  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flus  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flus	  	non-compiled	[CE]  ']'  expected	73	None	add
546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
547	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	73	1	add
548	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer	  	non-compiled	[CE]  ']'  expected	73	None	add
549	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
551	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  ++_outputTail;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  ++_outputTail;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
552	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
553	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	57	1	add
554	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush  [CE]  ']'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flush	  	non-compiled	[CE]  ']'  expected	23	None	add
555	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flus  [CE]  ']'  expected  [FE]      AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flus  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flus	  	non-compiled	[CE]  ']'  expected	23	None	add
556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
557	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
558	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _outputBuffer[_outputTail]    =    0;    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer	  	non-compiled	[CE]  ']'  expected	23	None	add
559	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	8	5	add
560	[BUG]  [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	8	5	add
561	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OPTIONAL_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [CE]  cannot  find  symbol  STATUS_OPTIONAL_AS_IS  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OPTIONAL_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OPTIONAL_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	non-compiled	[CE]  cannot  find  symbol  STATUS_OPTIONAL_AS_IS	32	None	add
562	[BUG]  [BUGGY]          _flushBuffer();  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]          _flushBuffer();  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	                _flushBuffer();    if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	4	None	add
563	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
564	[BUG]  [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMs  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMs  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_rootValueSeparator!=  null)  {  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMs	  _outputBuffer[_outputTail]    =    0;    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    	non-compiled	[CE]  ')'  expected	43	None	replace
565	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
566	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
567	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
568	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  else  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  }  else  {  _flushBuffer();  }	  _outputBuffer[_outputTail]    =    JsonWriteContext.START_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	58	5	replace
569	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
570	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  '>';  }	  	compilable	  [FE]  AssertionFailedError  	13	1	add
571	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  '>';  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  '>';  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    '>';    if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer.length;  }  else  {  _outputBuffer[_outputTail]  =  '>';  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	13	None	add
572	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  _outputHead);	  _outputBuffer[_outputTail]    =    System.arraycopy(_rootValueSeparator,    0,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	replace
573	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  typeMsg);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  typeMsg);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  _outputBuffer,  _outputTail,  typeMsg);	  _outputBuffer[_outputTail]    =    System.arraycopy(_rootValueSeparator,    0,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	31	None	replace
574	[BUG]  [BUGGY]  _writeRaw(typeMsg,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _writeRaw(typeMsg,  _outputBuffer,  _outputTail);  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writeRaw(typeMsg,  _outputBuffer,  _outputTail);	          _writeRaw(typeMsg);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
575	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
576	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    _flushBuffer();	  	compilable	  [FE]  ComparisonFailure  	25	5	add
577	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  _flushBuffer();  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  _flushBuffer();  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    _flushBuffer();	  	compilable	  [FE]  ComparisonFailure  	25	5	add
578	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
579	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    0;    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.getValue()  ==  null)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	25	None	add
580	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  ++_outputEnd;  [CE]  possible  loss  of  precision  [FE]        ComparisonFailure      [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]  =  ++_outputEnd;  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  ++_outputEnd;	  _outputBuffer[_outputTail]    =    -1;    	non-compiled	[CE]  possible  loss  of  precision	59	None	replace
581	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
582	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        _outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	19	1	add
583	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
584	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
585	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
586	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
587	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
588	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  writeRaw(typeMsg);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  writeRaw(typeMsg);  }  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        0;        if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    writeRaw(typeMsg);    }    if(_rootValueSeparator!=  null)  {  if(_rootValueSeparator.hasValue())  {  writeRaw(typeMsg);  }	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
589	[BUG]  [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWrite  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }      [BUGGY]  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWrite  [BUGGY]      ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]        =        JsonWriteContext.STATUS_OK_AS_IS;        if(_outputTail    >=    _outputEnd)    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWrite	  	non-compiled	[CE]  ';'  expected	36	None	add
