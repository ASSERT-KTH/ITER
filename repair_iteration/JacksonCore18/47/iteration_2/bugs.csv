bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  _outputEnd;	  _outputBuffer[_outputTail]    =    typeMsg;    	non-compiled	[CE]  ';'  expected	3	None	replace
2	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd);  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputEnd);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  _outputEnd);	  _outputBuffer[_outputTail]    =    typeMsg;    	non-compiled	[CE]  ';'  expected	3	None	replace
3	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  c;  [CE]  ';'  expected  [FE]              AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  c;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  c;	  _outputBuffer[_outputTail]    =    typeMsg;    	non-compiled	[CE]  ';'  expected	3	None	replace
4	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _flushBuffer();  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	        _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	6	1	add
5	[BUG]  [BUGGY]      _flushBuffer();  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _flushBuffer();  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	        _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	6	1	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	        if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
7	[BUG]  [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	        if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	        if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
9	[BUG]  [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	        if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	        if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
11	[BUG]  [BUGGY]      if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	        if(_outputTail  >=  _outputEnd)  {  writeRaw(typeMsg);  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
12	[BUG]  [BUGGY]      _writeRaw(typeMsg);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writeRaw(typeMsg);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	        _writeRaw(typeMsg);	  	non-compiled	[CE]  cannot  find  symbol	6	None	add
13	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  '>';  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  '>';	  _outputBuffer[_outputTail]    ='<    ';    	compilable	  [FE]  ComparisonFailure  	9	5	replace
14	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  '>';  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  '>';  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  '>';	  _outputBuffer[_outputTail]    ='<    ';    	compilable	  [FE]  ComparisonFailure  	9	5	replace
15	[BUG]  [BUGGY]  _outputBuffer[_outputTail  +  1]  ='{  ';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail  +  1]  ='{  ';  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail  +  1]  ='{  ';	  _outputBuffer[_outputTail]    ='{    ';    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
16	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >=  _outputEnd;  [CE]  bad  operand  types  for  binary  operator  '||'  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >=  _outputEnd;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  ||  _outputTail  >=  _outputEnd;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '||'	2	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	2	5	replace
18	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS  +  1;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	2	5	replace
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
20	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  _outputBuffer[_outputTail]  =  0;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    _outputBuffer[_outputTail]  =  0;	  	compilable	  [FE]  AssertionFailedError  	4	1	add
21	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
22	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
24	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
25	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
26	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
28	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]            ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  1;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  1;	  _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	5	5	replace
30	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  1;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  1;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  1;	  _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	5	5	replace
31	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  0,  _outputBuffer,  _outputTail);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  0,  _outputBuffer,  _outputTail);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  System.arraycopy(_rootValueSeparator,  0,  _outputBuffer,  _outputTail);	  _outputBuffer[_outputTail]    =    0;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	5	None	replace
32	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
33	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
34	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  J	  	non-compiled	[CE]  ';'  expected	1	None	add
35	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [CE]  illegal  start  of  type  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
37	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
39	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
40	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
41	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
43	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  writeRaw(typeMsg);  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  'n';  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  'n';	  _outputBuffer[_outputTail]    ='<    ';    	compilable	  [FE]  ComparisonFailure  	9	5	replace
45	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'n';  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  'n';  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  'n';	  _outputBuffer[_outputTail]    ='<    ';    	compilable	  [FE]  ComparisonFailure  	9	5	replace
46	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
47	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
49	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  AssertionFailedError  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
50	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  ='{'+  1;	  _outputBuffer[_outputTail]    ='{    ';    	compilable	  [FE]  ComparisonFailure  	8	5	replace
52	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  ='{'+  1;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='{'+  1;	  _outputBuffer[_outputTail]    ='{    ';    	compilable	  [FE]  ComparisonFailure  	8	5	replace
53	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writer.write(typeMsg);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_writer.write(typeMsg);	      	compilable	  [FE]  ComparisonFailure  	7	5	replace
54	[BUG]  [BUGGY]  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _writer.write(typeMsg);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_writer.write(typeMsg);	      	compilable	  [FE]  ComparisonFailure  	7	5	replace
55	[BUG]  [BUGGY]      _writer.write(typeMsg,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,char[],int)  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _writer.write(typeMsg,  _outputBuffer,  _outputTail);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	        _writer.write(typeMsg,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  no  suitable  method  found  for  write(String,char[],int)	6	None	add
56	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OBJECT;  [CE]  cannot  find  symbol  START_OBJECT  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OBJECT;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.START_OBJECT;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  cannot  find  symbol  START_OBJECT	2	None	replace
57	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	2	5	replace
58	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.START_OK_AS_IS;	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	compilable	  [FE]  ComparisonFailure  	2	5	replace
59	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  -1;  [CE]  possible  loss  of  precision  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  -1;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  -1;	  _outputBuffer[_outputTail]    =    0;    	non-compiled	[CE]  possible  loss  of  precision	5	None	replace
60	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  4;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]  =  4;	  _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	5	5	replace
61	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  4;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  4;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  4;	  _outputBuffer[_outputTail]    =    0;    	compilable	  [FE]  ComparisonFailure  	5	5	replace
62	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputHead;  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  _outputHead;  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  _outputHead;	  _outputBuffer[_outputTail]    =    typeMsg;    	non-compiled	[CE]  ';'  expected	3	None	replace
63	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  ='{'+  _outputEnd  + "' ";  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  ='{'+  _outputEnd  + "' ";  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  ='{'+  _outputEnd  + "' ";	  _outputBuffer[_outputTail]    ='{    ';    	non-compiled	[CE]  incompatible  types	8	None	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	1	5	add
65	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	1	5	add
66	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  c);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  typeMsg,  c);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  typeMsg,  c);	  _outputBuffer[_outputTail]    =    typeMsg;    	non-compiled	[CE]  ';'  expected	3	None	replace
67	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1);  [CE]  no  suitable  method  found  for  createRootContext(int,int)  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(-1,  -1);	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(int,int)	2	None	replace
68	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext();  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext();  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext();	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  incompatible  types	2	None	replace
69	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this);  [CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator)  [FE]        ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this);  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.createRootContext(this);	  _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    	non-compiled	[CE]  no  suitable  method  found  for  createRootContext(WriterBasedJsonGenerator)	2	None	replace
70	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  'ufffd';  [CE]  unclosed  character  literal  [FE]        AssertionFailedError    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  'ufffd';  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]  =  'ufffd';	  _outputBuffer[_outputTail]    ='<    ';    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
71	[BUG]  [BUGGY]  [FE]  JsonGenerationException  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getValue());  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	        _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getValue());	  	compilable	  [FE]  JsonGenerationException  	6	5	add
72	[BUG]  [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getValue());  [FE]  JsonGenerationException  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]      _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getValue());  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	        _reportError( "Current  context  not  an  ARRAY  but "+_rootValueSeparator.getValue());	  	compilable	  [FE]  JsonGenerationException  	6	5	add
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	add	_outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
74	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    writeRaw(_rootValueSeparator.getValue());  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }    [BUGGY]  _outputBuffer[_outputTail]  =  0;  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }  [BUGGY]    ++_outputTail;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	788	788	1	replace	_outputBuffer[_outputTail]    =    0;    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
