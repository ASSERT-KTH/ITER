bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _outputHead  =  LAST_WRITE  +  1;  [CE]  cannot  find  symbol  LAST_WRITE  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  LAST_WRITE  +  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LAST_WRITE  +  1;	  _outputHead    =    LAST_WRITE;    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	5	None	replace
2	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  _outputHead  =  amount;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount;    _outputHead  =  amount;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
3	[BUG]  [BUGGY]  _outputHead  =  amount;  _outputHead  =  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  _outputHead  =  amount;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    _outputHead  =  amount;	  	compilable	  [FE]  AssertionFailedError  	3	1	add
4	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;	  	non-compiled	[CE]  not  a  statement	3	None	add
5	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }	  	non-compiled	[CE]  not  a  statement	3	None	add
6	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;	  	non-compiled	[CE]  not  a  statement	3	None	add
7	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+	  	non-compiled	[CE]  not  a  statement	3	None	add
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  2;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  2;	  _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
9	[BUG]  [BUGGY]  _outputHead  =  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  2;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  2;	  _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	9	1	replace
10	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    1;    _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
11	[BUG]  [BUGGY]  _outputHead  =  1;  _outputHead  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
12	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  1;	  	non-compiled	[CE]  not  a  statement	8	None	add
13	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  _outputHead  =  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  _outputHead  =  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  =  0)&&(_outputTail  <  len)));  _outputHead  =  1;	  	non-compiled	[CE]  not  a  statement	8	None	add
14	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  =  0)&&(_outputTail  <  len)));	  	non-compiled	[CE]  not  a  statement	8	None	add
15	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)||(_outputTail  >  room  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)||(_outputTail  >  room  &&  _outputEnd  <  len));  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  =  0)||(_outputTail  >  room  &&  _outputEnd  <  len));	  	non-compiled	[CE]  not  a  statement	8	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    len;    _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
17	[BUG]  [BUGGY]  _outputHead  =  len;  _outputHead  =  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
18	[BUG]  [BUGGY]  _outputHead  =  len;  _outputHead  =  Len;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  _outputHead  =  Len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    _outputHead  =  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	1	None	add
19	[BUG]  [BUGGY]  _outputHead  =  len;  _outputHead  =  len);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  _outputHead  =  len);  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    _outputHead  =  len);	  	non-compiled	[CE]  ';'  expected	1	None	add
20	[BUG]  [BUGGY]  _outputHead  =  len;  _outputHead  =  LEn;  [CE]  cannot  find  symbol  LEn  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  _outputHead  =  LEn;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    _outputHead  =  LEn;	  	non-compiled	[CE]  cannot  find  symbol  LEn	1	None	add
21	[BUG]  [BUGGY]  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  int  len  =  text.length();  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	int  len  =  text.length();	      	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	7	None	replace
22	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _writer.write(text,  0,  len);  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,  0,  len);	      	compilable	  [FE]  AssertionFailedError  	7	1	replace
24	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _writer.write(text,  0,  len);  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,  0,  len);	      	compilable	  [FE]  AssertionFailedError  	7	1	replace
25	[BUG]  [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail);  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(len,  _outputBuffer,  _outputTail);	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
26	[BUG]  [BUGGY]      if(len  >  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]      if(len  >  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	        if(len  >  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount  +  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  amount  +  1;	  _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
28	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount  +  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount  +  1;	  _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount  -  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  amount  -  1;	  _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
30	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount  -  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount  -  1;	  _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	4	1	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len  +  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  len  +  1;	  _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
32	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len  +  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  len  +  1;	  _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
33	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  amount;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  amount;	  	non-compiled	[CE]  not  a  statement	3	None	add
34	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  amount;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  amount;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    ((  _outputHead  >  0)&&(_outputTail  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  amount;	  	non-compiled	[CE]  not  a  statement	3	None	add
35	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  ((  _outputHead  >  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  amount;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    ((  _outputHead  >  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  amount;	  	non-compiled	[CE]  not  a  statement	3	None	add
36	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  =  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  =  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  1;	  	non-compiled	[CE]  not  a  statement	8	None	add
37	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  <  1)||(_outputTail  >  room))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  <  1)||(_outputTail  >  room))  {  _outputHead  =  1;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  <  1)||(_outputTail  >  room))  {  _outputHead  =  1;	  	non-compiled	[CE]  not  a  statement	8	None	add
38	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;	  	non-compiled	[CE]  not  a  statement	8	None	add
39	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputHead  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  ((  _outputHead  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    ((  _outputHead  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);	  	non-compiled	[CE]  not  a  statement	8	None	add
40	[BUG]  [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	        if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
41	[BUG]  [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	        if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
42	[BUG]  [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	        if(amount  ==  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
43	[BUG]  [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	        if(amount  ==  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
44	[BUG]  [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]      if(amount  ==  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	        if(amount  ==  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
45	[BUG]  [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  len;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  len;	  	non-compiled	[CE]  not  a  statement	1	None	add
46	[BUG]  [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  <  len)))  {  _outputHead  =  len;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  <  len)))  {  _outputHead  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    ((  _outputHead  =  0)&&(_outputTail  <  len)))  {  _outputHead  =  len;	  	non-compiled	[CE]  not  a  statement	1	None	add
47	[BUG]  [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  len;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    ((  _outputHead  =  0)&&(_outputTail  >=  _outputEnd))  {  _outputHead  =  len;	  	non-compiled	[CE]  not  a  statement	1	None	add
48	[BUG]  [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;	  	non-compiled	[CE]  not  a  statement	1	None	add
49	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
50	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
51	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
52	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	      	non-compiled	[CE]  ';'  expected	7	None	replace
53	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
54	[BUG]  [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
56	[BUG]  [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
57	[BUG]  [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ')'  expected	8	None	add
58	[BUG]  [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  	non-compiled	[CE]  ')'  expected	8	None	add
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  int  _outputHead  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    len;    int  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
60	[BUG]  [BUGGY]  _outputHead  =  len;  int  _outputHead  =  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  int  _outputHead  =  len;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    int  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	1	1	add
61	[BUG]  [BUGGY]  _outputHead  =  len;  _outputHead  =  lan;  [CE]  cannot  find  symbol  lan  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  len;  _outputHead  =  lan;  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len;    _outputHead  =  lan;	  	non-compiled	[CE]  cannot  find  symbol  lan	1	None	add
62	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    	non-compiled	[CE]  ')'  expected	9	None	replace
63	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    	non-compiled	[CE]  ')'  expected	9	None	replace
64	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  _outputHead    =    1;    	non-compiled	[CE]  ')'  expected	9	None	replace
65	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
66	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
67	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
68	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	2	1	replace
69	[BUG]  [BUGGY]      if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]      if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	        if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
71	[BUG]  [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
73	[BUG]  [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
74	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
75	[BUG]  [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
76	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
77	[BUG]  [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);    [BUGGY]  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]    _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
