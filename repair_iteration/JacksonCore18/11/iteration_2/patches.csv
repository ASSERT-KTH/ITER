bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
2	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
3	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    If(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	65	None	add
4	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  Len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  Len  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  Len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  Len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  Len	65	None	add
5	[BUG]  [BUGGY]  ((  _outputTail  >  room  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  >  room  &&  _outputEnd  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  >  room  &&  _outputEnd  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
6	[BUG]  [BUGGY]  ((  _outputTail  =  0)||(_outputTail  >  amount  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)||(_outputTail  >  amount  &&  _outputEnd  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)||(_outputTail  >  amount  &&  _outputEnd  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
7	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  >  room  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  >  room  &&  _outputEnd  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  >  room  &&  _outputEnd  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
8	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  >  room  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  >  room  &&  _outputEnd  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(_outputHead  >  room  &&  _outputEnd  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
9	[BUG]  [BUGGY]  if(amount  >  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	22	None	replace
10	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	22	None	replace
11	[BUG]  [BUGGY]  ||  len  <  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||  len  <  _outputEnd)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||  len  <  _outputEnd)  {  throw  new  IllegalArgumentException( " ");	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
12	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	22	None	replace
13	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
14	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
16	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
17	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
18	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
19	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
20	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
21	[BUG]  [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  not  a  statement	7	None	replace
23	[BUG]  [BUGGY]  _outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  not  a  statement	7	None	replace
24	[BUG]  [BUGGY]  _outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(off  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(off  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(off	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  not  a  statement	7	None	replace
25	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  amount;  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  amount;	  	compilable	  [FE]  AssertionFailedError  	2	1	add
26	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  amount;  _outputHead  =  amount;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  amount;  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  amount;	  	compilable	  [FE]  AssertionFailedError  	2	1	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  int  _outputHead  =  amount;  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        _outputHead    =    amount;    int  _outputHead  =  amount;  _outputHead  =  amount;	  	compilable	  [FE]  AssertionFailedError  	2	1	add
28	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  int  _outputHead  =  amount;  _outputHead  =  amount;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  int  _outputHead  =  amount;  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    int  _outputHead  =  amount;  _outputHead  =  amount;	  	compilable	  [FE]  AssertionFailedError  	2	1	add
29	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  amount;  _outputHead  =  level;  [CE]  cannot  find  symbol  level  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  amount;  _outputHead  =  level;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    _outputHead  =  amount;  _outputHead  =  level;	  	non-compiled	[CE]  cannot  find  symbol  level	2	None	add
30	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  int  amount  =  _outputHead;  _outputHead  =  amount;  [CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  int  amount  =  _outputHead;  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    int  amount  =  _outputHead;  _outputHead  =  amount;	  	non-compiled	[CE]  variable  amount  is  already  defined  in  method  writeRawLong(String)	2	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  _outputHead  =  amount  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount    +    1;    _outputHead  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
32	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  _outputHead  =  amount  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  _outputHead  =  amount  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    _outputHead  =  amount  +  1;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
33	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputMaxContiguous));  _outputHead  =  amount  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputMaxContiguous));  _outputHead  =  amount  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputMaxContiguous));  _outputHead  =  amount  +  1;	  	non-compiled	[CE]  not  a  statement	27	None	add
34	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd));  _outputHead  =  amount  +  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd));  _outputHead  =  amount  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputEnd));  _outputHead  =  amount  +  1;	  	non-compiled	[CE]  not  a  statement	27	None	add
35	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  int  len  =  text.length();  _outputHead  =  amount  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  int  len  =  text.length();  _outputHead  =  amount  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    int  len  =  text.length();  _outputHead  =  amount  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	27	None	add
36	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0);  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer.length()  :  0);	  	non-compiled	[CE]  not  a  statement	27	None	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
38	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
40	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
41	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  null;  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  null;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  null;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	non-compiled	[CE]  incompatible  types	73	None	replace
42	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  level;  }  [CE]  cannot  find  symbol  level  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  level;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  level;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	non-compiled	[CE]  cannot  find  symbol  level	73	None	replace
43	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputTail  =  amount;	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	44	1	replace
44	[BUG]  [BUGGY]  _outputTail  =  amount;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputTail  =  amount;	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	44	1	replace
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  +=  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputTail  +=  amount;	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	44	1	replace
46	[BUG]  [BUGGY]  _outputTail  +=  amount;  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  +=  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputTail  +=  amount;	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	44	1	replace
47	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(_outputBuffer,  offset,  len);	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
48	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [FE]  IndexOutOfBoundsException  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(_outputBuffer,  offset,  len);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(_outputBuffer,  offset,  len);	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
49	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]                      AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(_outputBuffer,  offset,  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(_outputBuffer,  offset,  amount);	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
50	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset,  amount);  [FE]  IndexOutOfBoundsException  [FE]                      AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(_outputBuffer,  offset,  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(_outputBuffer,  offset,  amount);	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  IndexOutOfBoundsException  	44	1	replace
51	[BUG]  [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	4	None	replace
53	[BUG]  [BUGGY]  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	4	None	replace
54	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  len;  int  _outputHead  =  len;  [CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  len;  int  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    _outputHead  =  len;  int  _outputHead  =  len;	  	non-compiled	[CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)	59	None	add
55	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  int  _outputHead  =  len;  int  _outputHead  =  len;  [CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  int  _outputHead  =  len;  int  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    int  _outputHead  =  len;  int  _outputHead  =  len;	  	non-compiled	[CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)	59	None	add
56	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  Integer  _outputHead  =  len;  int  _outputHead  =  len;  [CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  Integer  _outputHead  =  len;  int  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    Integer  _outputHead  =  len;  int  _outputHead  =  len;	  	non-compiled	[CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)	59	None	add
57	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  Len;  int  _outputHead  =  len;  [CE]  cannot  find  symbol  Len  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  Len;  int  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    _outputHead  =  Len;  int  _outputHead  =  len;	  	non-compiled	[CE]  cannot  find  symbol  Len	59	None	add
58	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  int  len  =  len;  int  _outputHead  =  len;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  int  len  =  len;  int  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    int  len  =  len;  int  _outputHead  =  len;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	59	None	add
59	[BUG]  [BUGGY]  int  len  =  text.length()  -  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  int  len  =  text.length()  -  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	int  len  =  text.length()  -  amount;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	21	None	replace
60	[BUG]  [BUGGY]  int  len  =  text.length()  +  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  int  len  =  text.length()  +  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	int  len  =  text.length()  +  amount;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	21	None	replace
61	[BUG]  [BUGGY]  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  int  len  =  text.length()  -  room;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	int  len  =  text.length()  -  room;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	21	None	replace
62	[BUG]  [BUGGY]  int  len  =  text.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  int  len  =  text.length()  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	int  len  =  text.length()  -  1;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	21	None	replace
63	[BUG]  [BUGGY]  _outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputTail  =  amount;  ((  _outputHead  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  not  a  statement	34	None	replace
64	[BUG]  [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
65	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  not  a  statement	34	None	replace
66	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
67	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
68	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
69	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
70	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    >    0))    <    _outputEnd)    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	33	None	replace
71	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    >    0))    <    _outputEnd)    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	33	None	replace
72	[BUG]  [BUGGY]  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  amount;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    >    0))    <    _outputEnd)    {    _outputHead    =    amount;    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	23	1	add
74	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	23	1	add
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
76	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
78	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
79	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
80	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
81	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
82	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
83	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  amount  -  2;	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
84	[BUG]  [BUGGY]  _outputHead  =  amount  -  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount  -  2;	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
85	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  /  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  amount  /  1;	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
86	[BUG]  [BUGGY]  _outputHead  =  amount  /  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  /  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount  /  1;	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
87	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  len  -  1;	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
88	[BUG]  [BUGGY]  _outputHead  =  len  -  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  len  -  1;	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
89	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
90	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
91	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
93	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
95	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
96	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
97	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
98	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
99	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
100	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
102	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
103	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
104	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
105	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
106	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
107	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    len    +    1;    _outputHead  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
108	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len    +    1;    _outputHead  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
109	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  Len  +  1;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  Len  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len    +    1;    _outputHead  =  Len  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	31	None	add
110	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  LEn  +  1;  [CE]  cannot  find  symbol  LEn  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  LEn  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len    +    1;    _outputHead  =  LEn  +  1;	  	non-compiled	[CE]  cannot  find  symbol  LEn	31	None	add
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    len    +    1;    _outputHead  =  len  +  2;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
112	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len    +    1;    _outputHead  =  len  +  2;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
113	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	add
114	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	add
115	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	add
116	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	add
117	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
118	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	55	None	add
119	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	43	None	replace
120	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputEnd  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputEnd  =  0;	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	compilable	timeout	26	1	replace
121	[BUG]  [BUGGY]  _outputEnd  =  0;  timeout  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputEnd  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputEnd  =  0;	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	compilable	timeout	26	1	replace
122	[BUG]  [BUGGY]  if(amount  >  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
123	[BUG]  [BUGGY]  ||(len  >  room  &&  _outputTail  >=  _outputEnd))  {  _outputEnd  =  0;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||(len  >  room  &&  _outputTail  >=  _outputEnd))  {  _outputEnd  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||(len  >  room  &&  _outputTail  >=  _outputEnd))  {  _outputEnd  =  0;	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
124	[BUG]  [BUGGY]  ||(len  >  room  &&  _outputTail  <  _outputEnd))  {  _outputEnd  =  0;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||(len  >  room  &&  _outputTail  <  _outputEnd))  {  _outputEnd  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||(len  >  room  &&  _outputTail  <  _outputEnd))  {  _outputEnd  =  0;	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
125	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
126	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
127	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
128	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
130	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
131	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
132	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
133	[BUG]  [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
134	[BUG]  [BUGGY]  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
136	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
138	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
139	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
140	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  ';'  expected	77	None	replace
141	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
142	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
143	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
144	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }	          if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
145	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }	          if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
146	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }	          if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
147	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputMax))  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputMax))  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputMax))  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
148	[BUG]  [BUGGY]  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
149	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputMax))  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputMax))  {  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputTail  <  len)>  _outputMax))  {  _outputHead  =  amount;	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
151	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
152	[BUG]  [BUGGY]  _outputTail  =  amount;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  amount;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputTail  =  amount;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	non-compiled	[CE]  not  a  statement	48	None	replace
153	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
154	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  len  +  2;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
155	[BUG]  [BUGGY]  _outputHead  =  len  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  len  +  2;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  3;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  len  +  3;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
157	[BUG]  [BUGGY]  _outputHead  =  len  +  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  3;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  len  +  3;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
158	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
159	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
160	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
161	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
162	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
164	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
165	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
166	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
167	[BUG]  [BUGGY]  ((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  len;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  len;	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    len;    	non-compiled	[CE]  not  a  statement	47	None	replace
168	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
169	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
170	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  len;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(amount  >  0))  {  _outputHead  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    len;    	non-compiled	[CE]  not  a  statement	45	None	replace
171	[BUG]  [BUGGY]  _outputHead  =  LEFT_WRITE  +  1;  [CE]  cannot  find  symbol  LEFT_WRITE  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LEFT_WRITE  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LEFT_WRITE  +  1;	  _outputHead    =    LAST_WRITE    +    1;    	non-compiled	[CE]  cannot  find  symbol  LEFT_WRITE	1	None	replace
172	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
173	[BUG]  [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
174	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
175	[BUG]  [BUGGY]  _outputHead  =  LEn;  [CE]  cannot  find  symbol  LEn  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LEn;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LEn;	  _outputHead    =    len;    _outputHead    =    LEn;    	non-compiled	[CE]  cannot  find  symbol  LEn	20	None	replace
176	[BUG]  [BUGGY]  _outputHead  =  LEN;  [CE]  cannot  find  symbol  LEN  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LEN;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LEN;	  _outputHead    =    len;    _outputHead    =    LEn;    	non-compiled	[CE]  cannot  find  symbol  LEN	20	None	replace
177	[BUG]  [BUGGY]  _outputHead  =  LONG;  [CE]  cannot  find  symbol  LONG  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LONG;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LONG;	  _outputHead    =    len;    _outputHead    =    LEn;    	non-compiled	[CE]  cannot  find  symbol  LONG	20	None	replace
178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
179	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputTail  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
180	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	68	None	replace
181	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
182	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
183	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  0;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
184	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  0;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
185	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  len)>  _outputEnd)?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  len)>  _outputEnd)?  _outputEnd  :  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  +  len)>  _outputEnd)?  _outputEnd  :  0;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
186	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  +  amount)  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
187	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
188	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
189	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  int  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    int  _outputHead  =  1;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
190	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  int  _outputHead  =  1;  _outputHead  =  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  int  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    int  _outputHead  =  1;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  2;  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  2;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
192	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  2;  _outputHead  =  1;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  2;  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  2;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
193	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
194	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	10	1	add
195	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,  0,  amount);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
196	[BUG]  [BUGGY]  _writer.write(text,  0,  amount);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,  0,  amount);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
197	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,  0,  len  +  1);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
198	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,  0,  len  +  1);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  -  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,  0,  len  -  amount);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
200	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  amount);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  -  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,  0,  len  -  amount);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
202	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
203	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    2;    _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
204	[BUG]  [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
205	[BUG]  [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  2;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  2;	  	non-compiled	[CE]  not  a  statement	8	None	add
206	[BUG]  [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  _outputHead  =  2;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    ((  _outputHead  =  0)&&(_outputTail  <  len)));  _outputHead  =  2;	  	non-compiled	[CE]  not  a  statement	8	None	add
207	[BUG]  [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  <  len)));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    ((  _outputHead  =  0)&&(_outputTail  <  len)));	  	non-compiled	[CE]  not  a  statement	8	None	add
208	[BUG]  [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  2;  }  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    ((  _outputHead  =  0)&&(_outputTail  >  0))  {  _outputHead  =  2;  }	  	non-compiled	[CE]  not  a  statement	8	None	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  _outputHead  =  amount  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount    -    1;    _outputHead  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
210	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  _outputHead  =  amount  -  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  _outputHead  =  amount  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    _outputHead  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
211	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  int  _outputHead  =  amount  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount    -    1;    int  _outputHead  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
212	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  int  _outputHead  =  amount  -  1;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  int  _outputHead  =  amount  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    int  _outputHead  =  amount  -  1;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
213	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  =  amount  -  1);  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  =  amount  -  1);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    ((  _outputHead  =  amount  -  1);	  	non-compiled	[CE]  ')'  expected	29	None	add
214	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  _outputHead  =  amount  -  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount    -    1;    _outputHead  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
215	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  _outputHead  =  amount  -  2;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  _outputHead  =  amount  -  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    _outputHead  =  amount  -  2;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
216	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
217	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
218	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
219	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
221	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
222	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
223	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
224	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
225	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
227	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
228	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  Len;  _outputHead  =  len;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  Len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  Len;  _outputHead  =  len;	  	non-compiled	[CE]  cannot  find  symbol  Len	16	None	add
229	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  Len;  [CE]  cannot  find  symbol  Len  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  Len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	16	None	add
230	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  LEN;  _outputHead  =  len;  [CE]  cannot  find  symbol  LEN  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  LEN;  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  LEN;  _outputHead  =  len;	  	non-compiled	[CE]  cannot  find  symbol  LEN	16	None	add
231	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
232	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
233	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	1	replace
234	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	1	replace
235	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	1	replace
236	[BUG]  [BUGGY]  if(amount  <  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	71	1	replace
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
238	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
239	[BUG]  [BUGGY]  ((  _outputTail  >  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  >  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  >  0)&&(amount  >=  _outputEnd))  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	35	None	replace
240	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
241	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
242	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
243	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
244	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
245	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
246	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
247	[BUG]  [BUGGY]  _writer.writeRawLong(len,  room,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(len,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(len,  room,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(len,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
248	[BUG]  [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(len,  _outputBuffer,  _outputTail  +  1);	  _writer.writeRawLong(len,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
249	[BUG]  [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail,  amount);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail,  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(len,  _outputBuffer,  _outputTail,  amount);	  _writer.writeRawLong(len,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
250	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len;  _outputHead  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  len;  _outputHead  =  0;	  _outputHead    =    len;    _outputHead    =    lan;    	compilable	  [FE]  AssertionFailedError  	61	1	replace
251	[BUG]  [BUGGY]  _outputHead  =  len;  _outputHead  =  0;  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len;  _outputHead  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  len;  _outputHead  =  0;	  _outputHead    =    len;    _outputHead    =    lan;    	compilable	  [FE]  AssertionFailedError  	61	1	replace
252	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
253	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
254	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	67	1	add
255	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	67	1	add
256	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  If(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    If(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	67	None	add
257	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  Len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  Len  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  Len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  Len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  Len	67	None	add
258	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
259	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	64	None	replace
260	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
261	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  _outputBuffer.length);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  _outputBuffer.length);	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
262	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
263	[BUG]  [BUGGY]  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  _outputBuffer.length);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  <  1)||(len  >  room))?  _outputEnd  :  _outputBuffer.length);	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
264	[BUG]  [BUGGY]  ((  _outputTail  <  1)||(_outputHead  >  room))?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  <  1)||(_outputHead  >  room))?  _outputEnd  :  _outputBuffer.length);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  <  1)||(_outputHead  >  room))?  _outputEnd  :  _outputBuffer.length);	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
266	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  +=  amount;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
268	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
269	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(len  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
270	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(len  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
272	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
274	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  ==  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
276	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
277	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
278	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
279	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	53	None	add
280	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
281	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
282	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
283	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
285	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
286	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  =  0)&&(amount  <  len)));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  =  0)&&(amount  <  len)));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  =  0)&&(amount  <  len)));	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    	non-compiled	[CE]  not  a  statement	14	None	replace
287	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  =  0)&&(amount  <  len)));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  =  0)&&(amount  <  len)));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  =  0)&&(amount  <  len)));	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    	non-compiled	[CE]  not  a  statement	14	None	replace
288	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  <  len)));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  <  len)));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(_outputHead  <  len)));	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    	non-compiled	[CE]  not  a  statement	14	None	replace
289	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  <  amount)));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  <  amount)));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(_outputHead  <  amount)));	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    	non-compiled	[CE]  not  a  statement	14	None	replace
290	[BUG]  [BUGGY]  if(amount  ==  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
291	[BUG]  [BUGGY]  if(amount  ==  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
292	[BUG]  [BUGGY]  if(amount  ==  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
293	[BUG]  [BUGGY]  if(amount  ==  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
294	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	49	None	replace
295	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	49	None	replace
296	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	49	None	replace
297	[BUG]  [BUGGY]  ((  _outputTail  <  1)||(_outputTail  >  amount))  {  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  <  1)||(_outputTail  >  amount))  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  <  1)||(_outputTail  >  amount))  {  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
298	[BUG]  [BUGGY]  ((  _outputTail  <  1)||(len  >  room))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  <  1)||(len  >  room))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  <  1)||(len  >  room))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
299	[BUG]  [BUGGY]  ((  _outputTail  <  1)||(_outputTail  >  amount))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  <  1)||(_outputTail  >  amount))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  <  1)||(_outputTail  >  amount))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
301	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
302	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
303	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
305	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
307	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
309	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
311	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
313	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
314	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
315	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
317	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
318	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
319	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  amount  +  2;	  _outputHead    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
321	[BUG]  [BUGGY]  _outputHead  =  amount  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount  +  2;	  _outputHead    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  3;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  amount  +  3;	  _outputHead    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
323	[BUG]  [BUGGY]  _outputHead  =  amount  +  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  3;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount  +  3;	  _outputHead    =    amount    +    1;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
324	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
325	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
326	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  1;  }  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
327	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
328	[BUG]  [BUGGY]  _outputHead  =  Len;  [CE]  cannot  find  symbol  Len  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  Len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  Len;	  _outputHead    =    len;    _outputHead    =    Len;    	non-compiled	[CE]  cannot  find  symbol  Len	18	None	replace
329	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	56	1	replace
330	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	56	1	replace
331	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	replace
332	[BUG]  [BUGGY]  if(amount  <  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	56	1	replace
333	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(amount  <  len)))  {  _outputHead  =  len;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(amount  <  len)))  {  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(amount  <  len)))  {  _outputHead  =  len;	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    <    len)))    {    _outputHead    =    len;    	non-compiled	[CE]  not  a  statement	46	None	replace
334	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
335	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
336	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputTail  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
337	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputTail  +=  amount;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
338	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputTail  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
339	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(amount  <  len)));  _outputHead  =  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(amount  <  len)));  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(amount  <  len)));  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
340	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputTail  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
341	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputTail  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
342	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
343	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
344	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
345	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
346	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  null;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  null;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  null;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  incompatible  types	67	None	add
347	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  0;  _outputTail  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  0;  _outputTail  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
348	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  0;  _outputTail  =  1;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  0;  _outputTail  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  0;  _outputTail  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
349	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
350	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
351	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
352	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
353	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  _outputBuffer.length);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  _outputBuffer.length);	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
354	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
355	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  +  amount)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
356	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
357	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
358	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	76	1	add
359	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	76	None	add
360	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
361	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	76	1	add
362	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
363	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
364	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
365	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	12	1	replace
366	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
367	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
368	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
369	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
370	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  NullWriter();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	23	None	add
371	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  SerializableString();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	23	None	add
372	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  Writer();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	23	None	add
373	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	23	None	add
374	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  not  a  statement	7	None	replace
375	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd))  {  text.getChars(offset,  offset+  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd))  {  text.getChars(offset,  offset+  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  amount)>  _outputEnd))  {  text.getChars(offset,  offset+	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  not  a  statement	7	None	replace
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputTail;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  _outputTail;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	compilable	  [FE]  AssertionFailedError  	7	1	replace
377	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputTail;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputTail;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  _outputTail;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	compilable	  [FE]  AssertionFailedError  	7	1	replace
378	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+gesetzlichen  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+gesetzlichen  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  text.getChars(offset,  offset+gesetzlichen	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  not  a  statement	7	None	replace
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
380	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	65	1	add
381	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  int  _outputHead  =  len  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    len    +    1;    int  _outputHead  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
382	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  int  _outputHead  =  len  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  int  _outputHead  =  len  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len    +    1;    int  _outputHead  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
383	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  ((  _outputHead  =  len  +  1);  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  ((  _outputHead  =  len  +  1);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len    +    1;    ((  _outputHead  =  len  +  1);	  	non-compiled	[CE]  ')'  expected	31	None	add
384	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	22	None	replace
385	[BUG]  [BUGGY]  if(amount  ==  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  0)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	22	None	replace
386	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	4	None	replace
387	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHea  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHea  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHea	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	4	None	replace
388	[BUG]  [BUGGY]  ((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
389	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	72	None	add
390	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
391	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
392	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	72	None	add
393	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
394	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	72	1	add
395	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  null;  }  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  null;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  null;  }	  	non-compiled	[CE]  incompatible  types	72	None	add
396	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
397	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
398	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
399	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
401	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
402	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  length;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  length;  }	  	non-compiled	[CE]  cannot  find  symbol  length	2	None	add
403	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
404	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
405	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
406	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
407	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    >    0))    <    _outputEnd)    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	33	None	replace
408	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    >    0))    <    _outputEnd)    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	33	None	replace
409	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
410	[BUG]  [BUGGY]  if(amount!=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
411	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
412	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
413	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
414	[BUG]  [BUGGY]  if(amount!=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
415	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
416	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
417	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd)  {  _outputBuffer();  offset  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  not  a  statement	34	None	replace
418	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer()  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer()  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer()	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  not  a  statement	34	None	replace
419	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputEnd;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  _outputEnd;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
420	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputEnd;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputEnd;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  _outputEnd;  _outputTail  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	compilable	  [FE]  AssertionFailedError  	34	1	replace
421	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputBuffer();  offset  +=	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  not  a  statement	34	None	replace
422	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
423	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount!=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
425	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  0;  }	  _outputHead    =    amount;    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	3	1	replace
426	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
427	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputTail  =  amount;  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputTail  =  amount;  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
428	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
429	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _flushBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	74	1	add
430	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
431	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	74	1	add
432	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	56	1	replace
433	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	56	1	replace
434	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
435	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
436	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
437	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	63	None	replace
438	[BUG]  [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)||(_outputTail  >  room))?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  1;  ((  _outputTail  +  amount)||(_outputTail  >  room))?  _outputEnd  :  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  1;  ((  _outputTail  +  amount)||(_outputTail  >  room))?  _outputEnd  :  0;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
439	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  <  1)||(_outputHead  >  room))?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  <  1)||(_outputHead  >  room))?  _outputEnd  :  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  <  1)||(_outputHead  >  room))?  _outputEnd  :  0;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
440	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  0;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  +  amount)>  _outputEnd)?  _outputEnd  :  0;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
441	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
442	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
443	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
445	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
446	[BUG]  [BUGGY]  _outputHead  =  LAST_WRITE;  _outputHead  =  len;  [CE]  cannot  find  symbol  LAST_WRITE  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LAST_WRITE;  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LAST_WRITE;  _outputHead  =  len;	  _outputHead    =    len;    _outputHead    =    lan;    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	61	None	replace
447	[BUG]  [BUGGY]  _outputHead  =  LAST_WRITE;  _outputHead  =  0;  [CE]  cannot  find  symbol  LAST_WRITE  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LAST_WRITE;  _outputHead  =  0;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LAST_WRITE;  _outputHead  =  0;	  _outputHead    =    len;    _outputHead    =    lan;    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	61	None	replace
448	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
449	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
450	[BUG]  [BUGGY]  if(amount!=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  0)  {  if(len  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
451	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
452	[BUG]  [BUGGY]  if(amount!=  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount!=  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount!=  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
453	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  int  _outputHead  =  len;  [CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  int  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    int  _outputHead  =  len;	  	non-compiled	[CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)	59	None	add
454	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  len;  int  _outputHead  =  Len;  [CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  len;  int  _outputHead  =  Len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    _outputHead  =  len;  int  _outputHead  =  Len;	  	non-compiled	[CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)	59	None	add
455	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
456	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
457	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
458	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
459	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
460	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	55	1	add
462	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	55	1	add
463	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	55	None	add
464	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
465	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
467	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	compilable	  [FE]  AssertionFailedError  	75	1	replace
468	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
469	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
470	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
471	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
472	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
474	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
475	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
476	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	70	1	add
477	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  level;  }  [CE]  cannot  find  symbol  level  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  level;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  level;  }	  	non-compiled	[CE]  cannot  find  symbol  level	70	None	add
478	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }  [CE]  cannot  find  symbol  LEN  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  LEN  -=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  LEN	70	None	add
479	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
480	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
481	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  ==  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
482	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  ==  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  len;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
483	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  -1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead  =  -1;	  _outputHead    =    2;    	compilable	  [FE]  IndexOutOfBoundsException  	9	1	replace
484	[BUG]  [BUGGY]  _outputHead  =  -1;  [FE]  IndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  -1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  -1;	  _outputHead    =    2;    	compilable	  [FE]  IndexOutOfBoundsException  	9	1	replace
485	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
486	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
487	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
488	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)&&(_outputTail  <  len)));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)&&(_outputTail  <  len)));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  +  amount)&&(_outputTail  <  len)));	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    	non-compiled	[CE]  not  a  statement	14	None	replace
489	[BUG]  [BUGGY]  ((  _outputTail  +  amount)||(_outputHead  >  room))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  amount)||(_outputHead  >  room))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  amount)||(_outputHead  >  room))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
490	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd)  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  amount)>  _outputEnd)  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
491	[BUG]  [BUGGY]  if(amount  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  _flushBuffer();  offset  +=  amount;  len  -=  len;  _output  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  _flushBuffer();  offset  +=  amount;  len  -=  len;  _output  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _outputTail  +=  amount;  _flushBuffer();  offset  +=  amount;  len  -=  len;  _output	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  ';'  expected	37	None	replace
492	[BUG]  [BUGGY]  _writer.writeRawLong(amount,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(amount,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(len,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
493	[BUG]  [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail  +  amount);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputTail  +  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(len,  _outputBuffer,  _outputTail  +  amount);	  _writer.writeRawLong(len,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
494	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    <    len)))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
495	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    <    len)))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
496	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    <    len)))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
497	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  _outputTail  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    <    len)))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
498	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  int  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    2;    int  _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
499	[BUG]  [BUGGY]  _outputHead  =  2;  int  _outputHead  =  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  int  _outputHead  =  2;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    int  _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
500	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  3;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    2;    _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
501	[BUG]  [BUGGY]  _outputHead  =  2;  _outputHead  =  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  3;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
502	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  4;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    2;    _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
503	[BUG]  [BUGGY]  _outputHead  =  2;  _outputHead  =  4;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  4;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    2;    _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
504	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
505	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
506	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
507	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  =  0;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  _outputTail  =  0;  _outputHead  =  0;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
508	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }  else  {  _outputHead  =  SHORT_WRITE;  _output  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }  else  {  _outputHead  =  SHORT_WRITE;  _output  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  =  0;  }  else  {  _outputHead  =  SHORT_WRITE;  _output	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  ';'  expected	35	None	replace
509	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
510	[BUG]  [BUGGY]  if(amount  >=  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
511	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
512	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	53	1	add
513	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	53	None	add
514	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
515	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  1;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
516	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }	          if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
517	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
518	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
519	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
520	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
521	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
522	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
523	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
524	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
525	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputHead  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputHead  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputHead  <  len))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  int  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        len;        _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
527	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  int  _outputHead  =  len;  _outputHead  =  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  int  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    int  _outputHead  =  len;  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	16	1	add
528	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
529	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
530	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
531	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	19	1	replace
532	[BUG]  [BUGGY]  readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [CE]  'void'  type  not  allowed  here  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0));	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  'void'  type  not  allowed  here	64	None	replace
533	[BUG]  [BUGGY]  readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
534	[BUG]  [BUGGY]  readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  len);  [CE]  'void'  type  not  allowed  here  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  len);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	readRaw(text.getChars(offset,  offset+amount,  _outputBuffer,  0),  len);	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  'void'  type  not  allowed  here	64	None	replace
535	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  not  a  statement	27	None	add
536	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);	  	non-compiled	[CE]  not  a  statement	27	None	add
537	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);	  	non-compiled	[CE]  not  a  statement	27	None	add
538	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  -amount);  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  -amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  _outputBuffer[_outputTail  +  1]  :  text.getChars(offset,  offset+amount,  _outputBuffer,  -amount);	  	non-compiled	[CE]  not  a  statement	27	None	add
539	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	non-compiled	[CE]  not  a  statement	48	None	replace
540	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputBuffer();  offset  +=  amount;  len  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	non-compiled	[CE]  not  a  statement	48	None	replace
541	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
542	[BUG]  [BUGGY]  _writer.writeLong(text,  0,  len);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeLong(text,  0,  len);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeLong(text,  0,  len);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
543	[BUG]  [BUGGY]  _writer.writeFull(text,  0,  len);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeFull(text,  0,  len);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeFull(text,  0,  len);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
544	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  amount);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  0,  amount);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRaw(text,  0,  amount);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
545	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)>  room  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)>  room  &&  _outputEnd  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  +  amount)>  room  &&  _outputEnd  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
546	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)||(_outputTail  >  room  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)||(_outputTail  >  room  &&  _outputEnd  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  +  amount)||(_outputTail  >  room  &&  _outputEnd  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
547	[BUG]  [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)||(_outputEnd  >  room  &&  _outputEnd  <  len));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  _outputTail  +  amount)||(_outputEnd  >  room  &&  _outputEnd  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  0;  ((  _outputTail  +  amount)||(_outputEnd  >  room  &&  _outputEnd  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
548	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
549	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	77	1	replace
550	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
551	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >=  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >=  0)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
552	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  baseUri  +  1;  [CE]  cannot  find  symbol  baseUri  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  baseUri  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    len    +    1;    _outputHead  =  baseUri  +  1;	  	non-compiled	[CE]  cannot  find  symbol  baseUri	31	None	add
553	[BUG]  [BUGGY]  ((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  amount)&&(_outputHead  >=  _outputEnd))  {  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
554	[BUG]  [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  +  amount)>  _outputEnd))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  +  amount)>  _outputEnd))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	36	None	replace
555	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
556	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
557	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
558	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
559	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
560	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
561	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
562	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	compilable	  [FE]  AssertionFailedError  	7	1	replace
563	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	compilable	  [FE]  AssertionFailedError  	7	1	replace
564	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  0);	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    text.getChars(offset,    offset+    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
565	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	67	None	add
566	[BUG]  [BUGGY]  if(amount  >  0)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(_outputTail  >=  room)  {  throw  new  IllegalArgumentException( " ");  }	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	22	None	replace
567	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " "));  }  [CE]  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " "));  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  throw  new  IllegalArgumentException( " "));  }	  if(len    >    0)    {    if(_outputTail    >    room)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	22	None	replace
568	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
569	[BUG]  [BUGGY]  if(amount  >  room)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  room)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  room)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  0;  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
570	[BUG]  [BUGGY]  if(amount  <  1)  {  _outputHead  =  1;  ((  _outputTail  >  room)||(_outputEnd  >  _outputEnd))?  _outputEnd  :  0;  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  1)  {  _outputHead  =  1;  ((  _outputTail  >  room)||(_outputEnd  >  _outputEnd))?  _outputEnd  :  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  1)  {  _outputHead  =  1;  ((  _outputTail  >  room)||(_outputEnd  >  _outputEnd))?  _outputEnd  :  0;  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    0;    	non-compiled	[CE]  not  a  statement	38	None	replace
571	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
572	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
573	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
574	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
575	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
576	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
577	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer  =  null;  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer  =  null;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer  =  null;  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	23	None	add
578	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
579	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&(_outputTail  <  len)));  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&(_outputTail  <  len)));  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&(_outputTail  <  len)));  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    	non-compiled	[CE]  not  a  statement	14	None	replace
580	[BUG]  [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)&&(_outputHead  >  0))  {  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	12	None	replace
581	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputTail;  }  else  {  _outputBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputTail;  }  else  {  _outputBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  _outputTail;  }  else  {  _outputBuffer();  offset  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
582	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  _outputBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  _outputBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  len;  }  else  {  _outputBuffer();  offset  +=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputBuffer();    offset    +=    amount;    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
583	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
584	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputTail  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputTail  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputTail  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
585	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  }	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ')'  expected	64	None	replace
586	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&  _outputHead  <  len)));  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&  _outputHead  <  len)));  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&  _outputHead  <  len)));  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
587	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&  _outputHead  <  len));  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&  _outputHead  <  len));  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  ((  _outputTail  =  0)&&  _outputHead  <  len));  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    =    0)&&(_outputTail    <    len)));    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	13	None	replace
588	[BUG]  [BUGGY]  ||  amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ||  amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	||  amount  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  0;  }	          if(len    >    0)    {    if(_outputTail    >    room)    {    _outputEnd    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
589	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
590	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
591	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=	          if(amount    ==    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
593	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
594	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
595	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
596	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
597	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
598	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        _outputHead    =    1;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
599	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	10	1	add
600	[BUG]  [BUGGY]  ((  _outputTail  <  1)||(_outputHead  >  room))  {  _outputHead  =  1;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  <  1)||(_outputHead  >  room))  {  _outputHead  =  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  <  1)||(_outputHead  >  room))  {  _outputHead  =  1;	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
601	[BUG]  [BUGGY]  ((  _outputTail  <  1)||(_outputHead  >  room))  {  _outputHead  =  1;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  <  1)||(_outputHead  >  room))  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  <  1)||(_outputHead  >  room))  {  _outputHead  =  1;  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))    {    _outputHead    =    1;    	non-compiled	[CE]  not  a  statement	37	None	replace
602	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount  -  1;  }	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
603	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount  -  1;  }	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
604	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  else  {  _flushBuffer();  }	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
605	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount  -  1;  }  else  {  _flushBuffer();  }	  _outputHead    =    amount    -    1;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
606	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  return;  }	          if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
607	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	76	None	add
608	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	76	None	add
609	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  ';'  expected	76	None	add
610	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
611	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
612	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  ((  _outputTail  >  0)&&  _outputEnd  <  amount)||((  _outputTail  +  len)>  _outputEnd))  {  _outputHea  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  ((  _outputTail  >  0)&&  _outputEnd  <  amount)||((  _outputTail  +  len)>  _outputEnd))  {  _outputHea  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  ((  _outputTail  >  0)&&  _outputEnd  <  amount)||((  _outputTail  +  len)>  _outputEnd))  {  _outputHea	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
613	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	74	None	add
614	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	74	None	add
615	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    +=    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	74	None	add
616	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
617	[BUG]  [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _writer.write(text,  0,  len);  }	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
618	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
619	[BUG]  [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
620	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
621	[BUG]  [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _writer.write(text,  0,  len);  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	24	1	replace
622	[BUG]  [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(len,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(len,  _outputBuffer,  _outputHead);	  _writer.writeRawLong(len,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
623	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_writer.write(text);	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
624	[BUG]  [BUGGY]  _writer.write(text);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.write(text);	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	63	1	replace
625	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
626	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
627	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >=  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
628	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(len  >=  1)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >=    SHORT_WRITE)    {    text.getChars(0,    room,    _outputBuffer,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	43	None	replace
629	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
630	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
631	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
632	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputHead  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    <    len)))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
633	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  }  else  {  _outputHead  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    <    len)))    {    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	46	1	replace
634	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
635	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
636	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
637	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  ';'  expected  [FE]                      AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  _outputTail  +=  amount;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputTail    +=    amount;    }    	non-compiled	[CE]  ';'  expected	44	None	replace
638	[BUG]  [BUGGY]  ((  _outputTail  =  0)||(_outputHead  >  room  &&  _outputEnd  <  amount));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)||(_outputHead  >  room  &&  _outputEnd  <  amount));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)||(_outputHead  >  room  &&  _outputEnd  <  amount));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
639	[BUG]  [BUGGY]  ((  _outputTail  =  0)||(_outputEnd  >  room  &&  _outputHead  <  len));  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  ((  _outputTail  =  0)||(_outputEnd  >  room  &&  _outputHead  <  len));  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	((  _outputTail  =  0)||(_outputEnd  >  room  &&  _outputHead  <  len));	  _outputHead    =    1;    ((    _outputHead    =    0)||(_outputTail    >    room    &&    _outputEnd    <    len));    	non-compiled	[CE]  not  a  statement	15	None	replace
640	[BUG]  [BUGGY]  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(text);	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
641	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  	non-compiled	[CE]  ';'  expected	53	None	add
642	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  	non-compiled	[CE]  ';'  expected	53	None	add
643	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _output	  	non-compiled	[CE]  ';'  expected	53	None	add
644	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
645	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    if(amount  >  0)  {  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	53	1	add
646	[BUG]  [BUGGY]  _outputHead  =  LEFT;  [CE]  cannot  find  symbol  LEFT  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LEFT;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  LEFT;	  _outputHead    =    len;    _outputHead    =    lan;    	non-compiled	[CE]  cannot  find  symbol  LEFT	61	None	replace
647	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  level;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  cannot  find  symbol  level  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  level;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  level;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  len;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  level	77	None	replace
648	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	non-compiled	[CE]  ')'  expected	58	None	replace
649	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+room,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+room,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+room,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
650	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	51	None	replace
651	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  +  len)>  _outputEnd))  {  _outputHead  =  amount;	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputEnd))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	4	None	replace
652	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _output  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _output  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _output	  	non-compiled	[CE]  ';'  expected	16	None	add
653	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _output  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _output  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _output	  	non-compiled	[CE]  ';'  expected	16	None	add
654	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _output  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _output  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _output	  	non-compiled	[CE]  ';'  expected	16	None	add
655	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        len;        _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
656	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	16	1	add
657	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  ';'  expected	55	None	add
658	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	add
659	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  }  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	55	1	add
660	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  >  0)  {  _outputHead  =  1;  if(amount  >  0)  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  ';'  expected	55	None	add
661	[BUG]  [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        1;        if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  ';'  expected	55	None	add
662	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+len,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
663	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+alpha,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+alpha,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  if(text.getChars(offset,  offset+alpha,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+len,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
664	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount  -  1;  [CE]  not  a  statement  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount  -  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount  -  1;	  	non-compiled	[CE]  not  a  statement	29	None	add
665	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount;	  	non-compiled	[CE]  not  a  statement	29	None	add
666	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [CE]  not  a  statement  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  1;	  	non-compiled	[CE]  not  a  statement	29	None	add
667	[BUG]  [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(0,  room,  _outputBuffer,  _outputHead):  text.length();  [CE]  not  a  statement  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  -  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(0,  room,  _outputBuffer,  _outputHead):  text.length();  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    -    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(0,  room,  _outputBuffer,  _outputHead):  text.length();	  	non-compiled	[CE]  not  a  statement	29	None	add
668	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  ';'  expected	70	None	add
669	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	non-compiled	[CE]  ';'  expected	70	None	add
670	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	non-compiled	[CE]  ';'  expected	70	None	add
671	[BUG]  [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_writer.writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _writeRawLong(text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    0;    }    	non-compiled	[CE]  ')'  expected	62	None	replace
672	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)	59	None	add
673	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  variable  _outputHead  is  already  defined  in  method  writeRawLong(String)	59	None	add
674	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ')'  expected	59	None	add
675	[BUG]  [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _output  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    int  _outputHead  =  len;  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _output  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        len;        int    _outputHead    =    len;    if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _output	  	non-compiled	[CE]  ';'  expected	59	None	add
676	[BUG]  [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  if(text.getChars(offset,  offset+amount,  _outputBuffer,  0)!=  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    if(text.getChars(offset,    offset+amount,    _outputBuffer,    0)!=    _outputEnd)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	49	None	replace
677	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    if(amount  >  0)  {  _outputHead  =  LAST_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	65	None	add
678	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
679	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
680	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
681	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
682	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
683	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputHead  =  0;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	17	1	replace
684	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	66	1	replace
685	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  +=  len;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	66	1	replace
686	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	66	1	replace
687	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  _outputEnd;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  }	  if(amount    >    0)    {    _outputHead    =    len;    }    else    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	66	1	replace
688	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
689	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  0;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  1;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    1;    }    	compilable	  [FE]  AssertionFailedError  	54	1	replace
690	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }  [CE]  cannot  find  symbol  Len  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  Len  -=  amount;  }	  _outputHead    =    1;    if(amount    >    0)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    len    -=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  Len	56	None	replace
691	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  0;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
692	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  int  _outputHead  =  0;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
693	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  0;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
694	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  len;  int  _outputHead  =  0;  }	  _outputHead    =    len;    int    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	60	1	replace
695	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	72	None	add
696	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }	  	non-compiled	[CE]  ';'  expected	72	None	add
697	[BUG]  [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  amount;  }  if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    if(amount  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =	  	non-compiled	[CE]  ';'  expected	72	None	add
698	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputBuffer();  offset  +=  amount;  len  =  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputBuffer();  offset  +=  amount;  len  =  len;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
699	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  _outputTail  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
700	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  len;  _outputTail  =  0;  _outputTail  =  0;  }	  _outputHead    =    len;    ((    _outputHead    =    0)&&(_outputTail    >    0))    {    _outputBuffer();    offset    +=    amount;    len    =    len;    	compilable	  [FE]  AssertionFailedError  	48	1	replace
701	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  >  0))  <  _outputEnd)  {  _outputHead  =	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    >    0))    <    _outputEnd)    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	33	None	replace
702	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
703	[BUG]  [BUGGY]  if(amount  >  room)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  room)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  room)  {  _outputHead  =  1;  ((  _outputTail  <  1)||(_outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
704	[BUG]  [BUGGY]  if(amount  <  1)  {  _outputHead  =  1;  ((  _outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  1)  {  _outputHead  =  1;  ((  _outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  1)  {  _outputHead  =  1;  ((  _outputTail  >  room))?  _outputEnd  :  _outputBuffer.length);  }	  _outputHead    =    1;    ((    _outputHead    <    1)||(_outputTail    >    room))?    _outputEnd    :    _outputBuffer.length);    	non-compiled	[CE]  not  a  statement	39	None	replace
705	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	add
706	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	add
707	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	add
708	[BUG]  [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    amount;    _outputHead  =  amount;  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead        =        amount;        _outputHead    =    amount;    if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  amount;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	add
709	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
710	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
711	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
712	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(len  >  0)  {  _outputHead  =  amount;  }  else  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    amount;    if(amount    >    0)    {    _outputHead    =    amount;    }    else    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    _outputHead    =    amount;    }    	compilable	  [FE]  AssertionFailedError  	73	1	replace
713	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	_outputHead    =    amount    +    1;    if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
714	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }	  	compilable	  [FE]  AssertionFailedError  	27	1	add
715	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount  +  1;  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount  +  1;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    ((  _outputHead  +  1)  >=  _outputEnd)?  text.getChars(offset,  offset+amount,  _outputBuffer,  0):  amount  +  1;	  	non-compiled	[CE]  not  a  statement	27	None	add
716	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  level  +  1;  }  [CE]  cannot  find  symbol  level  [FE]        AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  level  +  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  level  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  level	27	None	add
717	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  null;  }  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  null;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead    =    amount    +    1;    if(amount  >  0)  {  _outputHead  =  amount  +  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputHead  =  null;  }	  	non-compiled	[CE]  incompatible  types	27	None	add
718	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
719	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
720	[BUG]  [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	_outputHead  =  amount;  ((  _outputTail  >  0)&&(_outputEnd  <  amount))  ||((  _outputTail  +  len)>  _outputMax))  {  _outputHead  =  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    <    amount))    ||((    _outputTail    +    len)>    _outputMax))    {    _outputHead    =    amount;    	non-compiled	[CE]  not  a  statement	6	None	replace
721	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
722	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  len  -=  amount;  }  [FE]  StringIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  len  -=  amount;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  amount;  _outputTail  +=  amount;  len  -=  amount;  }	  _outputHead    =    amount;    ((    _outputHead    >    0)&&(_outputTail    >=    _outputEnd))    {    _outputHead    =    amount;    	compilable	  [FE]  StringIndexOutOfBoundsException  	35	1	replace
723	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _flushBuffer();  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
724	[BUG]  [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  >  0)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  _flushBuffer();  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
725	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	add	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
726	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);      [BUGGY]  if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	487	487	1	replace	if(amount  <  SHORT_WRITE)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	11	1	replace
