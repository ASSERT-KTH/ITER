bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
69	[BUG] [BUGGY] break; [FE] AssertionFailedError [CONTEXT] return; } char c; final int status = _writeContext.writeValue(); if (status == JsonWriteContext.STATUS_EXPECT_NAME) { _reportError("Can not "+typeMsg+", expecting field name"); } switch (status) { case JsonWriteContext.STATUS_OK_AFTER_COMMA: c = ','; [BUGGY] break; [BUGGY] case JsonWriteContext.STATUS_OK_AFTER_COLON: c = ':'; break; case JsonWriteContext.STATUS_OK_AFTER_SPACE: // root-value separator if (_rootValueSeparator != null) { writeRaw(_rootValueSeparator.getValue()); } return; case JsonWriteContext.STATUS_OK_AS_IS: default: [CLASS] WriterBasedJsonGenerator [METHOD] _verifyValueWrite [RETURN_TYPE] void  String typeMsg [VARIABLES] SerializableString _currentEscape name sstr text boolean char c String typeMsg int SHORT_WRITE _outputEnd _outputHead _outputTail amount bytes dataLength features i len length missing offset ptr qlen room start status Writer _writer w char[] HEX_CHARS _entityBuffer _outputBuffer buf quoted text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.7071067811865475	772	772	1	replace	
