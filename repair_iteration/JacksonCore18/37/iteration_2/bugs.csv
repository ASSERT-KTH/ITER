bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _verifyValueWrite(WRITE_NUMBER);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  _verifyValueWrite(WRITE_NUMBER);  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	_verifyValueWrite(WRITE_NUMBER);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  _flushBuffer();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  _flushBuffer();  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	_flushBuffer();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  _writeQuotedRaw(raw);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  _writeQuotedRaw(raw);  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	_writeQuotedRaw(raw);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
4	[BUG]  [BUGGY]  _writeQuotedRaw(value);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  _writeQuotedRaw(value);  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	_writeQuotedRaw(value);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
5	[BUG]  [BUGGY]  if(value!=  null)  {  if(value!=  null)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null)  {  if(value!=  null)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=    null)    {    if(value!=  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
6	[BUG]  [BUGGY]  if(value!=  null)  {  if(value  ==  null)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null)  {  if(value  ==  null)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=    null)    {    if(value  ==  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
7	[BUG]  [BUGGY]  if(value!=  null)  {  if(value  >=  null)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null)  {  if(value  >=  null)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=    null)    {    if(value  >=  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
8	[BUG]  [BUGGY]  if(value!=  null)  {  if(value  >>  null)  {  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null)  {  if(value  >>  null)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=    null)    {    if(value  >>  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
9	[BUG]  [BUGGY]  if(value!=  null)  {  If(value!=  null)  {  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null)  {  If(value!=  null)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=    null)    {    If(value!=  null)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
10	[BUG]  [BUGGY]  if(_writeNull())  {  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_writeNull())  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_writeNull())  {	  if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  incompatible  types	2	None	replace
11	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings  &&  value.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings  &&  value.length()  >  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings  &&  value.length()  >  0)  {	  if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
12	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings  ||  value.charAt(value.length()  -  1)!=  '-')  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings  ||  value.charAt(value.length()  -  1)!=  '-')  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings  ||  value.charAt(value.length()  -  1)!=  '-')  {	  if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
13	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings  ||  value.charAt(value.length()  -  1)!=  '/')  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings  ||  value.charAt(value.length()  -  1)!=  '/')  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings  ||  value.charAt(value.length()  -  1)!=  '/')  {	  if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
14	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  if(_cfgNumbersAsStrings)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings)  {  if(_cfgNumbersAsStrings)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings)    {    if(_cfgNumbersAsStrings)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
15	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  If(_cfgNumbersAsStrings)  {  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings)  {  If(_cfgNumbersAsStrings)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings)    {    If(_cfgNumbersAsStrings)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
16	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  if(_cfgNumberersAsStrings)  {  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings)  {  if(_cfgNumberersAsStrings)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings)    {    if(_cfgNumberersAsStrings)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
17	[BUG]  [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null  ||  value.length()  ==  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=  null  ||  value.length()  ==  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
18	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value  ==  null  ||  value.length()!=  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value  ==  null  ||  value.length()!=  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
19	[BUG]  [BUGGY]  if(_writer  ==  null  ||  value.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_writer  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_writer  ==  null  ||  value.length()  ==  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
20	[BUG]  [BUGGY]  if(value!=  null  ||  value.isEmpty())  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null  ||  value.isEmpty())  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=  null  ||  value.isEmpty())  {	  if(value    ==    null    ||    value.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
21	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  Writer  w  =  _writeQuotedRaw(value);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings)  {  Writer  w  =  _writeQuotedRaw(value);  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings)    {    Writer  w  =  _writeQuotedRaw(value);	  	non-compiled	[CE]  ';'  expected	1	None	add
22	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings  ||(value!=  null  &&  value.isEmpty()))  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings  ||(value!=  null  &&  value.isEmpty()))  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings  ||(value!=  null  &&  value.isEmpty()))  {	  if(value!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
23	[BUG]  [BUGGY]  if(_writer  ==  null  ||  value  ==  null  ||  value.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_writer  ==  null  ||  value  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_writer  ==  null  ||  value  ==  null  ||  value.length()  ==  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
24	[BUG]  [BUGGY]  if(_outputBuffer  ==  null  ||  value.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_outputBuffer  ==  null  ||  value.length()  ==  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_outputBuffer  ==  null  ||  value.length()  ==  0)  {	  if(value    ==    null    ||    value.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
25	[BUG]  [BUGGY]  _verifyValueWrite( "write  number ");  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  _verifyValueWrite( "write  number ");  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	_verifyValueWrite( "write  number ");	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings)  {  if(_cfgNumberAsStrings)  {  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings)  {  if(_cfgNumberAsStrings)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings)    {    if(_cfgNumberAsStrings)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_writer!=  null)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	add	if(_writer!=  null)  {	  if(_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	2	4	replace
28	[BUG]  [BUGGY]  if(_writer!=  null)  {  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_writer!=  null)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_writer!=  null)  {	  if(_cfgNumbersAsStrings)    {    	compilable	  [FE]  AssertionFailedError  	2	4	replace
29	[BUG]  [BUGGY]  if(_cfgNumbersAsStrings  ||  value.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(_cfgNumbersAsStrings  ||  value.length()  ==  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(_cfgNumbersAsStrings  ||  value.length()  ==  0)  {	  if(_cfgNumbersAsStrings)    {    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
30	[BUG]  [BUGGY]  if(value  ==  null  ||  value.length()  <  SHORT_WRITE)  {  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value  ==  null  ||  value.length()  <  SHORT_WRITE)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value  ==  null  ||  value.length()  <  SHORT_WRITE)  {	  if(value    ==    null    ||    value.isEmpty())    {    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
31	[BUG]  [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null  &&  value.length()  >  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=  null  &&  value.length()  >  0)  {	  if(value!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
32	[BUG]  [BUGGY]  if(value!=  null  &&  value.getLength()  >  0)  {  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]    public  void  writeNumber(BigDecimal  value)  throws  IOException  {  _verifyValueWrite(WRITE_NUMBER);    [BUGGY]  if(value!=  null  &&  value.getLength()  >  0)  {  [BUGGY]    _writeNull();  }  elseif  (_cfgNumbersAsStrings)  {  String  raw  =  isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN)  ?  value.toPlainString()  :  value.toString();  _writeQuotedRaw(raw);  }  else  if  (isEnabled(Feature.WRITE_BIGDECIMAL_AS_PLAIN))  {  writeRaw(value.toPlainString());  }  else  {  writeRaw(_asString(value));  }  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeNumber  [RETURN_TYPE]  void  BigDecimal  value  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  String  raw  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  qlen  room  start  status  Writer  _writer  w  BigDecimal  value  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.5	684	684	1	replace	if(value!=  null  &&  value.getLength()  >  0)  {	  if(value!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
