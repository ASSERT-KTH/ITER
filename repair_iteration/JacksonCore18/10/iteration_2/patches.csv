bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	65	None	replace
2	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(text,  offset+amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
4	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
5	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    Text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	1	None	add
6	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  _writer.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  _writer.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    _writer.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
7	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+,  _outputBuffer,  0);	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  amount,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  0,  amount,  len);	  text.getChars(offset,    offset+1,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	43	None	replace
9	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  amount,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  amount,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+1,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int,int)	43	None	replace
10	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail,  amount);	  text.getChars(offset,    offset+1,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	43	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
12	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
14	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
15	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >>  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >>  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >>  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	non-compiled	[CE]  incompatible  types	18	None	add
16	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  ==  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  ==  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
17	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  ==  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  ==  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  ==  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
18	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  _outputTail);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	47	None	replace
19	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  _outputTail);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	47	None	replace
20	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	47	None	replace
21	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                      AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	47	None	replace
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
23	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	23	1	add
24	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output	  	non-compiled	[CE]  ')'  expected	23	None	add
25	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	23	None	add
26	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0	  	non-compiled	[CE]  ')'  expected	23	None	add
27	[BUG]  [BUGGY]  If(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  If(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	If(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	57	None	replace
28	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
29	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	57	1	replace
30	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeStringLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeStringLong(text);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeStringLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	46	None	replace
31	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeStringLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	46	None	replace
32	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeStringLong(text);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	46	None	replace
33	[BUG]  [BUGGY]  text.getChars(0,  amount,  len,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  len,  _outputBuffer,  _outputTail);	  text.getChars(0,    amount,    len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	34	None	replace
34	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  len,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  len,  _outputTail);	  text.getChars(0,    amount,    len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	34	None	replace
35	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputTail,  len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,int,int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputTail,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputTail,  len,  _outputBuffer,  0);	  text.getChars(0,    amount,    len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,int,char[],int)	34	None	replace
36	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(0,  len,  _outputBuffer,  _outputTail);	  text.getChars(0,    amount,    len,    _outputBuffer,    0);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
37	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  _outputTail);  [FE]  ArrayIndexOutOfBoundsException  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  len,  _outputBuffer,  _outputTail);	  text.getChars(0,    amount,    len,    _outputBuffer,    0);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
38	[BUG]  [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  Text  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);	  Text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  cannot  find  symbol  Text	38	None	replace
39	[BUG]  [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  Text  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);	  Text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  cannot  find  symbol  Text	38	None	replace
40	[BUG]  [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  [CE]  cannot  find  symbol  Text  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);	  Text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  cannot  find  symbol  Text	38	None	replace
41	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(offset,  offset+len,  _outputBuffer,  0);	  text.getChars(0,    len,    _outputBuffer,    0);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
42	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);	  text.getChars(0,    len,    _outputBuffer,    0);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
43	[BUG]  [BUGGY]  if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
44	[BUG]  [BUGGY]  if(amount  <  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
45	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
46	[BUG]  [BUGGY]  if(amount  <  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+Amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+Amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+Amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
47	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
48	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  else  {  _writer.flushBuffer();  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  else  {  _writer.flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  else  {  _writer.flushBuffer();  }	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
49	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  0,  len);	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
50	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    amount);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	54	None	replace
51	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	19	1	replace
52	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount!=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	19	1	replace
53	[BUG]  [BUGGY]  ||(amount  >=  SHORT_WRITE  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  ||(amount  >=  SHORT_WRITE  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	||(amount  >=  SHORT_WRITE  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
54	[BUG]  [BUGGY]  if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	56	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
56	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
58	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
59	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
60	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
61	[BUG]  [BUGGY]  int  len  =  text.length()  -  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  int  len  =  text.length()  -  amount;  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	int  len  =  text.length()  -  amount;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	13	None	replace
62	[BUG]  [BUGGY]  int  len  =  text.length()  +  amount;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  int  len  =  text.length()  +  amount;  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	int  len  =  text.length()  +  amount;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	13	None	replace
63	[BUG]  [BUGGY]  int  len  =  text.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  int  len  =  text.length()  -  1;  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	int  len  =  text.length()  -  1;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	13	None	replace
64	[BUG]  [BUGGY]  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	replace
65	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	replace
66	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	replace
67	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	4	None	replace
68	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  return;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  return;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  return;  }	          if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
69	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  return;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  return;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  return;  }	          if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
70	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(len  >  0)  {  return;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(len  >  0)  {  return;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount!=  SHORT_WRITE)  {  if(len  >  0)  {  return;  }	          if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
71	[BUG]  [BUGGY]  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	Text.getChars(offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    Text.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	3	None	replace
72	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    Text.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	3	None	replace
73	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    Text.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	3	None	replace
74	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  offset,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeStringLong(text,  offset,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeStringLong(text,  offset,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeStringLong(text,    offset,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	52	None	replace
75	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  len,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeStringLong(text,    offset,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	52	None	replace
76	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeStringLong(text,    offset,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	52	None	replace
77	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  _outputTail,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  _outputTail,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  _outputTail,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeStringLong(text,    offset,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	52	None	replace
78	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  text.getChars(0,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(0,    len,    _outputBuffer,    0);    text.getChars(0,  len,  _outputBuffer,  0);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	1	add
79	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  text.getChars(0,  len,  _outputBuffer,  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  text.getChars(0,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    len,    _outputBuffer,    0);    text.getChars(0,  len,  _outputBuffer,  0);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	50	1	add
80	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  Text.getChars(0,  len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  Text.getChars(0,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    len,    _outputBuffer,    0);    Text.getChars(0,  len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	50	None	add
81	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    len,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	50	None	add
82	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    len,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	50	None	add
83	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    len,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	50	None	add
84	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  amount,  len);	  TextUtilities.writeRawLong(text,    offset,    amount);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	64	None	replace
85	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  _outputBuffer,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  _outputBuffer,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  _outputBuffer,  amount);	  TextUtilities.writeRawLong(text,    offset,    amount);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	64	None	replace
86	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  amount  +  1);	  TextUtilities.writeRawLong(text,    offset,    amount);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	64	None	replace
87	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0,  len);	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	58	None	replace
88	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputTail,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputTail,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputTail,  0);	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	58	None	replace
89	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  amount);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0,  amount);	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	58	None	replace
90	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+len,  _outputTail);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
91	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+len,  _outputTail);  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+len,  _outputTail);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
92	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+amount,  _outputTail);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
93	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+amount,  _outputTail);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
94	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+1len,  _outputTail);  [CE]  ')'  expected  [FE]        IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+1len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+1len,  _outputTail);	  	non-compiled	[CE]  ')'  expected	15	None	add
95	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+1,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+1,  _outputTail);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
96	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+1,  _outputTail);  [FE]  IndexOutOfBoundsException  [FE]          IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+1,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+1,  _outputTail);	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
97	[BUG]  [BUGGY]  Text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  Text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	Text.getChars(0,  amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    Text.getChars(0,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
98	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    Text.getChars(0,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
99	[BUG]  [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    Text.getChars(0,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
100	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer);	          TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	42	None	replace
101	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  amount);	          TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	42	None	replace
102	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+amount,  len);	          TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	42	None	replace
103	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	45	None	replace
104	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	45	None	replace
105	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	45	None	replace
106	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
107	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
108	[BUG]  [BUGGY]  ||(amount  >  0  &&  _outputTail  >  room))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  ||(amount  >  0  &&  _outputTail  >  room))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	||(amount  >  0  &&  _outputTail  >  room))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
109	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  len,  _outputBuffer,  0,  amount);	  text.getChars(offset,    offset+1,    len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int,int)	36	None	replace
110	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  len,  _outputBuffer,  _outputTail);	  text.getChars(offset,    offset+1,    len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	36	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
112	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	7	1	add
113	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  _writer.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  _writer.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    _writer.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
114	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	add
115	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	add
116	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	add
117	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	66	None	replace
118	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
119	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
120	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	26	None	replace
121	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	67	1	add
122	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	67	1	add
123	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  If(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  If(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    If(amount  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	67	None	add
124	[BUG]  [BUGGY]  ||(amount  >  SHORT_WRITE  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  ||(amount  >  SHORT_WRITE  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	||(amount  >  SHORT_WRITE  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||(amount    <    SHORT_WRITE    &&    _outputTail    >    0))    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
125	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  1))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  1))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail  >  1))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||(amount    <    SHORT_WRITE    &&    _outputTail    >    0))    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
126	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  0)&&(_outputHead  >=  _outputEnd))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  _outputTail  >  0)&&(_outputHead  >=  _outputEnd))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	||(amount  <  SHORT_WRITE  &&  _outputTail  >  0)&&(_outputHead  >=  _outputEnd))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||(amount    <    SHORT_WRITE    &&    _outputTail    >    0))    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
128	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	30	None	replace
129	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount,  0,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	30	None	replace
130	[BUG]  [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+amount,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(_outputBuffer,  offset+amount,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
131	[BUG]  [BUGGY]  _writer.writeRawLong(offset,  offset+len,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(offset,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(offset,  offset+len,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
132	[BUG]  [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+len,  _outputHead);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(_outputBuffer,  offset+len,  _outputHead);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(_outputBuffer,  offset+len,  _outputHead);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
133	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(0,  amount,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    amount,    _outputBuffer,    _outputTail);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	1	replace
134	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    amount,    _outputBuffer,    _outputTail);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	1	replace
135	[BUG]  [BUGGY]  _writer.getChars(0,  amount,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.getChars(0,  amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.getChars(0,  amount,  _outputBuffer,  _outputTail);	  text.getChars(0,    amount,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
136	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  _outputTail,  len);	  text.getChars(0,    amount,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	33	None	replace
137	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
138	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
139	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	44	None	replace
140	[BUG]  [BUGGY]  if(amount  ==  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    If(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
141	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  0,  amount);	  text.getChars(offset,    offset+amount,    _outputBuffer,    _outputTail,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	29	None	replace
142	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  amount,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  amount,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    _outputTail,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	29	None	replace
143	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_writer.write(_outputBuffer,  offset+amount,  _outputTail);	  _writer.write(_outputBuffer,    offset+len,    _outputTail);    	compilable	  [FE]  IndexOutOfBoundsException  	16	1	replace
144	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,  offset+amount,  _outputTail);	  _writer.write(_outputBuffer,    offset+len,    _outputTail);    	compilable	  [FE]  IndexOutOfBoundsException  	16	1	replace
145	[BUG]  [BUGGY]  _writer.write(room,  offset+len,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(int,int,char[],int)  [FE]      IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(room,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(room,  offset+len,  _outputBuffer,  _outputTail);	  _writer.write(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(int,int,char[],int)	16	None	replace
146	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]        IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  _outputTail);	  _writer.write(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	16	None	replace
147	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
148	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _outputTail  =  amount;  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_outputTail  =  amount;	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
149	[BUG]  [BUGGY]  _outputTail  =  amount;  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _outputTail  =  amount;  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_outputTail  =  amount;	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
150	[BUG]  [BUGGY]  if(amount  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
151	[BUG]  [BUGGY]  if(amount  >  0)  {  if(_outputTail  >=  safeOutputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  if(_outputTail  >=  safeOutputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  if(_outputTail  >=  safeOutputEnd)  {  _flushBuffer();  }	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
152	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  amount  +  1);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	48	None	replace
153	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount,  len  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount,  len  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount,  len  +  1);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	48	None	replace
154	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  amount  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                      AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  amount  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  amount  +  1);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	48	None	replace
155	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  amount  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  amount  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  amount  +  1);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	48	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
157	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
159	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
161	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
162	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  IllegalArgumentException  	2	1	replace
163	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  IllegalArgumentException  	2	1	replace
164	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  amount);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0,  amount);	          _writer.write(text,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	22	None	replace
165	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  len,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  write(String,int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  len,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  len,  _outputBuffer,  0,  len);	          _writer.write(text,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,char[],int,int)	22	None	replace
166	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  _outputTail,  amount,  len);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int,int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  _outputTail,  amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  _outputTail,  amount,  len);	          _writer.write(text,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int,int)	22	None	replace
167	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputHead);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	70	None	replace
168	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputHead);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	70	None	replace
169	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  amount);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputHead);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	70	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    text.getChars(0,  amount,  _outputBuffer,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
171	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    text.getChars(0,  amount,  _outputBuffer,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	32	1	add
172	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  Text.getChars(0,  amount,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  Text  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  Text.getChars(0,  amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    Text.getChars(0,  amount,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  Text	32	None	add
173	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
174	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
175	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
176	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	60	None	replace
177	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	60	None	replace
178	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	60	None	replace
179	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	61	None	replace
180	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  room,  _outputBuffer,  0);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	61	None	replace
181	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputTail,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputTail,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputTail,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	11	None	replace
182	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(text,  offset,  len,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
183	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
184	[BUG]  [BUGGY]  if(amount  >=  len)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  len)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  len)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
185	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
186	[BUG]  [BUGGY]  if(amount!=  len)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  len)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount!=  len)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
187	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	replace
188	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
189	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _writer.flushBuffer();  }  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _writer.flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _writer.flushBuffer();  }	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
190	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0,  len);	  TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	62	None	replace
191	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);	  TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	62	None	replace
192	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+amount,  room,  _outputBuffer,  0);	  TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	62	None	replace
193	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextBuffer    text    =    new    TextBuffer(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
194	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+1,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.getChars(offset,  offset+1,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.getChars(offset,  offset+1,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextBuffer    text    =    new    TextBuffer(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
195	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextBuffer    text    =    new    TextBuffer(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
196	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
197	[BUG]  [BUGGY]  if(amount  ==  0)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  0)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  0)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
198	[BUG]  [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
199	[BUG]  [BUGGY]  if(amount  ==  len)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  len)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  len)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
200	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(0,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	49	None	replace
201	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputHead,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputHead,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  _outputHead,  0,  len);	  text.getChars(0,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	49	None	replace
202	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	6	None	replace
203	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	6	None	replace
204	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	6	None	replace
205	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
206	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	55	1	add
207	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	55	1	add
208	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	1	add
209	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	1	add
210	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  If(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  If(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    If(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	55	None	add
211	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  amount,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  amount,  _outputBuffer,  _outputTail);	  text.getChars(offset,    offset+1,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	35	None	replace
212	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  amount,  _outputBuffer,  _outputTail,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  amount,  _outputBuffer,  _outputTail,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  amount,  _outputBuffer,  _outputTail,  0);	  text.getChars(offset,    offset+1,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int,int)	35	None	replace
213	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputTail);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	12	None	replace
214	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  amount);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	28	None	replace
215	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  _outputTail);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	28	None	replace
216	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount,  len,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount,  len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount,  len,  _outputTail);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	28	None	replace
217	[BUG]  [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset+len,  text,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset+len,  text,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(_outputBuffer,  offset+len,  text,  0);	          TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	41	None	replace
218	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+1,  _outputBuffer,  0);	          TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	41	None	replace
219	[BUG]  [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset+len,  _outputTail,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset+len,  _outputTail,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(_outputBuffer,  offset+len,  _outputTail,  0);	          TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	41	None	replace
220	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  len);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	37	None	replace
221	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  _outputTail,  0,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  _outputTail,  0,  len);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	37	None	replace
222	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  }  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    }    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	69	None	replace
223	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);  }  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    }    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	69	None	replace
224	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,int,char[],int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  len,  _outputBuffer,  0);	  _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,char[],int)	14	None	replace
225	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
226	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
227	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output	  	non-compiled	[CE]  ')'  expected	25	None	add
228	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	25	None	add
229	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0	  	non-compiled	[CE]  ')'  expected	25	None	add
230	[BUG]  [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  offset,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(_outputBuffer,  offset,  len);	          TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	42	None	replace
231	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  room,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  room,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  room,  _outputBuffer,  0,  len);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	37	None	replace
232	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputTail);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	37	None	replace
233	[BUG]  [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	Text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    Text.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	3	None	replace
234	[BUG]  [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+1,  _outputBuffer,  0,  len);	          _writer.write(text,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	22	None	replace
235	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount  -  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount  -  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount  -  1);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	48	None	replace
236	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	23	None	add
237	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
238	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+anchor,  _outputBuffer,  0);  [CE]  cannot  find  symbol  anchor  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+anchor,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+anchor,  _outputBuffer,  0);	          TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  anchor	41	None	replace
239	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getCHARs(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getCHARs(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getCHARs(offset,  offset+len,  _outputBuffer,  0);  }	  	non-compiled	[CE]  cannot  find  symbol	55	None	add
240	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  If(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  If(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    If(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	18	None	add
241	[BUG]  [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	11	None	replace
242	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	11	None	replace
243	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputLen,  0);  [CE]  cannot  find  symbol  _outputLen  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputLen,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  _outputLen,  0);	  text.getChars(0,    amount,    len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  _outputLen	34	None	replace
244	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_writer.write(text,  offset+amount,  _outputTail);	  _writer.write(_outputBuffer,    offset+len,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
245	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputTail);  [FE]  AssertionFailedError  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  _outputTail);	  _writer.write(_outputBuffer,    offset+len,    _outputTail);    	compilable	  [FE]  AssertionFailedError  	16	1	replace
246	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    Text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	7	None	add
247	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	add
248	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	7	None	add
249	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  _outputHead,  amount);	  text.getChars(offset,    offset+amount,    _outputBuffer,    _outputTail,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	29	None	replace
250	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                    AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0);	  text.getChars(offset,    offset+amount,    _outputBuffer,    _outputTail,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	29	None	replace
251	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail,  amount);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	28	None	replace
252	[BUG]  [BUGGY]  TextUtilities.writeRawLong(amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(amount);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	replace
253	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  _outputTail);	  _writer.write(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	58	None	replace
254	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  amount  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  amount  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  0,  amount  +  1);	  text.getChars(offset,    offset+1,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	43	None	replace
255	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+1,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	43	None	replace
256	[BUG]  [BUGGY]  _writer.writeRawLong(amount,  offset+len,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(amount,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(amount,  offset+len,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
257	[BUG]  [BUGGY]  _writer.writeRawLong(amount,  offset+len,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(amount,  offset+len,  _outputBuffer);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(amount,  offset+len,  _outputBuffer);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
258	[BUG]  [BUGGY]  _writer.writeRawLong(offset,  offset+amount,  _outputTail);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(offset,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(offset,  offset+amount,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
259	[BUG]  [BUGGY]  ||(amount  <  0  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  ||(amount  <  0  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	||(amount  <  0  &&  _outputTail  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||(amount    <    SHORT_WRITE    &&    _outputTail    >    0))    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
260	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail  +  1);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	47	None	replace
261	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0,  _outputTail);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	47	None	replace
262	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  len);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	12	None	replace
263	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
264	[BUG]  [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
266	[BUG]  [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
267	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
268	[BUG]  [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  ==  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	8	1	replace
269	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	6	None	replace
270	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  offset+amount,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	6	None	replace
271	[BUG]  [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    Text.getChars(0,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
272	[BUG]  [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  Text  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  text.getChars(0,  amount,  _outputBuffer,  0);  Text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  text.getChars(0,    amount,    _outputBuffer,    0);    Text.getChars(0,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
273	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0,  amount);	  TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	62	None	replace
274	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount!=  SHORT_WRITE)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	60	None	replace
275	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
276	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
277	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeRawLong(text,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
278	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  amount);	  text.getChars(0,    amount,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	33	None	replace
279	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeStringLong(text);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeStringLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	46	None	replace
280	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  }	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
281	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  amount);	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
282	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	15	None	add
283	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]      IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	15	None	add
284	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset  +  amount,  _outputTail);  }  [CE]  cannot  assign  a  value  to  final  variable  _writer  [FE]        IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset  +  amount,  _outputTail);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    if(_writer!=  null)  {  _writer  =  new  StringBuffer();  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset  +  amount,  _outputTail);  }	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  _writer	15	None	add
285	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  [CE]  'else'  without  'if'  [FE]          IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);	  	non-compiled	[CE]  'else'  without  'if'	15	None	add
286	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  amount);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	45	None	replace
287	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	45	None	replace
288	[BUG]  [BUGGY]  if(amount!=  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount!=  0)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
289	[BUG]  [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
290	[BUG]  [BUGGY]  if(amount!=  0)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  0)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount!=  0)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
291	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  if(len  >  0)  {  amount  =  0;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	40	None	replace
292	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
293	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	65	None	replace
294	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+alpha,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alpha  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+alpha,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+alpha,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alpha	65	None	replace
295	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  space,  _outputBuffer,  0);  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  space,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  space,  _outputBuffer,  0);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  space	61	None	replace
296	[BUG]  [BUGGY]  int  len  =  text.length()  /  SHORT_WRITE;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  int  len  =  text.length()  /  SHORT_WRITE;  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	int  len  =  text.length()  /  SHORT_WRITE;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	13	None	replace
297	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  len,  _outputBuffer,  0,  amount);	  text.getChars(0,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	49	None	replace
298	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  0,  _outputTail);	  text.getChars(0,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	49	None	replace
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	57	1	replace
300	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	57	1	replace
301	[BUG]  [BUGGY]  _writer.write(text,  offset,  offset+len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,int,char[],int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset,  offset+len,  _outputBuffer,  0);	  _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,char[],int)	14	None	replace
302	[BUG]  [BUGGY]  TextUtilities.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.getChars(offset,  offset+amount,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	replace
303	[BUG]  [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  len,  _outputBuffer,  0);  TextUtilities.writeStringLong(text,  offset,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    len,    _outputBuffer,    0);    TextUtilities.writeStringLong(text,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	50	None	add
304	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail);	  text.getChars(offset,    offset+1,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
305	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  _outputTail);	  text.getChars(offset,    offset+1,    amount,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	35	1	replace
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >=  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
307	[BUG]  [BUGGY]  if(amount  >=  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
309	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
310	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  alpha  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  alpha	19	None	replace
311	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount  -  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount  -  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  amount  -  1);	  TextUtilities.writeRawLong(text,    offset,    amount);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	64	None	replace
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
313	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
314	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _output	  	non-compiled	[CE]  ')'  expected	25	None	add
315	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	25	None	add
316	[BUG]  [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount        <        SHORT_WRITE)        {        text.getChars(offset,        offset+amount,        _outputBuffer,        0);        }        if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0	  	non-compiled	[CE]  ')'  expected	25	None	add
317	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead,  _outputTail);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputHead);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	70	None	replace
318	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0,  _outputTail);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0,  _outputTail);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0,  _outputTail);  text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	1	None	add
319	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	1	None	add
320	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	1	None	add
321	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  if(_outputTail  >  safeOutputEnd)  {  _flushBuffer();  }	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	59	None	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _flushBuffer();  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_flushBuffer();	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
323	[BUG]  [BUGGY]  _flushBuffer();  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _flushBuffer();  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_flushBuffer();	  if(amount    >    0)    {    if(_outputTail    >    safeOutputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	59	1	replace
324	[BUG]  [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputLen);  [CE]  cannot  find  symbol  _outputLen  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputLen);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputLen);	  Text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount);    	non-compiled	[CE]  cannot  find  symbol  _outputLen	38	None	replace
325	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(offset,  len,  _outputBuffer,  0);	  text.getChars(0,    len,    _outputBuffer,    0);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
326	[BUG]  [BUGGY]  text.getChars(offset,  len,  _outputBuffer,  0);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  len,  _outputBuffer,  0);	  text.getChars(0,    len,    _outputBuffer,    0);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	51	1	replace
327	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(_writer!=  null)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
328	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
329	[BUG]  [BUGGY]  _writer.writeRawLong(offset,  offset+amount,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.writeRawLong(offset,  offset+amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.writeRawLong(offset,  offset+amount,  _outputBuffer,  _outputTail);	  _writer.writeRawLong(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
330	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+1,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset+1,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset+1,  amount,  _outputBuffer,  0);	          TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	41	None	replace
331	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	66	None	replace
332	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	66	None	replace
333	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _writer.flushBuffer();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _writer.flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  else  {  _writer.flushBuffer();  }	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
334	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	19	1	replace
335	[BUG]  [BUGGY]  if(amount  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	19	1	replace
336	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	19	1	replace
337	[BUG]  [BUGGY]  if(amount  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    >=    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	19	1	replace
338	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
339	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	replace
340	[BUG]  [BUGGY]  ||(amount  <  SHORT_WRITE  &&  amount  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  ||(amount  <  SHORT_WRITE  &&  amount  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	||(amount  <  SHORT_WRITE  &&  amount  >  0))  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||(amount    <    SHORT_WRITE    &&    _outputTail    >    0))    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
341	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_writer.write(_outputBuffer,    offset+len,    _outputTail);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
342	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  }  [FE]  IndexOutOfBoundsException  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  else  {  _writer.write(_outputBuffer,  offset+amount,  _outputTail);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
343	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	_writer.write(_outputBuffer,    offset+len,    _outputTail);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
344	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  [FE]  IndexOutOfBoundsException  [FE]      IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(_outputBuffer,  offset+len,  _outputTail);  if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(_outputBuffer,    offset+len,    _outputTail);    if(_writer!=  null)  {  _writer.write(_outputBuffer,  offset+len,  _outputTail);  }	  	compilable	  [FE]  IndexOutOfBoundsException  	15	1	add
345	[BUG]  [BUGGY]  _writer.write(room,  offset+amount,  _outputTail);  [CE]  no  suitable  method  found  for  write(int,int,int)  [FE]    IndexOutOfBoundsException    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(room,  offset+amount,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(room,  offset+amount,  _outputTail);	  _writer.write(_outputBuffer,    offset+len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  write(int,int,int)	16	None	replace
346	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+amount,  _outputBuffer,  0,  amount,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  offset+amount,  _outputBuffer,  0,  amount,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  offset+amount,  _outputBuffer,  0,  amount,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	28	None	replace
347	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	11	None	replace
348	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  amount  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  amount  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  amount  +  1);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    amount    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	48	None	replace
349	[BUG]  [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  alpha  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }	  if(amount    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  alpha	68	None	replace
350	[BUG]  [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+1,  _outputBuffer,  0);	  _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	14	None	replace
351	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0,  _outputTail);	  _writer.write(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	14	None	replace
352	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  amount,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    Text.getChars(0,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
353	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  amount);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  amount);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	37	None	replace
354	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputLen);  [CE]  cannot  find  symbol  _outputLen  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputLen);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputLen);	  TextUtilities.writeRawLong(text,    offset,    amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  _outputLen	37	None	replace
355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
356	[BUG]  [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,        offset+1,        _outputBuffer,        0);        text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	1	1	add
357	[BUG]  [BUGGY]  if(amount  >=  _outputEnd)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  _outputEnd)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  _outputEnd)  {  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    If(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
358	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  offset,  amount,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeStringLong(text,  offset,  amount,  _outputBuffer);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeStringLong(text,  offset,  amount,  _outputBuffer);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeStringLong(text,    offset,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	52	None	replace
359	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  offset,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeStringLong(text,  offset,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeStringLong(text,  offset,  amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeStringLong(text,    offset,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	52	None	replace
360	[BUG]  [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >=  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    }    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	69	None	replace
361	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+always,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  always  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+always,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+always,  _outputBuffer,  0);  }	  if(amount    <    SHORT_WRITE)    {    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  always	57	None	replace
362	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  if(len  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	60	None	replace
363	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
364	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeStringLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail);  TextUtilities.writeStringLong(text,  offset+amount,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,    amount,    _outputBuffer,    _outputTail);    TextUtilities.writeStringLong(text,  offset+amount,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	add
365	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  room,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+1,  room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+1,  room,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    amount,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	35	None	replace
366	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  0);  }	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
367	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);	  text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
368	[BUG]  [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount!=  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount!=  SHORT_WRITE)  {  if(len  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }	          if(amount    ==    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
369	[BUG]  [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  return;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  0)  {  if(len  >  0)  {  return;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  0)  {  if(len  >  0)  {  return;  }	          if(amount    <    SHORT_WRITE)    {    if(len    >    0)    {    return;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
370	[BUG]  [BUGGY]  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  int  len  =  text.length()  -  room;  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	int  len  =  text.length()  -  room;	  int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	13	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
372	[BUG]  [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  <  SHORT_WRITE)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,    offset+1,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	2	1	replace
373	[BUG]  [BUGGY]  _writer.write(text,  offset+anchor,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  anchor  [FE]        AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.write(text,  offset+anchor,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.write(text,  offset+anchor,  _outputBuffer,  0,  len);	          _writer.write(text,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  anchor	22	None	replace
374	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	add
375	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset+amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	add
376	[BUG]  [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  Text.write(text,  offset+amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]        AssertionFailedError    [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,    amount,    _outputBuffer,    0);    text.getChars(0,  amount,  _outputBuffer,  0);  Text.write(text,  offset+amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,        amount,        _outputBuffer,        0);        text.getChars(0,    amount,    _outputBuffer,    0);    Text.write(text,  offset+amount,  _outputBuffer,  0);  text.getChars(0,  amount,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	7	None	add
377	[BUG]  [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail,  amount);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(0,  amount,  _outputBuffer,  _outputTail,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(0,  amount,  _outputBuffer,  _outputTail,  amount);	  text.getChars(0,    amount,    len,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	34	None	replace
378	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputHead);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	70	None	replace
379	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0,  _outputHead);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	TextUtilities.writeRawLong(text,  offset,  amount,  _outputBuffer,  0,  _outputHead);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	70	None	replace
380	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	add	if(amount  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	compilable	  [FE]  AssertionFailedError  	40	1	replace
381	[BUG]  [BUGGY]  if(amount  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  if(amount  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	if(amount  >  SHORT_WRITE)  {  amount  =  SHORT_WRITE;  }	          if(amount    >=    SHORT_WRITE)    {    if(len    >    SHORT_WRITE)    {    amount    =    SHORT_WRITE;    }    	compilable	  [FE]  AssertionFailedError  	40	1	replace
382	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+1,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  room  =  _outputEnd  -  _outputTail;  text.getChars(0,  room,  _outputBuffer,  _outputTail);  _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;      [BUGGY]  _writer.getChars(offset,  offset+1,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	486	486	1	replace	_writer.getChars(offset,  offset+1,  _outputBuffer,  0,  len);	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
