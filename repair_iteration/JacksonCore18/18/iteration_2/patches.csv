bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
2	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputTail  =  len;	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
4	[BUG]  [BUGGY]  _outputTail  =  len;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputTail  =  len;	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
6	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
7	[BUG]  [BUGGY]  _outputHead  =  Len;  [CE]  cannot  find  symbol  Len  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  Len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  Len;	  _outputHead    =    length;    	non-compiled	[CE]  cannot  find  symbol  Len	33	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  0)  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	3	1	replace
9	[BUG]  [BUGGY]  if(len  >  0)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	3	1	replace
10	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  [CE]  'void'  type  not  allowed  here  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));	  _flushBuffer();    	non-compiled	[CE]  'void'  type  not  allowed  here	3	None	replace
11	[BUG]  [BUGGY]  if(len  >  0)  {  _flushBuffer();  }  else  {  System.arraycopy(text,  offset+height,  _outputBuffer,  _outputTail,  len);  }  [CE]  cannot  find  symbol  height  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _flushBuffer();  }  else  {  System.arraycopy(text,  offset+height,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _flushBuffer();  }  else  {  System.arraycopy(text,  offset+height,  _outputBuffer,  _outputTail,  len);  }	  _flushBuffer();    	non-compiled	[CE]  cannot  find  symbol  height	3	None	replace
12	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
13	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
14	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
15	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
16	[BUG]  [BUGGY]  _outputHead  =  0;  len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  not  a  statement  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  0;  len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  not  a  statement	64	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
18	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;  _outputHead  =  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    _outputHead  =  1;  _outputHead  =  1;	  	compilable	  [FE]  AssertionFailedError  	12	1	add
19	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
20	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
21	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [CE]  'void'  type  not  allowed  here  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  }	  	non-compiled	[CE]  'void'  type  not  allowed  here	12	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
23	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
24	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ')'  expected	12	None	add
25	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.writeRawLong(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol	54	None	add
26	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  len  =  text.length();  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    int  len  =  text.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	54	None	add
27	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
28	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(_outputBuffer,  0,  len);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
30	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
32	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	54	1	add
33	[BUG]  [BUGGY]  _outputHead  =  LEn;  [CE]  cannot  find  symbol  LEn  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LEn;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  LEn;	  _outputHead    =    len;    _outputHead    =    LEn;    	non-compiled	[CE]  cannot  find  symbol  LEn	37	None	replace
34	[BUG]  [BUGGY]  _outputHead  =  LONG;  [CE]  cannot  find  symbol  LONG  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LONG;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  LONG;	  _outputHead    =    len;    _outputHead    =    LEn;    	non-compiled	[CE]  cannot  find  symbol  LONG	37	None	replace
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  offset;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputTail  =  offset;	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
36	[BUG]  [BUGGY]  _outputTail  =  offset;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  offset;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputTail  =  offset;	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
37	[BUG]  [BUGGY]  _outputTail  =  length;  [CE]  cannot  find  symbol  length  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  length;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputTail  =  length;	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol  length	55	None	replace
38	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  _flushBuffer();  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	2	1	add
39	[BUG]  [BUGGY]  _flushBuffer();  _flushBuffer();  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  _flushBuffer();  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    _flushBuffer();	  	compilable	  [FE]  AssertionFailedError  	2	1	add
40	[BUG]  [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
41	[BUG]  [BUGGY]  _flushBuffer();  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
42	[BUG]  [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
43	[BUG]  [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  len)  {  _outputEnd  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  len)  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  len)  {  _outputEnd  =  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	2	None	add
44	[BUG]  [BUGGY]  char  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  char  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	char  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	73	None	replace
45	[BUG]  [BUGGY]  if(len  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	73	None	replace
46	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	73	None	replace
47	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	58	None	replace
48	[BUG]  [BUGGY]  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputTail  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputTail  :  SHORT_WRITE;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputTail  :  SHORT_WRITE;	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	58	None	replace
49	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  _outputEnd;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  _outputEnd;	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	58	1	replace
50	[BUG]  [BUGGY]  _outputHead  =  _outputEnd;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  _outputEnd;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  _outputEnd;	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	58	1	replace
51	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputTail  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputTail  :  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputTail  :  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	58	None	replace
52	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
53	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
54	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
55	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  else  {  _outputTail  +=  len;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
56	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  else  {  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  else  {  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  _outputEnd;  }  else  {  _outputTail  +=  len;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
58	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
59	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  ';'  expected	41	None	replace
60	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
61	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  len;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
62	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  len;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
63	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	14	None	replace
64	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	14	None	replace
65	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    1;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	14	None	replace
66	[BUG]  [BUGGY]  int  len  =  text.length()  -  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  int  len  =  text.length()  -  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	int  len  =  text.length()  -  1;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	45	None	replace
67	[BUG]  [BUGGY]  int  len  =  text.length()  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  int  len  =  text.length()  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	int  len  =  text.length()  +  1;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	45	None	replace
68	[BUG]  [BUGGY]  int  len  =  _outputHead.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  int  len  =  _outputHead.length();  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	int  len  =  _outputHead.length();	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	45	None	replace
69	[BUG]  [BUGGY]  _writer.write(text,  offset+len);  [CE]  no  suitable  method  found  for  write(String,int)  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  offset+len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  offset+len);	  _writer.write(text);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int)	7	None	replace
70	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  5;	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
71	[BUG]  [BUGGY]  _outputHead  =  5;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  5;	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
72	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text,  0,  len  +  1);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
73	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  0,  len  +  1);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
74	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,int,int,char[],int)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  _outputTail);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,char[],int)	5	None	replace
75	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  -  1);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text,  0,  len  -  1);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
76	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  -  1);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  0,  len  -  1);	  _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
77	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    5;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	50	None	replace
78	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    5;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	50	None	replace
79	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    5;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	50	None	replace
80	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
81	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
83	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
84	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
85	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
86	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
87	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
88	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
89	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
90	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _outputHead  =  len;  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    _outputHead  =  len;  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
91	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _outputHead  =  len;  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _outputHead  =  len;  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    _outputHead  =  len;  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
92	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
93	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(len  >  room)  {  _outputTail  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
94	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
95	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
96	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
97	[BUG]  [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  qlen  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  qlen	53	None	replace
98	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  LAST_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	53	None	replace
99	[BUG]  [BUGGY]  _outputHead  =  null;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  null;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  null;	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    len;    	non-compiled	[CE]  incompatible  types	16	None	replace
100	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    room    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	59	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    room    =    text.length();    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	59	1	replace
102	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    room    =    text.length();    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	59	1	replace
103	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  cannot  find  symbol  head  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+head,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  cannot  find  symbol  head	63	None	replace
104	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+head,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
105	[BUG]  [BUGGY]  if(_outputTail  >=  len)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  len)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  len)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	23	None	replace
106	[BUG]  [BUGGY]  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  [CE]  cannot  find  symbol  writer  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	23	None	replace
107	[BUG]  [BUGGY]  _outputHead  =  SHORT_WRITE;  _outputBuffer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  SHORT_WRITE;  _outputBuffer.writeRawLong(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  SHORT_WRITE;  _outputBuffer.writeRawLong(text);	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
108	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    len    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	22	None	replace
109	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  else  {  _output  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  else  {  _output  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  else  {  _output	  _outputHead    =    SHORT_WRITE;    int    len    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  ';'  expected	22	None	replace
110	[BUG]  [BUGGY]  if(_outputTail  >=  len)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [CE]  cannot  find  symbol  writer  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  len)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  len)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  writer	24	None	replace
111	[BUG]  [BUGGY]  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  [CE]  cannot  find  symbol  writer  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  writer	24	None	replace
112	[BUG]  [BUGGY]  _outputHead  =  SHORT_WRITE;  _outputBuffer.writeRaw(text);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  SHORT_WRITE;  _outputBuffer.writeRaw(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  SHORT_WRITE;  _outputBuffer.writeRaw(text);	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
113	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	74	None	replace
114	[BUG]  [BUGGY]  if(_outputTail  >=  len)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  len)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  len)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	74	None	replace
115	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
116	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
117	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
118	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	52	None	replace
119	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
120	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	52	None	replace
121	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  ';'  expected	52	None	replace
122	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
123	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
124	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0);	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	75	None	replace
125	[BUG]  [BUGGY]  _outputTail  =  qlen;  [CE]  cannot  find  symbol  qlen  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  qlen;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputTail  =  qlen;	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  cannot  find  symbol  qlen	69	None	replace
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    len    +    1;    _outputHead  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
127	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    _outputHead  =  len  +  1;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
128	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  Len  +  1;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  Len  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    _outputHead  =  Len  +  1;	  	non-compiled	[CE]  cannot  find  symbol  Len	18	None	add
129	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    len    +    1;    _outputHead  =  len  +  2;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
130	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  2;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    _outputHead  =  len  +  2;	  	compilable	  [FE]  AssertionFailedError  	18	1	add
131	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  int  len  =  _outputEnd  +  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  int  len  =  _outputEnd  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    int  len  =  _outputEnd  +  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	18	None	add
132	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  len,  _outputTail);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  0,  len,  _outputTail);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  0,  len,  _outputTail);	          _writer.writeRaw(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
133	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  len,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  0,  len,  _outputBuffer);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  0,  len,  _outputBuffer);	          _writer.writeRaw(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
134	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  len,  _outputMaxContiguous);  [CE]  cannot  find  symbol  _outputMaxContiguous  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  0,  len,  _outputMaxContiguous);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  0,  len,  _outputMaxContiguous);	          _writer.writeRaw(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  _outputMaxContiguous	46	None	replace
135	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
136	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
138	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
139	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
140	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
141	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  6;	  _outputHead    =    4;    _outputHead    =    6;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
142	[BUG]  [BUGGY]  _outputHead  =  6;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  6;	  _outputHead    =    4;    _outputHead    =    6;    	compilable	  [FE]  AssertionFailedError  	32	1	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	4	1	add
144	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	4	1	add
145	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
146	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
147	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	4	1	add
148	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer.write(text,  0,  len);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer.write(text,  0,  len);  }	  	non-compiled	[CE]  ';'  expected	4	None	add
149	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _writeRawLong(text);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  _outputEnd)  {  _writeRawLong(text);  }	  	non-compiled	[CE]  ';'  expected	4	None	add
150	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
151	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  'void'  type  not  allowed  here  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  'void'  type  not  allowed  here	60	None	replace
152	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
153	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	17	None	replace
154	[BUG]  [BUGGY]  if(_outputTail  >=  null)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  null)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  null)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	17	None	replace
155	[BUG]  [BUGGY]  if(_outputTail  >=  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                    AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	17	None	replace
156	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	34	1	add
157	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  len;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;	  	compilable	  [FE]  AssertionFailedError  	34	1	add
158	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  Len;  _outputHead  =  len;  [CE]  cannot  find  symbol  Len  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  Len;  _outputHead  =  len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  Len;  _outputHead  =  len;	  	non-compiled	[CE]  cannot  find  symbol  Len	34	None	add
159	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  LEN;  _outputHead  =  len;  [CE]  cannot  find  symbol  LEN  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  LEN;  _outputHead  =  len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  LEN;  _outputHead  =  len;	  	non-compiled	[CE]  cannot  find  symbol  LEN	34	None	add
160	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  Len;  [CE]  cannot  find  symbol  Len  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  len;  _outputHead  =  Len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    _outputHead  =  len;  _outputHead  =  Len;	  	non-compiled	[CE]  cannot  find  symbol  Len	34	None	add
161	[BUG]  [BUGGY]  _writer.writeRawLong(text,  len);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRawLong(text,  len);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
162	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text,  offset);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRawLong(text,  offset);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
163	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text,  _outputBuffer);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRawLong(text,  _outputBuffer);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
164	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  len  +  2;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
165	[BUG]  [BUGGY]  _outputHead  =  len  +  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  2;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  len  +  2;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  len  +  3;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
167	[BUG]  [BUGGY]  _outputHead  =  len  +  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  len  +  3;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
168	[BUG]  [BUGGY]  _outputHead  =  amount  +  1;  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  amount  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  amount  +  1;	  _outputHead    =    len    +    1;    	non-compiled	[CE]  cannot  find  symbol  amount	19	None	replace
169	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  _writer.write(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
170	[BUG]  [BUGGY]  _writer.write(text);  _writer.write(text);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  _writer.write(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	6	1	add
171	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	6	None	add
172	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  if(_outputTail  >=  len)  {  _outputEnd  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  if(_outputTail  >=  len)  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  if(_outputTail  >=  len)  {  _outputEnd  =  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	6	None	add
173	[BUG]  [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }	  	non-compiled	[CE]  ';'  expected	6	None	add
174	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  _writer.write(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  _writer.write(text);  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
175	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  _writer.write(text);  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  _writer.write(text);  }  else  {  _writer.write(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  _writer.write(text);  }  else  {  _writer.write(text);  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
176	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  3;	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    4;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
177	[BUG]  [BUGGY]  _outputHead  =  3;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  3;	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    4;    	compilable	  [FE]  AssertionFailedError  	47	1	replace
178	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	43	None	replace
179	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	43	None	replace
180	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
181	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
182	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	51	None	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
184	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
185	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
186	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
187	[BUG]  [BUGGY]  _outputTail  =  amount;  [CE]  cannot  find  symbol  amount  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputTail  =  amount;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputTail  =  amount;	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    0;    }    	non-compiled	[CE]  cannot  find  symbol  amount	72	None	replace
188	[BUG]  [BUGGY]  _writer.writeRaw(text,  len);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  len);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
189	[BUG]  [BUGGY]  _writer.writeRaw(text,  _outputBuffer);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  _outputBuffer);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  _outputBuffer);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
190	[BUG]  [BUGGY]  _writer.writeRaw(text,  offset);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  offset);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  offset);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
191	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	49	None	replace
192	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	49	None	replace
193	[BUG]  [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	49	None	replace
194	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
195	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  5;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
197	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  6;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  7;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  4;  _outputHead  =  7;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
199	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  7;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;  _outputHead  =  7;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  4;  _outputHead  =  7;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  5;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  5;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
201	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  5;  _outputHead  =  5;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  5;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    _outputHead  =  5;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
202	[BUG]  [BUGGY]  _outputHead  =  height;  [CE]  cannot  find  symbol  height  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  height;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  height;	  _outputHead    =    qlen;    	non-compiled	[CE]  cannot  find  symbol  height	67	None	replace
203	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.writeRawLong(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
204	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  len  =  text.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  len  =  text.length();  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    int  len  =  text.length();	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	40	None	add
205	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
206	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(_outputBuffer,  0,  len);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(_outputBuffer,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(_outputBuffer,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
208	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
209	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
210	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.write(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	40	1	add
211	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	TextUtilities.writeRawLong(text,  offset);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
212	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
213	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  TextUtilities.writeRawLong(text,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	TextUtilities.writeRawLong(text,  len);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
214	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  }  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
215	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
216	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
217	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WR  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WR  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WR	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
218	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
219	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  length;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	42	None	replace
220	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
221	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;	  	compilable	  [FE]  AssertionFailedError  	20	1	add
222	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ';'  expected	20	None	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
224	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
225	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	20	None	add
226	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
227	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  	compilable	  [FE]  AssertionFailedError  	20	1	add
228	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
229	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  6;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
230	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  7;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  7;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
231	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  7;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  7;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  7;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  5;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  5;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
233	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  5;  _outputHead  =  6;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  5;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  5;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
235	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  5;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
236	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+hash,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
237	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+hash,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
238	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  cannot  find  symbol  hash  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+hash,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  cannot  find  symbol  hash	62	None	replace
239	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  4;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
240	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  4;  _outputHead  =  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  4;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
241	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  3;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
242	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  3;  _outputHead  =  4;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  3;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  5;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
244	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  5;  _outputHead  =  4;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  5;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  5;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
245	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  6;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
246	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  6;  _outputHead  =  4;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  _outputHead  =  6;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	25	1	add
247	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    3;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	48	None	replace
248	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    3;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	48	None	replace
249	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    3;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	48	None	replace
250	[BUG]  [BUGGY]  if(len  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	15	None	replace
251	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	15	None	replace
252	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	15	None	replace
253	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
254	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  3;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
255	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  5;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  5;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
256	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  5;  _outputHead  =  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  5;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  5;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
257	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
258	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  5;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
259	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  3;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  3;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
260	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  3;  _outputHead  =  3;  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  3;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  3;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
261	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    2;    _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
262	[BUG]  [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    _outputHead  =  2;	  	compilable	  [FE]  AssertionFailedError  	8	1	add
263	[BUG]  [BUGGY]  _outputHead  =  2;  int  len  =  text.length();  _outputHead  =  2;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  int  len  =  text.length();  _outputHead  =  2;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    int  len  =  text.length();  _outputHead  =  2;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	8	None	add
264	[BUG]  [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
265	[BUG]  [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  }  else  {  _outputTail  =  len;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  }  else  {  _outputTail  =  len;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    _outputHead  =  2;  }  else  {  _outputTail  =  len;	  	non-compiled	[CE]  illegal  start  of  type	8	None	add
266	[BUG]  [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  this.writer.writeRawLong(text);  [CE]  cannot  find  symbol  writer  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  _outputHead  =  2;  this.writer.writeRawLong(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    _outputHead  =  2;  this.writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  writer	8	None	add
267	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  len  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  0,  len  +  1);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  0,  len  +  1);	          _writer.writeRaw(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
268	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
269	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  offset  +=  amount;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	43	None	replace
270	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  else  {  _flushBuffer();  _outputTail  =  len;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  else  {  _flushBuffer();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  else  {  _flushBuffer();  _outputTail  =  len;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	49	None	replace
271	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  _outputTail  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  _outputTail  +  1;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
272	[BUG]  [BUGGY]  _outputHead  =  _outputTail  +  1;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  _outputTail  +  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  _outputTail  +  1;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
273	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  int  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    5;    int  _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
274	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  int  _outputHead  =  4;  _outputHead  =  5;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  int  _outputHead  =  4;  _outputHead  =  5;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    int  _outputHead  =  4;  _outputHead  =  5;	  	compilable	  [FE]  AssertionFailedError  	27	1	add
275	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
276	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
277	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  null;  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  null;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  null;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	non-compiled	[CE]  incompatible  types	71	None	replace
278	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  LAST_WRITE;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  LAST_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  LAST_WRITE;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	71	None	replace
279	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputHead);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text,  _outputHead);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRawLong(text,  _outputHead);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
280	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
281	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	72	1	replace
282	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputHead  =  0;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	72	1	replace
283	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  room)  {  _outputHead  =  0;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	72	1	replace
284	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  0;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    0;    }    	compilable	  [FE]  AssertionFailedError  	72	1	replace
285	[BUG]  [BUGGY]  _writer.write(text,  0,  amount);  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  0,  amount);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	5	None	replace
286	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
287	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  ')'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  0;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ')'  expected	61	None	replace
288	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	66	None	replace
289	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _outputHead    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
290	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  if(room  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  if(room  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  1;  if(room  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _outputHead    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
291	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	74	None	replace
292	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  _outputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	74	None	replace
293	[BUG]  [BUGGY]  if(len  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    0;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	74	None	replace
294	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
295	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
296	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	15	None	replace
297	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    4;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	47	None	replace
298	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    4;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	47	None	replace
299	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    room    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	59	None	replace
300	[BUG]  [BUGGY]  if(text!=  null)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(text!=  null)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(text!=  null)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    room    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	59	None	replace
301	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
302	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
303	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
304	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len  +  1;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
305	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  2;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
306	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  2;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  len  +  2;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
307	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  length  +  1;  }  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  length  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  length  +  1;  }	  	non-compiled	[CE]  cannot  find  symbol  length	18	None	add
308	[BUG]  [BUGGY]  int  len  =  _outputEnd.length();  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  int  len  =  _outputEnd.length();  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	int  len  =  _outputEnd.length();	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	45	None	replace
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
310	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
311	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	21	None	replace
312	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  ==  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(room  ==  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
313	[BUG]  [BUGGY]  if(room  ==  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  ==  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  ==  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	21	1	replace
314	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
315	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
316	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  }  [CE]  cannot  find  symbol  amount  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol  amount	6	None	add
317	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
318	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
319	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  length;  }  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  length;  }	  	non-compiled	[CE]  cannot  find  symbol  length	6	None	add
320	[BUG]  [BUGGY]  if(this.writer!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(this.writer!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(this.writer!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	23	None	replace
321	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	23	None	replace
322	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  room;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  room;	  _outputHead    =    qlen;    	compilable	  [FE]  AssertionFailedError  	67	1	replace
323	[BUG]  [BUGGY]  _outputHead  =  room;  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  room;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  room;	  _outputHead    =    qlen;    	compilable	  [FE]  AssertionFailedError  	67	1	replace
324	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  5;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  5;  }	  _outputHead    =    4;    _outputHead    =    5;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	28	None	replace
325	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  5;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  5;  }	  _outputHead    =    4;    _outputHead    =    5;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	28	None	replace
326	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
327	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
328	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	73	None	replace
329	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  _outputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	73	None	replace
330	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	58	None	replace
331	[BUG]  [BUGGY]  _outputHead  =  0;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  0;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  0;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	58	None	replace
332	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  Integer  len  =  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  Integer  len  =  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    Integer  len  =  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	54	None	add
333	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	54	None	add
334	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  Integer  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  Integer  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    Integer  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	54	None	add
335	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  Integer  len  =  text.getChars(0,  offset+room,  _outputBuffer,  0);  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  Integer  len  =  text.getChars(0,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    Integer  len  =  text.getChars(0,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	54	None	add
336	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  _outputHead  =  1;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	13	None	replace
337	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  _outputHead    =    1;    _outputHead    =    1;    	non-compiled	[CE]  ';'  expected	13	None	replace
338	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
339	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
340	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	20	None	add
341	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _output  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _output  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _output	  	non-compiled	[CE]  ';'  expected	20	None	add
342	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	75	None	replace
343	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
344	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  NullWriter();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  NullWriter();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  NullWriter();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
345	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableStringBuilder();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
346	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  SerializableString(text);  }	  	non-compiled	[CE]  ';'  expected	4	None	add
347	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	14	None	replace
348	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	14	None	replace
349	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
350	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
351	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
352	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+hash,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	62	None	replace
353	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+hash,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
354	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    len;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	16	None	replace
355	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	16	None	replace
356	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  else  {  _output  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  else  {  _output  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  else  {  _output	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    len;    	non-compiled	[CE]  ';'  expected	16	None	replace
357	[BUG]  [BUGGY]  _outputHead  =  2;  int  len  =  text.length();  _outputHead  =  3;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  int  len  =  text.length();  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    int  len  =  text.length();  _outputHead  =  3;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	8	None	add
358	[BUG]  [BUGGY]  _outputHead  =  2;  int  len  =  text.length();  _outputHead  =  1;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  int  len  =  text.length();  _outputHead  =  1;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    int  len  =  text.length();  _outputHead  =  1;	  	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	8	None	add
359	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  3;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  3;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  3;  }	  _outputHead    =    4;    _outputHead    =    3;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	30	None	replace
360	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  3;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  3;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  3;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  _outputHead    =    4;    _outputHead    =    3;    	non-compiled	[CE]  ';'  expected	30	None	replace
361	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  3;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  3;  }	  _outputHead    =    4;    _outputHead    =    3;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
362	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  3;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  3;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  4;  _outputHead  =  3;  }	  _outputHead    =    4;    _outputHead    =    3;    	compilable	  [FE]  AssertionFailedError  	30	1	replace
363	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  len;  _outputHead  =  len;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  len;  _outputHead  =  len;  }	  _outputHead    =    len;    _outputHead    =    len;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	35	None	replace
364	[BUG]  [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(qlen  >  room)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
365	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
366	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
367	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEn  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEn  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  _outputEn	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	68	None	replace
368	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	52	None	replace
369	[BUG]  [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  qlen  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  qlen	52	None	replace
370	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	52	None	replace
371	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
372	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  6;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
373	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  int  _outputHead  =  4;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    3;    int  _outputHead  =  4;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
374	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  int  _outputHead  =  4;  _outputHead  =  3;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  int  _outputHead  =  4;  _outputHead  =  3;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    3;    int  _outputHead  =  4;  _outputHead  =  3;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
375	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
376	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
377	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
378	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
379	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
380	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
381	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  else  {  _flushBuffer();  _outputTail  =  len;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  else  {  _flushBuffer();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  else  {  _flushBuffer();  _outputTail  =  len;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    5;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	50	None	replace
382	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
383	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
384	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	non-compiled	[CE]  ')'  expected	12	None	add
385	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  ')'  expected	12	None	add
386	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
387	[BUG]  [BUGGY]  if(qlen  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(qlen  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(qlen  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
388	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
389	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputStart;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputStart;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputStart;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
390	[BUG]  [BUGGY]  if(this.writer!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [CE]  cannot  find  symbol  writer  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(this.writer!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(this.writer!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  writer	24	None	replace
391	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	24	None	replace
392	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
393	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
394	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	39	None	replace
395	[BUG]  [BUGGY]  _writer.writeRaw(text,  _outputHead);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  _outputHead);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  _outputHead);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
396	[BUG]  [BUGGY]  _flushBuffer();  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
397	[BUG]  [BUGGY]  _flushBuffer();  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  >  room)  {  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
398	[BUG]  [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputEnd  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputEnd  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputEnd  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
399	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
400	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
401	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	56	None	replace
402	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
403	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
404	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
405	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  LAST_WRITE;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
406	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  ';'  expected	55	None	replace
407	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  int  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    6;    int  _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
408	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  int  _outputHead  =  4;  _outputHead  =  6;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  int  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    6;    int  _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
409	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  Integer  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    6;    Integer  _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
410	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  Integer  _outputHead  =  4;  _outputHead  =  6;  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  Integer  _outputHead  =  4;  _outputHead  =  6;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    6;    Integer  _outputHead  =  4;  _outputHead  =  6;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
411	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  4;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  4;  }	  _outputHead    =    4;    _outputHead    =    4;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	26	None	replace
412	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  4;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  4;  _outputHead  =  4;  }	  _outputHead    =    4;    _outputHead    =    4;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	26	None	replace
413	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  4;  }  else  {  _flushBuffer();  _outputTail  =  len;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  4;  }  else  {  _flushBuffer();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  4;  }  else  {  _flushBuffer();  _outputTail  =  len;  }	  _outputHead    =    4;    _outputHead    =    4;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	26	None	replace
414	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	17	None	replace
415	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	17	None	replace
416	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  else  {  _output  [CE]  ';'  expected  [FE]                    AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  else  {  _output  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  else  {  _output	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  ';'  expected	17	None	replace
417	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  incompatible  types  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	non-compiled	[CE]  incompatible  types	70	None	add
418	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	70	None	add
419	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  _writer.writeRawLong(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    _writer.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol	70	None	add
420	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  0)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  0)  {  if(_outputEnd  >=  SHORT_WRITE)  {  _flushBuffer();  }	          if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	76	None	replace
421	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
422	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
423	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	non-compiled	[CE]  ')'  expected	25	None	add
424	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
425	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  1;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
426	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ')'  expected	25	None	add
427	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
428	[BUG]  [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  qlen  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(qlen  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  qlen	51	None	replace
429	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
430	[BUG]  [BUGGY]  _writer.writeLong(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeLong(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeLong(text);	  _writer.write(text);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
431	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+head,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
432	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  cannot  find  symbol  head  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+head,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  cannot  find  symbol  head	63	None	replace
433	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	3	1	replace
434	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	3	1	replace
435	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	3	1	replace
436	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  AssertionFailedError  	3	1	replace
437	[BUG]  [BUGGY]  _writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  [CE]  'void'  type  not  allowed  here  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));	  _flushBuffer();    	non-compiled	[CE]  'void'  type  not  allowed  here	3	None	replace
438	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
439	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
440	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
441	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  0;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
442	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	non-compiled	[CE]  ')'  expected	34	None	add
443	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =	  	non-compiled	[CE]  ')'  expected	34	None	add
444	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    len    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	22	None	replace
445	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    len    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	22	None	replace
446	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputHead  =  SHORT_WRITE;  int  len  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    len    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	22	None	replace
447	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.writeRaw(text);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  _writer.writeRaw(text);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    _writer.writeRaw(text);	  	non-compiled	[CE]  cannot  find  symbol	40	None	add
448	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  room  =  _outputEnd;  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  int  room  =  _outputEnd;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    int  room  =  _outputEnd;	  	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	40	None	add
449	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	64	None	replace
450	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
451	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
452	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
453	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    2;    if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
454	[BUG]  [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
455	[BUG]  [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  	non-compiled	[CE]  cannot  find  symbol  length	8	None	add
456	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    2;    if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
457	[BUG]  [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	8	1	add
458	[BUG]  [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  2;  if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    2;    if(len  >  room)  {  _outputHead  =  2;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  amount	8	None	add
459	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
460	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputHead  =  0;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
461	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	compilable	  [FE]  AssertionFailedError  	61	1	replace
462	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0);    _outputHead    =    SHORT_WRITE;    }    	compilable	  [FE]  AssertionFailedError  	61	1	replace
463	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  _output  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  _output  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE;  _output	  	non-compiled	[CE]  ';'  expected	27	None	add
464	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  SHORT_WRITE	  	non-compiled	[CE]  ';'  expected	27	None	add
465	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  5;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    5;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	non-compiled	[CE]  ')'  expected	27	None	add
466	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  8;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  8;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
467	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  8;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  6;  _outputHead  =  4;  _outputHead  =  8;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    6;    _outputHead  =  4;  _outputHead  =  8;	  	compilable	  [FE]  AssertionFailedError  	31	1	add
468	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
469	[BUG]  [BUGGY]  if(len  <  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    _outputEnd;    }    	non-compiled	[CE]  ';'  expected	69	None	replace
470	[BUG]  [BUGGY]  if(_outputHead!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [CE]  incomparable  types:  int  and  <null>  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputHead!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRawLong(text);    	non-compiled	[CE]  incomparable  types:  int  and  <null>	23	None	replace
471	[BUG]  [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  writer  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputHead  >=  0)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRawLong(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  writer	23	None	replace
472	[BUG]  [BUGGY]  if(len  <  2)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  2)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  2)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	15	None	replace
473	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputTail  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
474	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }	  _outputHead    =    1;    _outputHead    =    1;    	compilable	  [FE]  AssertionFailedError  	13	1	replace
475	[BUG]  [BUGGY]  _flushBuffer();  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
476	[BUG]  [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  len)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  len)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  len)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	2	None	add
477	[BUG]  [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _flushBuffer();  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_flushBuffer();    if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	2	None	add
478	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
479	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	41	1	replace
480	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
481	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  }  else  {  _flushBuffer();  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd));    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	57	1	replace
482	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputBuffer();  offset  +=  len;  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputBuffer();  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	54	None	add
483	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	54	None	add
484	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	54	None	add
485	[BUG]  [BUGGY]  _outputHead  =  LEN;  [CE]  cannot  find  symbol  LEN  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  LEN;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  LEN;	  _outputHead    =    len;    _outputHead    =    LEn;    	non-compiled	[CE]  cannot  find  symbol  LEN	37	None	replace
486	[BUG]  [BUGGY]  _writer.writeRaw(text,  offset,  len);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  offset,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  offset,  len);	          _writer.writeRaw(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
487	[BUG]  [BUGGY]  _writer.writeRaw(text,  0,  len).return;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  0,  len).return;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  0,  len).return;	          _writer.writeRaw(text,    0,    len);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
488	[BUG]  [BUGGY]  _outputHead  =  space;  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  space;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  space;	  _outputHead    =    qlen;    	non-compiled	[CE]  cannot  find  symbol  space	67	None	replace
489	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
490	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
491	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	40	None	add
492	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	40	None	add
493	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
494	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  }	  	compilable	  [FE]  AssertionFailedError  	40	1	add
495	[BUG]  [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        if(len    >    room)    {    _outputHead    =    1;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    if(room  >  room)  {  _outputHead  =  1;  if(len  >  room)  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	non-compiled	[CE]  ';'  expected	40	None	add
496	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  else  {  _outputTail  =  len;  }  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  else  {  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  else  {  _outputTail  =  len;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	58	None	replace
497	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  else  {  _output  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  else  {  _output  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  ((  SHORT_WRITE  +  len)>  _outputEnd)?  _outputHead  :  SHORT_WRITE;  }  else  {  _output	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)?    _outputHead    :    SHORT_WRITE;    	non-compiled	[CE]  not  a  statement	58	None	replace
498	[BUG]  [BUGGY]  int  len  =  text.length()  -  room;  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  int  len  =  text.length()  -  room;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	int  len  =  text.length()  -  room;	          int    len    =    text.length();    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	45	None	replace
499	[BUG]  [BUGGY]  _writer.writeRaw(text,  null);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRaw(text,  null);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRaw(text,  null);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
500	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  else  {  writeRawLong(text);  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  5;  }  else  {  writeRawLong(text);  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    5;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	50	None	replace
501	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	16	None	replace
502	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  else  {  writeRawLong(text);  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  len;  }  else  {  writeRawLong(text);  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	16	None	replace
503	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	20	1	add
504	[BUG]  [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    SHORT_WRITE;    _outputHead  =  SHORT_WRITE;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        SHORT_WRITE;        _outputHead    =    SHORT_WRITE;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	20	1	add
505	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  safeOutputEnd)  {  int  room  =  _outputEnd;  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  int    room    =    _outputEnd;    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	73	None	replace
506	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  0;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  if(_outputTail  >>  _outputEnd)  {  _outputHead  =  0;  }	  _outputHead    =    len;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _outputHead    =    0;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
507	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  int  len  =  text.length();  _outputHead  =  1;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputHead    =    1;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	14	None	replace
508	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  len;  _outputHead  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
509	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  len;  _outputHead  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
510	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
511	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	34	1	add
512	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  SHORT_WRITE;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputEnd  =  SHORT_WRITE;  }	  	non-compiled	[CE]  ';'  expected	34	None	add
513	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	34	1	add
514	[BUG]  [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    _outputHead  =  len;  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  writeRawLong(text);  }	  	compilable	  [FE]  StackOverflowError  	34	1	add
515	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
516	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  len;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
517	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  0;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
518	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  0;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  0;  _outputHead  =  0;  }	  _outputHead    =    len;    _outputHead    =    len;    	compilable	  [FE]  AssertionFailedError  	35	1	replace
519	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
520	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
521	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  <  SHORT_WRITE)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  <  SHORT_WRITE)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room  <  SHORT_WRITE)  {  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	70	None	add
522	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
523	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room  >  room)  {  _outputEnd  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
524	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
525	[BUG]  [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    len;    if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  if(room  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        len;        if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    if(room  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	70	1	add
526	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
527	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  3;  _outputHead  =  4;  _outputHead  =  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    3;    _outputHead  =  4;  _outputHead  =  4;	  	compilable	  [FE]  AssertionFailedError  	29	1	add
528	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _flushBuffer();  }  else  {  writeRawLong(text);  }	  _flushBuffer();    	compilable	  [FE]  StackOverflowError  	3	1	replace
529	[BUG]  [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _flushBuffer();  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _flushBuffer();  }  else  {  writeRawLong(text);  }	  _flushBuffer();    	compilable	  [FE]  StackOverflowError  	3	1	replace
530	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputEnd    <    SHORT_WRITE)    {    _outputHead    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
531	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text.substring(0,  len));  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text.substring(0,  len));	  _writer.write(text);    	compilable	  [FE]  AssertionFailedError  	7	1	replace
532	[BUG]  [BUGGY]  _writer.write(text.substring(0,  len));  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text.substring(0,  len));  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text.substring(0,  len));	  _writer.write(text);    	compilable	  [FE]  AssertionFailedError  	7	1	replace
533	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
534	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  }  else  {  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
535	[BUG]  [BUGGY]  if(len  <  =  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
536	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(room  >=  0)  {  _outputHead  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
537	[BUG]  [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  >=  0)  {  _outputHead  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  >=  0)  {  _outputHead  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    len;    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
538	[BUG]  [BUGGY]  if(len  <  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  room)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	53	None	replace
539	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
540	[BUG]  [BUGGY]  if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  len;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	compilable	  [FE]  AssertionFailedError  	71	1	replace
541	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  LAST_WRITE;  }  [CE]  cannot  find  symbol  LAST_WRITE  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  LAST_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputTail  =  LAST_WRITE;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  LAST_WRITE	71	None	replace
542	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  3;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    3;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	48	None	replace
543	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
544	[BUG]  [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    1;    _outputHead  =  1;  if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        1;        _outputHead    =    1;    if(len  >  room)  {  _outputHead  =  1;  _outputHead  =  1;  }	  	compilable	  [FE]  AssertionFailedError  	12	1	add
545	[BUG]  [BUGGY]  if(_outputTail  >  0.0)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  0.0)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  0.0)  {  _outputHead  =  SHORT_WRITE;  int  room  =  text.length();  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    int    room    =    text.length();    _outputHead    =    SHORT_WRITE;    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	59	None	replace
546	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead  =  len  +  4;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
547	[BUG]  [BUGGY]  _outputHead  =  len  +  4;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  4;  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead  =  len  +  4;	  _outputHead    =    len    +    1;    	compilable	  [FE]  AssertionFailedError  	19	1	replace
548	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  room)  {  _outputHead  =  1;  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  room)  {  _outputHead  =  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  if(_outputTail  >=  room)  {  _outputHead  =  1;  }	  _outputHead    =    1;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    1;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
549	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  2;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    2;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	49	None	replace
550	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  _outputTail  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  _outputTail  =  len  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
551	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  _outputTail  =  len  +  1;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  _outputTail  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  >  room)  {  _outputHead  =  len  +  1;  }  else  {  _outputTail  =  len  +  1;  }	  	compilable	  [FE]  AssertionFailedError  	18	1	add
552	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  len  +  1;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  <  SHORT_WRITE)  {  if(_outputTail  >  room)  {  _outputHead  =  len  +  1;  }	  	non-compiled	[CE]  ';'  expected	18	None	add
553	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len  +  1;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len  +  1;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputHead  =  len  +  1;  }	  	non-compiled	[CE]  ';'  expected	18	None	add
554	[BUG]  [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead  =  len  +  1;  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead    =    len    +    1;    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	18	None	add
555	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+room,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
556	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
557	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  len;  _outputHead  =  len;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    _outputHead    =    len);    	compilable	  [FE]  AssertionFailedError  	38	1	replace
558	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  *  SHORT_WRITE);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text,  0,  len  *  SHORT_WRITE);	  _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	replace
559	[BUG]  [BUGGY]  _writer.write(text,  0,  len  *  SHORT_WRITE);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  *  SHORT_WRITE);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  0,  len  *  SHORT_WRITE);	  _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	5	1	replace
560	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1,  _outputBuffer.length);  [CE]  no  suitable  method  found  for  write(String,int,int,int)  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len  +  1,  _outputBuffer.length);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,  0,  len  +  1,  _outputBuffer.length);	  _writer.write(text,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,int)	5	None	replace
561	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [CE]  cannot  find  symbol  writer  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputTail  >  room)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  writer	24	None	replace
562	[BUG]  [BUGGY]  if(text!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [CE]  cannot  find  symbol  writer  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(text!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(text!=  null)  {  _outputHead  =  SHORT_WRITE;  _outputHead  =  SHORT_WRITE;  this.writer.writeRaw(text);  }	  _outputHead    =    SHORT_WRITE;    _outputHead    =    SHORT_WRITE;    this.writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol  writer	24	None	replace
563	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  cannot  find  symbol  hash  [FE]            AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+hash,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  cannot  find  symbol  hash	62	None	replace
564	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+hash,  _outputBuffer,  0));  _outputHead  =  SHORT	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+hash,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
565	[BUG]  [BUGGY]  _writer.writeRawLong(text,  0,  len);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.writeRawLong(text,  0,  len);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.writeRawLong(text,  0,  len);	  _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
566	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  for(int  i  =  0;  i  <  len;  ++i)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	6	None	add
567	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
568	[BUG]  [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text);  if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text);    if(text!=  null)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  len;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
569	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  TextUtilities.writeRawLong(text,  _outputHead);  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	TextUtilities.writeRawLong(text,  _outputHead);	          TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
570	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
571	[BUG]  [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
572	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  _flushBuffer();  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
573	[BUG]  [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  _flushBuffer();  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
574	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text);  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
575	[BUG]  [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  5;  }  else  {  writeRawLong(text);  }	  _outputHead    =    4;    _outputHead    =    5;    	compilable	  [FE]  AssertionFailedError  	28	1	replace
576	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
577	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  _outputEnd;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  _outputEnd;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  _outputEnd;  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
578	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  _outputEnd;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  >  room)  {  _outputHead  =  _outputEnd;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
579	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  _outputEnd;  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  _outputEnd;  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  _outputEnd;  }  else  {  _flushBuffer();  }	  _outputHead    =    len;    if(len    <    SHORT_WRITE)    {    if(_outputTail    >    room)    {    _outputHead    =    _outputEnd;    }    	compilable	  [FE]  AssertionFailedError  	68	1	replace
580	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
581	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  ';'  expected	4	None	add
582	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(len  >  room)  {  if(_outputEnd  <  SHORT_WRITE)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
583	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_writer.write(text,    0,    len);    if(_writer!=  null)  {  if(_writer!=  null)  {  _writer  =  new  StringBuffer();  }	  	non-compiled	[CE]  ';'  expected	4	None	add
584	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  writeRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  =  len;  }	  	non-compiled	[CE]  ')'  expected	25	None	add
585	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
586	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
587	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
588	[BUG]  [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  _outputHead    =    4;    _outputHead  =  4;  if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	_outputHead        =        4;        _outputHead    =    4;    if(len  >  room)  {  _outputHead  =  4;  _outputHead  =  4;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  offset  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	25	1	add
589	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
590	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputEnd  =  SHORT_WRITE;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputEnd  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  SHORT_WRITE;  }  else  {  _outputEnd  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    ((    SHORT_WRITE    +    len)>    _outputEnd)    {    _outputHead    =    SHORT_WRITE;    	compilable	  [FE]  AssertionFailedError  	56	1	replace
591	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  4;  int  len  =  text.length();  _outputHead  =  4;  }	  _outputHead    =    4;    int    len    =    text.length();    _outputHead    =    4;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	47	None	replace
592	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputHead  >=  0)  {  _outputHead  =  0;  _outputHead  =  0;  }	  _outputHead    =    4;    _outputHead    =    4;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
593	[BUG]  [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  0;  _outputHead  =  0;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  0;  _outputHead  =  0;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputHead  >=  0)  {  _outputHead  =  0;  _outputHead  =  0;  }	  _outputHead    =    4;    _outputHead    =    4;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
594	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	add	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  4;  }	  _outputHead    =    4;    _outputHead    =    4;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
595	[BUG]  [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  4;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  4;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(_outputHead  >=  0)  {  _outputHead  =  4;  _outputHead  =  4;  }	  _outputHead    =    4;    _outputHead    =    4;    	compilable	  [FE]  AssertionFailedError  	26	1	replace
596	[BUG]  [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  >  room)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	17	None	replace
597	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [CE]  variable  len  is  already  defined  in  method  writeRawLong(String)  [FE]                  AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  SHORT_WRITE)  {  _outputHead  =  1;  int  len  =  text.length();  _outputTail  =  len;  }	  _outputHead    =    1;    int    len    =    text.length();    _outputTail    =    len;    	non-compiled	[CE]  variable  len  is  already  defined  in  method  writeRawLong(String)	17	None	replace
598	[BUG]  [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  0)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+head,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
599	[BUG]  [BUGGY]  if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [CE]  cannot  find  symbol  head  [FE]                AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  room)  {  _outputHead  =  SHORT_WRITE;  }  else  {  writeRawLong(text.getChars(offset,  offset+head,  _outputBuffer,  0));  _outputHead  =  SHORT_WRITE;  }	  _outputHead    =    SHORT_WRITE;    if(len    >    room)    {    _outputHead    =    SHORT_WRITE;    }    else    {    writeRawLong(text.getChars(offset,    offset+head,    _outputBuffer,    0));    _outputHead    =    SHORT_WRITE;    }    	non-compiled	[CE]  cannot  find  symbol  head	63	None	replace
600	[BUG]  [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(len  <  =  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  _outputHead    =    1;    if(len    >    room)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
601	[BUG]  [BUGGY]  if(room  <  len)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]        AssertionFailedError      [CONTEXT]      int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }  text.getChars(offset,  offset+len,  _outputBuffer,  0);      [BUGGY]  if(room  <  len)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }  [BUGGY]      _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	495	495	1	replace	if(room  <  len)  {  _outputHead  =  len;  }  else  {  _outputTail  =  SHORT_WRITE;  _outputEnd  =  SHORT_WRITE;  _flushBuffer();  offset  +=  length;  }	  _outputHead    =    len;    if(len    >    room)    {    _outputHead    =    len;    }    else    {    _outputTail    =    SHORT_WRITE;    _outputEnd    =    SHORT_WRITE;    _flushBuffer();    offset    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	51	None	replace
