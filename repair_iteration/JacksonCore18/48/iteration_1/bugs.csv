bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
2	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
3	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
4	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
6	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]    [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	  	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
8	[BUG]  [BUGGY]    [FE]  ComparisonFailure  [FE]          AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]    [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	  	++_outputTail;  	compilable	  [FE]  ComparisonFailure  	95	5	replace
9	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  _outputTail  =  System.currentTimeMillis();  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis();	++_outputTail;  	non-compiled	[CE]  possible  loss  of  precision	95	None	replace
10	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    AssertionFailedError  [CONTEXT]  }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  }	++_outputTail;  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	95	None	replace
