bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
2	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
3	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }	  	non-compiled	[CE]  incompatible  types	1	None	add
4	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	1	5	add
5	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	1	5	add
6	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
7	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
8	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
9	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTa  [CE]  ']'  expected  [FE]          AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTa  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTa	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  ']'  expected	10	None	replace
10	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  [CE]  not  a  statement  [FE]            AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  not  a  statement	10	None	replace
11	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputT  [CE]  ']'  expected  [FE]              AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputT  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputT	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  ']'  expected	10	None	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  _outputBuffer[_outputTail];	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	compilable	  [FE]  ComparisonFailure  	4	5	replace
13	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  _outputBuffer[_outputTail];	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	compilable	  [FE]  ComparisonFailure  	4	5	replace
14	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	4	None	replace
15	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _flushBuffer();  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	compilable	  [FE]  ComparisonFailure  	4	5	replace
16	[BUG]  [BUGGY]  _flushBuffer();  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _flushBuffer();  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	compilable	  [FE]  ComparisonFailure  	4	5	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ComparisonFailure  	8	5	replace
18	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	      	compilable	  [FE]  ComparisonFailure  	8	5	replace
19	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]!=  null)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]!=  null)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]!=  null)  {  _flushBuffer();  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	      	compilable	  [FE]  ComparisonFailure  	8	5	replace
21	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	      	compilable	  [FE]  ComparisonFailure  	8	5	replace
22	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	      	compilable	  [FE]  ComparisonFailure  	8	5	replace
23	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	      	compilable	  [FE]  ComparisonFailure  	8	5	replace
24	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  ++_outputTail;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  ++_outputTail;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
25	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  ++_outputTail;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  ++_outputTail;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  AssertionFailedError  	2	1	replace
26	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  c;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  c;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	2	5	replace
27	[BUG]  [BUGGY]  _outputTail  =  c;  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  c;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  c;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	2	5	replace
28	[BUG]  [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]      if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	        if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	7	None	add
29	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
30	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
32	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
33	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	non-compiled	[CE]  incompatible  types	3	None	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	3	5	add
35	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	3	5	add
36	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
37	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	3	1	add
38	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  unexpected  type  [FE]            ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  	non-compiled	[CE]  unexpected  type	3	None	add
39	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	5	5	add
40	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	5	5	add
41	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	5	None	add
42	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	5	5	add
43	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	5	5	add
44	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	5	5	add
45	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	5	5	add
46	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  +  1;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  System.currentTimeMillis()  +  1;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis()  +  1;	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
47	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	10	None	replace
48	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	10	None	replace
49	[BUG]  [BUGGY]  _outputTail  =  null;  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  null;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  null;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	non-compiled	[CE]  incompatible  types	2	None	replace
50	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	6	None	replace
51	[BUG]  [BUGGY]      if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]      if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	        if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
52	[BUG]  [BUGGY]      if(typeMsg  ==  null)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]      if(typeMsg  ==  null)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	        if(typeMsg  ==  null)  {  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
53	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  _outputEnd;  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  _outputEnd;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis()  -  _outputEnd;	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
54	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  null;  }  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  null;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  null;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  incompatible  types	4	None	replace
55	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]      if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]      if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	        if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
57	[BUG]  [BUGGY]      if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]      if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	        if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
58	[BUG]  [BUGGY]      if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]      if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	        if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
59	[BUG]  [BUGGY]      if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]      if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	        if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
60	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
61	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputTail  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }	  _outputTail    =    System.currentTimeMillis();    	non-compiled	[CE]  possible  loss  of  precision	9	None	replace
62	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  _outputEnd;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  _outputEnd;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	6	5	replace
63	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  _outputTail  =  _outputEnd;  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  _outputEnd;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	6	5	replace
64	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	6	5	replace
65	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]    }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;    [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]    }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	6	5	replace
