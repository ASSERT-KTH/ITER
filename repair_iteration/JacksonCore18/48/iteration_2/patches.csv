bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer[_outputTail]  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputBuffer[_outputTail]  =  c;	          if(typeMsg    ==    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	51	5	replace
2	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  c;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer[_outputTail]  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputBuffer[_outputTail]  =  c;	          if(typeMsg    ==    null)    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	51	5	replace
3	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output	  	non-compiled	[CE]  ')'  expected	6	None	add
4	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output	  	non-compiled	[CE]  ')'  expected	6	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
6	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
7	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn	  	non-compiled	[CE]  ')'  expected	6	None	add
8	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output	  	non-compiled	[CE]  ';'  expected	6	None	add
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  _outputTail    =    null;    	compilable	  [FE]  ComparisonFailure  	49	5	replace
10	[BUG]  [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  JsonWriteContext.STATUS_OK_AS_IS;	  _outputTail    =    null;    	compilable	  [FE]  ComparisonFailure  	49	5	replace
11	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IF;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  JsonWriteContext.STATUS_OK_AS_IF;	  _outputTail    =    null;    	compilable	  [FE]  ComparisonFailure  	49	5	replace
12	[BUG]  [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IF;  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  JsonWriteContext.STATUS_OK_AS_IF;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  JsonWriteContext.STATUS_OK_AS_IF;	  _outputTail    =    null;    	compilable	  [FE]  ComparisonFailure  	49	5	replace
13	[BUG]  [BUGGY]  _outputTail  =  typeMsg;  [CE]  incompatible  types  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  typeMsg;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  typeMsg;	  _outputTail    =    null;    	non-compiled	[CE]  incompatible  types	49	None	replace
14	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
15	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  ||(_outputTail    >=    _outputEnd    &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
16	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;	  ||(_outputTail    >=    _outputEnd    &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
17	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	compilable	  [FE]  ComparisonFailure  	32	5	replace
18	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	compilable	  [FE]  ComparisonFailure  	32	5	replace
19	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&!_flushBuffer()))  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
20	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
21	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
22	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
23	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  _outputTail  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    _outputTail  =  c;	  	compilable	  [FE]  ComparisonFailure  	26	5	add
24	[BUG]  [BUGGY]  _outputTail  =  c;  _outputTail  =  c;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  _outputTail  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    _outputTail  =  c;	  	compilable	  [FE]  ComparisonFailure  	26	5	add
25	[BUG]  [BUGGY]  _outputTail  =  c;  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _outputTail  =  c;  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _outputTail  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _outputTail  =  c;	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
26	[BUG]  [BUGGY]  _outputTail  =  c;  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  c))  {  _outputTail  =  c;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  c))  {  _outputTail  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  c))  {  _outputTail  =  c;	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
27	[BUG]  [BUGGY]  _outputTail  =  c;  _outputTail  =  c;  case  JsonWriteContext.STATUS_OK_AS_IS:  _outputBuffer[_outputTail]  =  null;  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  _outputTail  =  c;  case  JsonWriteContext.STATUS_OK_AS_IS:  _outputBuffer[_outputTail]  =  null;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    _outputTail  =  c;  case  JsonWriteContext.STATUS_OK_AS_IS:  _outputBuffer[_outputTail]  =  null;	  	non-compiled	[CE]  orphaned  case	26	None	add
28	[BUG]  [BUGGY]  _outputTail  =  c;  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _outputTail  =  c;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _outputTail  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _outputTail  =  c;  }	  	non-compiled	[CE]  illegal  start  of  expression	26	None	add
29	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
30	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
32	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
33	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	39	None	add
34	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
35	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
36	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!c.isEmpty()))  {  ++_outputTail;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!c.isEmpty()))  {  ++_outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&!c.isEmpty()))  {  ++_outputTail;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTa    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]                AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail);	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTa    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	9	None	replace
38	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
39	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
40	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	non-compiled	[CE]  incompatible  types	34	None	add
41	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
42	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
43	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
44	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
45	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  _outputTail;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	3	5	replace
46	[BUG]  [BUGGY]  _outputTail  =  _outputTail;  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  _outputTail;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	3	5	replace
47	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputHead;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  _outputHead;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	3	5	replace
48	[BUG]  [BUGGY]  _outputTail  =  _outputHead;  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputHead;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  _outputHead;	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	3	5	replace
49	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  /  _outputEnd;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.currentTimeMillis()  /  _outputEnd;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis()  /  _outputEnd;	  _outputTail    =    System.currentTimeMillis()    -    _outputEnd;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
50	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  _outputEnd  +  1;  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  _outputEnd  +  1;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis()  -  _outputEnd  +  1;	  _outputTail    =    System.currentTimeMillis()    -    _outputEnd;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
51	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	22	5	add
52	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	22	5	add
53	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	22	None	add
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	22	5	add
55	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	22	5	add
56	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	22	5	add
57	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	22	5	add
58	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	compilable	  [FE]  ComparisonFailure  	60	5	replace
60	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	compilable	  [FE]  ComparisonFailure  	60	5	replace
61	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis();  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
62	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  JsonWriteContext.STATUS_OK_AS_IS);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  JsonWriteContext.STATUS_OK_AS_IS);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  JsonWriteContext.STATUS_OK_AS_IS);	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
63	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  incompatible  types	61	None	replace
64	[BUG]  [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||  _outputTail  >=  _outputEnd)  {  _outputBuffer  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||  _outputTail  >=  _outputEnd)  {  _outputBuffer  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
65	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
66	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
68	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
70	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
71	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	42	None	add
72	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output	  	non-compiled	[CE]  ')'  expected	4	None	add
73	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _output  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _output	  	non-compiled	[CE]  ')'  expected	4	None	add
74	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
75	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	4	5	add
76	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _output  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _output	  	non-compiled	[CE]  ')'  expected	4	None	add
77	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output	  	non-compiled	[CE]  ';'  expected	4	None	add
78	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  0;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  0;	  _outputTail    =    _outputEnd;    	compilable	  [FE]  ComparisonFailure  	63	5	replace
79	[BUG]  [BUGGY]  _outputTail  =  0;  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  0;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  0;	  _outputTail    =    _outputEnd;    	compilable	  [FE]  ComparisonFailure  	63	5	replace
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _flushBuffer();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();    _flushBuffer();	  	compilable	  [FE]  ComparisonFailure  	15	5	add
81	[BUG]  [BUGGY]  _flushBuffer();  _flushBuffer();  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _flushBuffer();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _flushBuffer();	  	compilable	  [FE]  ComparisonFailure  	15	5	add
82	[BUG]  [BUGGY]  _flushBuffer();  _outputBuffer();  [CE]  cannot  find  symbol  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _outputBuffer();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _outputBuffer();	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
83	[BUG]  [BUGGY]  _flushBuffer();  _outputTail  =  System.currentTimeMillis();  [CE]  possible  loss  of  precision  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _outputTail  =  System.currentTimeMillis();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _outputTail  =  System.currentTimeMillis();	  	non-compiled	[CE]  possible  loss  of  precision	15	None	add
84	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _outputTail  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();    _outputTail  =  c;	  	compilable	  [FE]  ComparisonFailure  	15	5	add
85	[BUG]  [BUGGY]  _flushBuffer();  _outputTail  =  c;  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _outputTail  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _outputTail  =  c;	  	compilable	  [FE]  ComparisonFailure  	15	5	add
86	[BUG]  [BUGGY]  _flushBuffer();  _outputTail  =  getOutputValue();  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _outputTail  =  getOutputValue();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _outputTail  =  getOutputValue();	  	non-compiled	[CE]  cannot  find  symbol	15	None	add
87	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _output  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _output	  	non-compiled	[CE]  ')'  expected	20	None	add
88	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTa  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTa  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTa	  	non-compiled	[CE]  ')'  expected	20	None	add
89	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
90	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
91	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputT  [CE]  ')'  expected  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputT  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputT	  	non-compiled	[CE]  ')'  expected	20	None	add
92	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _output  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _output	  	non-compiled	[CE]  ')'  expected	20	None	add
93	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  _outputTail  =  ++_outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    ++_outputTail;    _outputTail  =  ++_outputTail;	  	compilable	  [FE]  ComparisonFailure  	24	5	add
94	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  _outputTail  =  ++_outputTail;  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  _outputTail  =  ++_outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    _outputTail  =  ++_outputTail;	  	compilable	  [FE]  ComparisonFailure  	24	5	add
95	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  _outputTail  =  ++_outputTail;  }  [CE]  illegal  start  of  type  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  _outputTail  =  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    _outputTail  =  ++_outputTail;  }	  	non-compiled	[CE]  illegal  start  of  type	24	None	add
96	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  ||  _outputTail  >=  ++_outputTail;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  ||  _outputTail  >=  ++_outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    ||  _outputTail  >=  ++_outputTail;	  	non-compiled	[CE]  illegal  start  of  expression	24	None	add
97	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  _outputTail  =  ++_outputTail);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  _outputTail  =  ++_outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    _outputTail  =  ++_outputTail);	  	non-compiled	[CE]  ';'  expected	24	None	add
98	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
99	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
100	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	non-compiled	[CE]  incompatible  types	31	None	add
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
102	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
103	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	31	5	add
104	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	31	5	add
105	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(char[],int)  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(_outputBuffer,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(_outputBuffer,  _outputTail);	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	non-compiled	[CE]  no  suitable  method  found  for  write(char[],int)	28	None	replace
106	[BUG]  [BUGGY]  _writer.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_writer.write(_outputBuffer,  _outputTail,  _outputTail);	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	compilable	  [FE]  ComparisonFailure  	28	5	replace
108	[BUG]  [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputTail);  [FE]  ComparisonFailure  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(_outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(_outputBuffer,  _outputTail,  _outputTail);	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	compilable	  [FE]  ComparisonFailure  	28	5	replace
109	[BUG]  [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(char,char[],int)  [FE]              ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(c,  _outputBuffer,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(c,  _outputBuffer,  _outputTail);	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	non-compiled	[CE]  no  suitable  method  found  for  write(char,char[],int)	28	None	replace
110	[BUG]  [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  unclosed  character  literal  [FE]              ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(c    ==    'n'    ||    c    ==    'r')    {    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  unclosed  character  literal	59	None	replace
111	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  unexpected  type  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  unexpected  type	29	None	replace
112	[BUG]  [BUGGY]  _outputTail  =  i;  [CE]  cannot  find  symbol  i  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  i;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  i;	  _outputTail    =    _outputBuffer[_outputTail];    	non-compiled	[CE]  cannot  find  symbol  i	13	None	replace
113	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
114	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
115	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	64	None	add
116	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c!=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c!=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
117	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c!=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c!=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c!=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
118	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c!=  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c  ==  'n'  ||  c!=  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
119	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c!=  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  ==  'n'  ||  c!=  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c  ==  'n'  ||  c!=  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
120	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  _outputTail  =  _outputEnd;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    _outputEnd;    _outputTail  =  _outputEnd;	  	compilable	  [FE]  IndexOutOfBoundsException  	62	5	add
121	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  _outputTail  =  _outputEnd;  [FE]  IndexOutOfBoundsException  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  _outputTail  =  _outputEnd;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    _outputTail  =  _outputEnd;	  	compilable	  [FE]  IndexOutOfBoundsException  	62	5	add
122	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  _outputTail  =  _outputStart;  [CE]  cannot  find  symbol  _outputStart  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  _outputTail  =  _outputStart;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    _outputTail  =  _outputStart;	  	non-compiled	[CE]  cannot  find  symbol  _outputStart	62	None	add
123	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  ||  _outputTail  >=  _outputEnd;  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  ||  _outputTail  >=  _outputEnd;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    ||  _outputTail  >=  _outputEnd;	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
124	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  _outputTail  =  _outputEnd;  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  _outputTail  =  _outputEnd;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    _outputTail  =  _outputEnd;  }	  	non-compiled	[CE]  illegal  start  of  type	62	None	add
125	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _output	  	non-compiled	[CE]  ')'  expected	1	None	add
126	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_output	  	non-compiled	[CE]  ';'  expected	1	None	add
127	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn	  	non-compiled	[CE]  ')'  expected	1	None	add
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
129	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
130	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _output  [CE]  ')'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >>  _output	  	non-compiled	[CE]  ')'  expected	1	None	add
131	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	          if(c    ==    'n'    ||    c    ==    'r')    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
132	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  _outputTail  =  _outputBuffer[_outputTail];  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    _outputBuffer[_outputTail];    _outputTail  =  _outputBuffer[_outputTail];	  	compilable	  [FE]  ComparisonFailure  	12	5	add
133	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  _outputTail  =  _outputBuffer[_outputTail];  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  _outputTail  =  _outputBuffer[_outputTail];  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    _outputTail  =  _outputBuffer[_outputTail];	  	compilable	  [FE]  ComparisonFailure  	12	5	add
134	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  int  _outputTail  =  _outputBuffer[_outputTail];  [CE]  variable  _outputTail  might  not  have  been  initialized  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  int  _outputTail  =  _outputBuffer[_outputTail];  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    int  _outputTail  =  _outputBuffer[_outputTail];	  	non-compiled	[CE]  variable  _outputTail  might  not  have  been  initialized	12	None	add
135	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  _outputTail  =  _outputBuffer[_outputTail].trim();  [CE]  char  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  _outputTail  =  _outputBuffer[_outputTail].trim();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    _outputTail  =  _outputBuffer[_outputTail].trim();	  	non-compiled	[CE]  char  cannot  be  dereferenced	12	None	add
136	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  _outputBuffer  =  _outputBuffer[_outputTail];  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  _outputBuffer  =  _outputBuffer[_outputTail];  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    _outputBuffer  =  _outputBuffer[_outputTail];	  	non-compiled	[CE]  incompatible  types	12	None	add
137	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
138	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(typeMsg  ==  null)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
139	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
140	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	          if(c!=    'n'    ||    c    ==    'r')    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
141	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(_outputBuffer,  0,  _outputTail,  typeMsg);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(_outputBuffer,  0,  _outputTail,  typeMsg);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(_outputBuffer,  0,  _outputTail,  typeMsg);	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	47	None	replace
142	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  c);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  c);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  c);	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    	non-compiled	[CE]  incompatible  types	47	None	replace
143	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
144	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
145	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
146	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
147	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	non-compiled	[CE]  incompatible  types	36	None	add
148	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	36	5	add
149	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	36	5	add
150	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	48	None	replace
151	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputEnd);  _outputBuffer[_outputTail]  =  c;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputEnd);  _outputBuffer[_outputTail]  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputEnd);  _outputBuffer[_outputTail]  =  c;	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    	non-compiled	[CE]  incompatible  types	48	None	replace
152	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  c);  _outputBuffer[_outputTail]  =  c;  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  c);  _outputBuffer[_outputTail]  =  c;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  c);  _outputBuffer[_outputTail]  =  c;	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    c;    	non-compiled	[CE]  incompatible  types	48	None	replace
153	[BUG]  [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(type  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
154	[BUG]  [BUGGY]  _outputTail  =  ++_outputBuffer;  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputBuffer;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  ++_outputBuffer;	  _outputTail    =    ++_outputTail;    	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	25	None	replace
155	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputHead;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  ++_outputHead;	  _outputTail    =    ++_outputTail;    	compilable	  [FE]  ComparisonFailure  	25	5	replace
156	[BUG]  [BUGGY]  _outputTail  =  ++_outputHead;  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputHead;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  ++_outputHead;	  _outputTail    =    ++_outputTail;    	compilable	  [FE]  ComparisonFailure  	25	5	replace
157	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputEnd;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  ++_outputEnd;	  _outputTail    =    ++_outputTail;    	compilable	  [FE]  IndexOutOfBoundsException  	25	5	replace
158	[BUG]  [BUGGY]  _outputTail  =  ++_outputEnd;  [FE]  IndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputEnd;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  ++_outputEnd;	  _outputTail    =    ++_outputTail;    	compilable	  [FE]  IndexOutOfBoundsException  	25	5	replace
159	[BUG]  [BUGGY]  _outputTail  =  ++_outputBuffer.length;  [CE]  cannot  assign  a  value  to  final  variable  length  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputBuffer.length;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  ++_outputBuffer.length;	  _outputTail    =    ++_outputTail;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  length	25	None	replace
160	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
161	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
162	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
163	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
164	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	44	None	add
165	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
166	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
167	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
168	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
169	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  incompatible  types	17	None	add
170	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	17	5	add
171	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	17	5	add
172	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
173	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  AssertionFailedError  	17	1	add
174	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  null;  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer[_outputTail]  =  null;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputBuffer[_outputTail]  =  null;	  if(_outputTail    >=    _outputEnd)    {    if(_outputBuffer[_outputTail]!=    null)    {    _flushBuffer();    }    	non-compiled	[CE]  incompatible  types	19	None	replace
175	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    	compilable	  [FE]  ComparisonFailure  	21	5	replace
176	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    	compilable	  [FE]  ComparisonFailure  	21	5	replace
177	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTa  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTa  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTa	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
178	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputT  [CE]  ')'  expected  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputT  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputT	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
179	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
180	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
181	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _output  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _output	  _flushBuffer();    	non-compiled	[CE]  not  a  statement	16	None	replace
182	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _out  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _out  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _out	  	non-compiled	[CE]  ')'  expected	6	None	add
183	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  	  	non-compiled	[CE]  ')'  expected	6	None	add
184	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
185	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
186	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
187	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
188	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
189	[BUG]  [BUGGY]  if(c!=  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
190	[BUG]  [BUGGY]  if(c!=  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
191	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output	  	non-compiled	[CE]  ')'  expected	4	None	add
192	[BUG]  [BUGGY]  if(c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  unclosed  character  literal  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
193	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
194	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
195	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	44	None	add
196	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail	  	non-compiled	[CE]  ')'  expected	20	None	add
197	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);	  	non-compiled	[CE]  illegal  start  of  expression	20	None	add
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
199	[BUG]  [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
200	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
201	[BUG]  [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
202	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputTail  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputTail  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
203	[BUG]  [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputTail  =  c;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputTail  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(_outputTail  >=  c)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  _outputTail  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
204	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
205	[BUG]  [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputTail  =  SHORT_WRITE;  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
206	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
207	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead!=  _outputEnd))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd)&&(_outputHead!=  _outputEnd))  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd)&&(_outputHead!=  _outputEnd))  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
208	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  [CE]  possible  loss  of  precision  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }	  	non-compiled	[CE]  possible  loss  of  precision	62	None	add
209	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  else  {  _flushBuffer();  }  [CE]  possible  loss  of  precision  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  possible  loss  of  precision	62	None	add
210	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    _outputEnd;    if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	62	5	add
211	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  [FE]  IndexOutOfBoundsException  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }	  	compilable	  [FE]  IndexOutOfBoundsException  	62	5	add
212	[BUG]  [BUGGY]  [FE]  IndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    _outputEnd;    if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	62	5	add
213	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  else  {  _flushBuffer();  }  [FE]  IndexOutOfBoundsException  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    if(_outputTail  >=  _outputEnd)  {  _outputTail  =  _outputEnd;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  IndexOutOfBoundsException  	62	5	add
214	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	15	5	add
215	[BUG]  [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	15	5	add
216	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	15	5	add
217	[BUG]  [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	15	5	add
218	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }	  	compilable	  [FE]  ArrayStoreException  	15	5	add
219	[BUG]  [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }  [FE]  ArrayStoreException  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }	  	compilable	  [FE]  ArrayStoreException  	15	5	add
220	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }	  	compilable	  [FE]  ArrayStoreException  	15	5	add
221	[BUG]  [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }  [FE]  ArrayStoreException  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(c,  0,  _outputBuffer,  _outputTail,  _outputTail);  _flushBuffer();  }	  	compilable	  [FE]  ArrayStoreException  	15	5	add
222	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTa    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	9	None	replace
223	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  _outputHead;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.currentTimeMillis()  -  _outputHead;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis()  -  _outputHead;	  _outputTail    =    System.currentTimeMillis()    -    _outputEnd;    	non-compiled	[CE]  possible  loss  of  precision	53	None	replace
224	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  <  _output  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  <  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  <  _output	  	non-compiled	[CE]  ')'  expected	1	None	add
225	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _output	  	non-compiled	[CE]  ')'  expected	1	None	add
226	[BUG]  [BUGGY]  if(_outputTaflint  ==  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputT  [CE]  ']'  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTaflint  ==  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputT  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTaflint  ==  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[_outputT	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputT    	non-compiled	[CE]  ']'  expected	11	None	replace
227	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'e'  ||  c  ==  'E')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(c    ==    'n'    ||    c    ==    'r')    {    if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
228	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputTail);	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    	non-compiled	[CE]  incompatible  types	47	None	replace
229	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  =  _outputBuffer[_outputT  [CE]  ']'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  =  _outputBuffer[_outputT  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  =  _outputBuffer[_outputT	  	non-compiled	[CE]  ']'  expected	12	None	add
230	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  	compilable	  [FE]  ComparisonFailure  	12	5	add
231	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  }	  	compilable	  [FE]  ComparisonFailure  	12	5	add
232	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputTail  =  _outputBuffer[_outputTail];  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputTail  =  _outputBuffer[_outputTail];  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  _outputTail  =  _outputBuffer[_outputTail];  }	  	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	12	None	add
233	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  =  _outputBuffer[_outputTa  [CE]  ']'  expected  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  =  _outputBuffer[_outputTa  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail);  _outputTail  =  _outputBuffer[_outputTa	  	non-compiled	[CE]  ']'  expected	12	None	add
234	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	50	None	replace
235	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputTail  =  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputTail  =  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	24	5	add
236	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputTail  =  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputTail  =  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputTail  =  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	24	5	add
237	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  ((  _outputTail  +  3)  >=  _outputEnd)?  ++_outputTail  :  _outputBuffer[_outputTail  +  1]);  [CE]  not  a  statement  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  ((  _outputTail  +  3)  >=  _outputEnd)?  ++_outputTail  :  _outputBuffer[_outputTail  +  1]);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    ((  _outputTail  +  3)  >=  _outputEnd)?  ++_outputTail  :  _outputBuffer[_outputTail  +  1]);	  	non-compiled	[CE]  not  a  statement	24	None	add
238	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _outputTail  =  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	24	5	add
239	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputTail  =  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _outputTail  =  ++_outputTail;  }	  	compilable	  [FE]  ComparisonFailure  	24	5	add
240	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail,  _outputTail	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
241	[BUG]  [BUGGY]  if(typeMsg!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(typeMsg!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(typeMsg!=  null)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(typeMsg    ==    null)    {    if(_outputTail!=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
242	[BUG]  [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(typeMsg  ==  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(typeMsg  ==  null)  {  if(_outputTail  >>  _outputEnd)  {  _flushBuffer();  }	          if(typeMsg    ==    null)    {    if(_outputTail!=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
243	[BUG]  [BUGGY]  if(c!=  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
244	[BUG]  [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(type  ==  JsonWriteContext.STATUS_OK_AS_IS)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
245	[BUG]  [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_NULL)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_NULL)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(type  ==  JsonWriteContext.STATUS_OK_AS_NULL)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
246	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  System.currentTimeMillis();  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  possible  loss  of  precision	61	None	replace
247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
248	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
249	[BUG]  [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  unclosed  character  literal  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'ufffd'  ||  c  ==  'ufffd')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
250	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  >=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c  >=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
251	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  >=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(c  >=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(c  >=  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	64	5	add
252	[BUG]  [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_NULL)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(type  ==  JsonWriteContext.STATUS_OK_AS_NULL)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(type  ==  JsonWriteContext.STATUS_OK_AS_NULL)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
253	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	          if(c    ==    'n'    ||    c    ==    'r')    {    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
254	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]  ==  null)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]  ==  null)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  if(_outputBuffer[_outputTail]  ==  null)  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    if(_outputBuffer[_outputTail]!=    null)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
255	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	14	None	replace
256	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	31	5	add
257	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	31	5	add
258	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  typeMsg);  _outputBuffer[  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
259	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	compilable	  [FE]  ComparisonFailure  	60	5	replace
260	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	compilable	  [FE]  ComparisonFailure  	60	5	replace
261	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
262	[BUG]  [BUGGY]  _outputTail  =  jsonOutputBuffer[_outputTail];  [CE]  cannot  find  symbol  jsonOutputBuffer  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  jsonOutputBuffer[_outputTail];  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  jsonOutputBuffer[_outputTail];	  _outputTail    =    _outputBuffer[_outputTail];    	non-compiled	[CE]  cannot  find  symbol  jsonOutputBuffer	13	None	replace
263	[BUG]  [BUGGY]  _outputTail  =  b;  [CE]  cannot  find  symbol  b  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  b;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  b;	  _outputTail    =    _outputBuffer[_outputTail];    	non-compiled	[CE]  cannot  find  symbol  b	13	None	replace
264	[BUG]  [BUGGY]  _outputTail  =  new  char[_outputTail];  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  new  char[_outputTail];  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  new  char[_outputTail];	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    null;    }    	non-compiled	[CE]  incompatible  types	54	None	replace
265	[BUG]  [BUGGY]  _outputTail  =  new  StringBuffer();  [CE]  incompatible  types  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  new  StringBuffer();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  new  StringBuffer();	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    null;    }    	non-compiled	[CE]  incompatible  types	54	None	replace
266	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  ++_outputTail;	  ||(_outputTail    >=    _outputEnd    &&!isEnabled(Feature.QUOTE_FIELD_NAMES)))    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
267	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	36	5	add
268	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	36	5	add
269	[BUG]  [BUGGY]  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail);	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	28	None	replace
270	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  'n'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  'n'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
271	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
272	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	42	5	add
273	[BUG]  [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  buf  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(buf,  start,  _outputBuffer,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(buf,  start,  _outputBuffer,  _outputTail);	  if(_outputTail    >=    _outputEnd)    {    if(_outputBuffer[_outputTail]!=    null)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol  buf	19	None	replace
274	[BUG]  [BUGGY]  _writer.write(buf,  0,  _outputTail);  [CE]  cannot  find  symbol  buf  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(buf,  0,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(buf,  0,  _outputTail);	  if(_outputTail    >=    _outputEnd)    {    if(_outputBuffer[_outputTail]!=    null)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol  buf	19	None	replace
275	[BUG]  [BUGGY]  _writer.write(buf,  0,  _outputBuffer.length);  [CE]  cannot  find  symbol  buf  [FE]              ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(buf,  0,  _outputBuffer.length);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(buf,  0,  _outputBuffer.length);	  if(_outputTail    >=    _outputEnd)    {    if(_outputBuffer[_outputTail]!=    null)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol  buf	19	None	replace
276	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'e'  ||  c  ==  'E')  {  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	          if(c    ==    'n'    ||    c    ==    'r')    {    if(_outputTail    <    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
277	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
278	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(typeMsg);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_writer.write(typeMsg);	          if(typeMsg    ==    null)    {    if(_outputTail!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	52	5	replace
279	[BUG]  [BUGGY]  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(typeMsg);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(typeMsg);	          if(typeMsg    ==    null)    {    if(_outputTail!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	52	5	replace
280	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_writer.write(typeMsg,  0,  _outputBuffer.length);	          if(typeMsg    ==    null)    {    if(_outputTail!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	52	5	replace
281	[BUG]  [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length);  [FE]  StringIndexOutOfBoundsException  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(typeMsg,  0,  _outputBuffer.length);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(typeMsg,  0,  _outputBuffer.length);	          if(typeMsg    ==    null)    {    if(_outputTail!=    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	52	5	replace
282	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]                AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(c);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_writer.write(c);	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    	compilable	  [FE]  ComparisonFailure  	10	5	replace
283	[BUG]  [BUGGY]  _writer.write(c);  [FE]  ComparisonFailure  [FE]                AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(c);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(c);	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    	compilable	  [FE]  ComparisonFailure  	10	5	replace
284	[BUG]  [BUGGY]  _writer.write(c,  0,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(char,int,char[],int)  [FE]                  AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _writer.write(c,  0,  _outputBuffer,  _outputTail);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_writer.write(c,  0,  _outputBuffer,  _outputTail);	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    	non-compiled	[CE]  no  suitable  method  found  for  write(char,int,char[],int)	10	None	replace
285	[BUG]  [BUGGY]  if(c  ==  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
286	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	2	5	replace
287	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  [FE]  ComparisonFailure  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    	compilable	  [FE]  ComparisonFailure  	2	5	replace
288	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
289	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	39	5	add
290	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	12	5	add
291	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	12	5	add
292	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	12	5	add
293	[BUG]  [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputBuffer[_outputTail];  if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputBuffer[_outputTail];    if(_outputTail  <  _outputEnd)  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	12	5	add
294	[BUG]  [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  'n'  ||  c  ==  'r')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
295	[BUG]  [BUGGY]  if(c!=  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
296	[BUG]  [BUGGY]  if(c!=  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  'n')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
297	[BUG]  [BUGGY]  if(c!=  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  INT_0)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
298	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_out  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_out  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_out	  	non-compiled	[CE]  ';'  expected	1	None	add
299	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  System.currentTimeMillis();  }  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  System.currentTimeMillis();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  System.currentTimeMillis();  }	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  possible  loss  of  precision	61	None	replace
300	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1,  _outputTail);  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	compilable	  [FE]  ComparisonFailure  	28	5	replace
301	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1,  _outputTail);  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1,  _outputTail);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1,  _outputTail);  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	compilable	  [FE]  ComparisonFailure  	28	5	replace
302	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1);  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  System.arraycopy(_outputBuffer,  _outputTail,  _outputBuffer,  _outputTail  +  1);  }	          if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail);    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	28	None	replace
303	[BUG]  [BUGGY]  if(c  ==  '[')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  '[')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  '[')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputT    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
304	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	36	5	add
305	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	36	5	add
306	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
307	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  AssertionFailedError  	36	1	add
308	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
309	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }	  	compilable	  [FE]  AssertionFailedError  	6	1	add
310	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output  [CE]  ')'  expected  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _output	  	non-compiled	[CE]  ')'  expected	6	None	add
311	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEn  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEn  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEn	  	non-compiled	[CE]  ')'  expected	6	None	add
312	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_output  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_output  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_output	  	non-compiled	[CE]  ';'  expected	6	None	add
313	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_out  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_out  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  ==  _outputEnd)  {  ++_out	  	non-compiled	[CE]  ';'  expected	6	None	add
314	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputHead);	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    	non-compiled	[CE]  incompatible  types	47	None	replace
315	[BUG]  [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputEnd);  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputEnd);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.arraycopy(typeMsg,  0,  _outputBuffer,  _outputTail,  _outputEnd);	  _outputTail    =    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    	non-compiled	[CE]  incompatible  types	47	None	replace
316	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c  ==  'e'  ||  c  ==  'E')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	65	5	replace
317	[BUG]  [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'e'  ||  c  ==  'E')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'e'  ||  c  ==  'E')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	compilable	  [FE]  ComparisonFailure  	65	5	replace
318	[BUG]  [BUGGY]  _outputTail  =  c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  c  ==  'n'  ||  c  ==  'r')  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  if(c    ==    'n'    ||    c    ==    'r')    {    ++_outputTail;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	65	None	replace
319	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(c  ==  'n'  ||  c  ==  'r')  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  ComparisonFailure  	16	5	replace
320	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r')  {  _flushBuffer();  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r')  {  _flushBuffer();  }  else  {  _flushBuffer();  }	  _flushBuffer();    	compilable	  [FE]  ComparisonFailure  	16	5	replace
321	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  else  {  _flushBuffer();  }  [CE]  possible  loss  of  precision  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    if(_outputTail  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  possible  loss  of  precision	62	None	add
322	[BUG]  [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  [CE]  possible  loss  of  precision  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  _outputEnd;  if(_outputTail  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    _outputEnd;    if(_outputTail  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  _outputEnd;  }	  	non-compiled	[CE]  possible  loss  of  precision	62	None	add
323	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&  _outputBuffer[_outputTail]!=  null))  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
324	[BUG]  [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  ||(_outputTail  >=  _outputEnd  &&!buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	||(_outputTail  >=  _outputEnd  &&!buffer.isEnabled(Feature.QUOTE_FIELD_NAMES)))  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
325	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  null;  }  [CE]  bad  operand  type  char[]  for  unary  operator  '++'  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  null;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  else  {  _outputBuffer[_outputTail]  =  null;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    null;    }    	non-compiled	[CE]  bad  operand  type  char[]  for  unary  operator  '++'	54	None	replace
326	[BUG]  [BUGGY]  _outputBuffer  =  _outputTail;  [CE]  incompatible  types  [FE]        ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer  =  _outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputBuffer  =  _outputTail;	  if(_outputTail    >=    _outputEnd)    {    ++_outputBuffer;    }    else    {    _flushBuffer();    }    	non-compiled	[CE]  incompatible  types	50	None	replace
327	[BUG]  [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  'n'  ||  c  ==  'r'  ||  c  ==  't')  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  if(_outputTail    >=    _outputEnd)    {    _flushBuffer();    }    else    {    System.arraycopy(_outputBuffer,    _outputTail,    _outputBuffer,    _outputTail,    _outputTail);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
328	[BUG]  [BUGGY]  if(c!=  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  INT_QUOTE)  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
329	[BUG]  [BUGGY]  _outputTail  =  jsonOutputEnd;  [CE]  cannot  find  symbol  jsonOutputEnd  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  jsonOutputEnd;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  jsonOutputEnd;	  _outputTail    =    _outputBuffer[_outputTail];    	non-compiled	[CE]  cannot  find  symbol  jsonOutputEnd	13	None	replace
330	[BUG]  [BUGGY]  _flushBuffer();  _outputBuffer  =  _outputBuffer[_outputTail];  [CE]  incompatible  types  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _outputBuffer  =  _outputBuffer[_outputTail];  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _outputBuffer  =  _outputBuffer[_outputTail];	  	non-compiled	[CE]  incompatible  types	15	None	add
331	[BUG]  [BUGGY]  _flushBuffer();  _outputBuffer  =  _outputEnd  -  _outputTail;  [CE]  incompatible  types  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _outputBuffer  =  _outputEnd  -  _outputTail;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _outputBuffer  =  _outputEnd  -  _outputTail;	  	non-compiled	[CE]  incompatible  types	15	None	add
332	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _writer.write(typeMsg);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_flushBuffer();    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	15	5	add
333	[BUG]  [BUGGY]  _flushBuffer();  _writer.write(typeMsg);  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _flushBuffer();  _writer.write(typeMsg);  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_flushBuffer();    _writer.write(typeMsg);	  	compilable	  [FE]  ComparisonFailure  	15	5	add
334	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	31	5	add
335	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	31	5	add
336	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputStart)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  cannot  find  symbol  _outputStart  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(_outputTail  >=  _outputStart)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail  >=  _outputStart)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	non-compiled	[CE]  cannot  find  symbol  _outputStart	31	None	add
337	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
338	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _outputBuffer[_outputTail]        =        c;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  	compilable	  [FE]  ComparisonFailure  	34	5	add
339	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
340	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(++_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
341	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
342	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  ==  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        else        {        _flushBuffer();        }        if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    else    {    _flushBuffer();    }    if(_outputTail  <  _outputEnd)  {  ++_outputTail;  }  else  {  _flushBuffer();  }	  	compilable	  [FE]  ComparisonFailure  	44	5	add
343	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  [CE]  possible  loss  of  precision  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }	  	non-compiled	[CE]  possible  loss  of  precision	24	None	add
344	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  else  {  _flushBuffer();  }  [CE]  possible  loss  of  precision  [FE]      AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  else  {  _flushBuffer();  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  possible  loss  of  precision	24	None	add
345	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }	  	non-compiled	[CE]  possible  loss  of  precision	24	None	add
346	[BUG]  [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  text;  }  [CE]  possible  loss  of  precision  [FE]          AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  ++_outputTail;  if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  text;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    ++_outputTail;    if(_outputTail  >=  _outputEnd)  {  _outputBuffer[_outputTail]  =  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  text;  }	  	non-compiled	[CE]  possible  loss  of  precision	24	None	add
347	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
348	[BUG]  [BUGGY]  _outputTail  =  c;  if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
349	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
350	[BUG]  [BUGGY]  _outputTail  =  c;  if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
351	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
352	[BUG]  [BUGGY]  _outputTail  =  c;  if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(c  <  _outputEnd)  {  _outputBuffer[_outputTail]  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
353	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail    =    c;    if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
354	[BUG]  [BUGGY]  _outputTail  =  c;  if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }  [FE]  ComparisonFailure  [FE]          ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  c;  if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail    =    c;    if(c  <  _outputTail)  {  _outputTail  =  c;  }  else  {  _outputBuffer[_outputTail]  =  JsonWriteContext.STATUS_OK_AS_IS;  return;  }	  	compilable	  [FE]  ComparisonFailure  	26	5	add
355	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  -1;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	add	_outputTail  =  -1;	  _outputTail    =    ++_outputTail;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	5	replace
356	[BUG]  [BUGGY]  _outputTail  =  -1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  -1;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  -1;	  _outputTail    =    ++_outputTail;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	25	5	replace
357	[BUG]  [BUGGY]  _outputTail  =  System.currentTimeMillis()  *  1;  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputTail  =  System.currentTimeMillis()  *  1;  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputTail  =  System.currentTimeMillis()  *  1;	  _outputTail    =    System.currentTimeMillis()    +    1;    	non-compiled	[CE]  possible  loss  of  precision	46	None	replace
358	[BUG]  [BUGGY]  _outputBuffer[_outputTail]  =  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer[_outputTail]  =  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputBuffer[_outputTail]  =	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    System.arraycopy(typeMsg,    0,    _outputBuffer,    _outputTail,    typeMsg);    _outputBuffer[_outputTail]    =    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
359	[BUG]  [BUGGY]  _outputBuffer  =  System.currentTimeMillis();  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  _outputBuffer  =  System.currentTimeMillis();  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	_outputBuffer  =  System.currentTimeMillis();	  if(_outputTail    >=    _outputEnd)    {    _outputTail    =    System.currentTimeMillis();    }    else    {    _outputBuffer[_outputTail]    =    JsonWriteContext.STATUS_OK_AS_IS;    }    	non-compiled	[CE]  incompatible  types	60	None	replace
360	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn  [CE]  ')'  expected  [FE]    ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEn	  	non-compiled	[CE]  ')'  expected	4	None	add
361	[BUG]  [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _outputEn  [CE]  ')'  expected  [FE]      ComparisonFailure    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail!=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _outputEn  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(_outputTail        >=        _outputEnd)        {        ++_outputTail;        }        if(_outputTail!=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  if(_outputTail!=  _outputEn	  	non-compiled	[CE]  ')'  expected	4	None	add
362	[BUG]  [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  else  {  _outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
363	[BUG]  [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
364	[BUG]  [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer[_outputTail]  =  c;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
365	[BUG]  [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure      [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c!=  '.')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputBuffer;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    if(_outputTail    >>    _outputEnd)    {    ++_outputTail;    }    else    {    _outputBuffer[_outputTail]    =    c;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
366	[BUG]  [BUGGY]  if(c  ==  ' "')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      }  return;  case  JsonWriteContext.STATUS_OK_AS_IS:  default:  return;  }  if  (_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  _outputBuffer[_outputTail]  =  c;      [BUGGY]  if(c  ==  ' "')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }  [BUGGY]      }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  _verifyValueWrite  [RETURN_TYPE]  void  String  typeMsg  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  boolean  char  c  String  typeMsg  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  bytes  dataLength  features  i  len  length  missing  offset  ptr  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  buf  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	789	789	1	replace	if(c  ==  ' "')  {  if(_outputTail  >=  _outputEnd)  {  ++_outputTail;  }	  if(_outputTail    >=    _outputEnd)    {    ++_outputTail;    }    if(_outputTail    ==    _outputEnd)    {    ++_outputTail;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
