bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  0,  _outputTail);	  _writer.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
2	[BUG]  [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  text,  _outputBuffer,  0);	  _writer.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
3	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0,  _outputHead);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  0,  _outputHead);	  _writer.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
4	[BUG]  [BUGGY]  _writer.writeRawLong(text,  room);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  room);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
5	[BUG]  [BUGGY]  _writer.writeRawLong(text,  null);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  null);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  null);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
6	[BUG]  [BUGGY]  _writer.writeRawLong(text,  0,  room);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  0,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  0,  room);	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  _writer.write(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	                _writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
8	[BUG]  [BUGGY]          _writer.write(text);  _writer.write(text);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  _writer.write(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    _writer.write(text);	  	compilable	  [FE]  AssertionFailedError  	16	1	add
9	[BUG]  [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [CE]  cannot  find  symbol  offset  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }	  	non-compiled	[CE]  cannot  find  symbol  offset	16	None	add
10	[BUG]  [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+text,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+text,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+text,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	16	None	add
11	[BUG]  [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [CE]  cannot  find  symbol  offset  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  _outputTail  +=  len;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	16	None	add
12	[BUG]  [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  cannot  find  symbol  offset  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(_outputTail  >=  _outputEnd)  {  _writer.write(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  cannot  find  symbol  offset	16	None	add
13	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  room);	  TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	31	None	replace
14	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1);	  TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	31	None	replace
15	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer);	  TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	31	None	replace
16	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead,    _outputEnd);    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
17	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail,  _outputEnd);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail,  _outputEnd);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail,  _outputEnd);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead,    _outputEnd);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	25	None	replace
18	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead,    _outputEnd);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	25	None	replace
19	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead,    _outputEnd);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	25	None	replace
20	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(_outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(_outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(_outputBuffer,  _outputTail);	  TextBuffer    text    =    new    TextBuffer(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
21	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(text,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(text,  _outputBuffer,  _outputTail);	  TextBuffer    text    =    new    TextBuffer(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
22	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(_outputBuffer,  room,  _outputTail);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(_outputBuffer,  room,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(_outputBuffer,  room,  _outputTail);	  TextBuffer    text    =    new    TextBuffer(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
23	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(room,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(room,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(room,  _outputBuffer,  _outputTail,  _outputHead);	  TextBuffer    text    =    new    TextBuffer(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
24	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >=  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >=  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.length()  >=  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(text.length()    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
25	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  ==  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  ==  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.length()  ==  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(text.length()    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
26	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >  room  +  1)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >  room  +  1)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.length()  >  room  +  1)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(text.length()    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
27	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(room);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextRawLong  text  =  new  TextRawLong(room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextRawLong  text  =  new  TextRawLong(room);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
28	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
29	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length());  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length());	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
30	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
31	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  2);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  2);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  2);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
32	[BUG]  [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail,  _outputHead);	  _writer.getChars(0,    room,    text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
33	[BUG]  [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1);	  _writer.getChars(0,    room,    text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
34	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  continue;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  continue;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  continue;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
35	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  return;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
36	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
37	[BUG]  [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
38	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	1	add
39	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	1	add
40	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	35	None	add
41	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  space,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  space  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  space,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  space,  _outputBuffer,  _outputTail  +  1);	  	non-compiled	[CE]  cannot  find  symbol  space	35	None	add
42	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	35	None	add
43	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	1	add
44	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	35	1	add
45	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  room);	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
46	[BUG]  [BUGGY]  writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  writer  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  room);	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  writer	9	None	replace
47	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
48	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
49	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1,  room);	  TextUtilities.writeStringLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	46	None	replace
50	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  TextUtilities.writeStringLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	46	None	replace
51	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeStringLong(text,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeStringLong(text,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);	  TextUtilities.writeStringLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	46	None	replace
52	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeStringLong(text,  _outputBuffer,  _outputTail  +  1);	  TextUtilities.writeStringLong(text,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	41	None	replace
53	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeStringLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeStringLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);	  TextUtilities.writeStringLong(text,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	41	None	replace
54	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
55	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
56	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
57	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
58	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text.length);  [CE]  cannot  find  symbol  length  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text.length);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text.length);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail,    text);    	non-compiled	[CE]  cannot  find  symbol  length	3	None	replace
59	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text.length());  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text.length());	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail,    text);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
60	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead,  text);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead,  text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead,  text);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail,    text);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
61	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
62	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  0);	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	replace
63	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  _outputBuffer,  0);	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
64	[BUG]  [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  room,  _outputBuffer,  0);	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
65	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	14	None	replace
66	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
67	[BUG]  [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  room,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
68	[BUG]  [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  room,  _outputBuffer,  0);	  text.getChars(0,    room,    _outputBuffer,    0);    Text.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	6	None	replace
69	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  Text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    Text.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	6	None	replace
70	[BUG]  [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  room,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    Text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  Text	12	None	replace
71	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [CE]  cannot  find  symbol  Text  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    Text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  Text	12	None	replace
72	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    Text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  ';'  expected	12	None	replace
73	[BUG]  [BUGGY]  int  room  =  text.length()  +  1;  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  int  room  =  text.length()  +  1;  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	int  room  =  text.length()  +  1;	  int    room    =    text.length();    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	43	None	replace
74	[BUG]  [BUGGY]  int  room  =  text.length()  -  1;  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  int  room  =  text.length()  -  1;  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	int  room  =  text.length()  -  1;	  int    room    =    text.length();    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	43	None	replace
75	[BUG]  [BUGGY]  int  room  =  text.length()  -  2;  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  int  room  =  text.length()  -  2;  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	int  room  =  text.length()  -  2;	  int    room    =    text.length();    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	43	None	replace
76	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead,  _outputTail);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	45	None	replace
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.write(text,  0,  room  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	_writer.write(text,  0,  room  +  1);	          _writer.write(text,    0,    room);    	compilable	  [FE]  AssertionFailedError  	20	1	replace
78	[BUG]  [BUGGY]  _writer.write(text,  0,  room  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.write(text,  0,  room  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.write(text,  0,  room  +  1);	          _writer.write(text,    0,    room);    	compilable	  [FE]  AssertionFailedError  	20	1	replace
79	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.write(text,  0,  room  -  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	_writer.write(text,  0,  room  -  _outputTail);	          _writer.write(text,    0,    room);    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
80	[BUG]  [BUGGY]  _writer.write(text,  0,  room  -  _outputTail);  [FE]  StringIndexOutOfBoundsException  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.write(text,  0,  room  -  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.write(text,  0,  room  -  _outputTail);	          _writer.write(text,    0,    room);    	compilable	  [FE]  StringIndexOutOfBoundsException  	20	1	replace
81	[BUG]  [BUGGY]  _writer.write(text,  0,  room  +  1,  text.length());  [CE]  no  suitable  method  found  for  write(String,int,int,int)  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.write(text,  0,  room  +  1,  text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.write(text,  0,  room  +  1,  text.length());	          _writer.write(text,    0,    room);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,int)	20	None	replace
82	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead    +    1);    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
83	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	26	None	replace
84	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	26	None	replace
85	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead  +  1,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead  +  1,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead  +  1,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	26	None	replace
86	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
87	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
88	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
89	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  AssertionFailedError  	36	1	replace
90	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [FE]  AssertionFailedError  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  AssertionFailedError  	36	1	replace
91	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  AssertionFailedError  	36	1	replace
92	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [FE]  AssertionFailedError  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  AssertionFailedError  	36	1	replace
93	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >  room)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(_outputTail  >  room)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
94	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >  room)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_outputTail  >  room)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
95	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
96	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
97	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
98	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
99	[BUG]  [BUGGY]  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  IllegalArgumentException  	11	1	replace
100	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  IllegalArgumentException  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  IllegalArgumentException  	11	1	replace
101	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  writeRawLong  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  }  else  {  writeRawLong	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  ';'  expected	11	None	replace
102	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  _outputTail);  break;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  _outputTail);  break;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  _outputTail);  break;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
103	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  break;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  break;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  break;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
104	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	add
105	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	53	1	add
106	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  Text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  [CE]  cannot  find  symbol  Text  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  Text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    Text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);	  	non-compiled	[CE]  cannot  find  symbol  Text	53	None	add
107	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead  +  1);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	add
108	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead  +  1);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead  +  1);	  	non-compiled	[CE]  cannot  find  symbol	53	None	add
109	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead  +  1,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead  +  1,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead  +  1,  room);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	add
110	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
111	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  _outputTail);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  _outputTail);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  _outputTail);  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
112	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
113	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length);  [CE]  cannot  find  symbol  length  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  length	23	None	replace
114	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
115	[BUG]  [BUGGY]  writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  writer  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  writer	56	None	replace
116	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
117	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
118	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
119	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
120	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
121	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
122	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead.length());  [CE]  int  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead.length());	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    text.length());    	non-compiled	[CE]  int  cannot  be  dereferenced	51	None	replace
123	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  room);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    text.length());    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	51	None	replace
124	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1,  text.length());  [CE]  cannot  find  symbol  TextUtilities  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1,  text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1,  text.length());	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    text.length());    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	51	None	replace
125	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  0);	  text.getChars(0,    room,    _outputBuffer,    0);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
126	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  0);	  text.getChars(0,    room,    _outputBuffer,    0);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
127	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
128	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	54	None	replace
129	[BUG]  [BUGGY]  _writer.write(text,  null);  [CE]  no  suitable  method  found  for  write(String,<null>)  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.write(text,  null);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.write(text,  null);	          _writer.write(text);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,<null>)	17	None	replace
130	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	33	None	replace
131	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]                        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	33	None	replace
132	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail,  _outputEnd);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail,  _outputEnd);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail,  _outputEnd);	  text.getChars(0,    room,    _outputBuffer,    _outputHead,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	55	None	replace
133	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputHead,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
134	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	55	None	replace
135	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail,  len);  [CE]  cannot  find  symbol  len  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail,  len);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail,  len);	  text.getChars(0,    room,    _outputBuffer,    _outputHead,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  len	55	None	replace
136	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  _writer.write(text,  0,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	                _writer.write(text,    0,    room);    _writer.write(text,  0,  room);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
137	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  _writer.write(text,  0,  room);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  _writer.write(text,  0,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    _writer.write(text,  0,  room);	  	compilable	  [FE]  AssertionFailedError  	19	1	add
138	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer.write(text,  0,  room);  }  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer.write(text,  0,  room);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  else  {  _outputBuffer.write(text,  0,  room);  }	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
139	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(0,  0,  text.length()  -  room);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(0,  0,  text.length()  -  room);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(0,  0,  text.length()  -  room);  }	  	non-compiled	[CE]  ';'  expected	19	None	add
140	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(0,  0,  text.length());  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(0,  0,  text.length());  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(_outputTail  >=  _outputEnd)  {  if(!text.isEmpty())  {  text.getChars(0,  0,  text.length());  }	  	non-compiled	[CE]  ';'  expected	19	None	add
141	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text,  0,  room);  }  else  {  _writer.write(text,  0,  len);  }  [CE]  cannot  find  symbol  len  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(_outputTail  >=  _outputEnd)  {  _writer.write(text,  0,  room);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(_outputTail  >=  _outputEnd)  {  _writer.write(text,  0,  room);  }  else  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  cannot  find  symbol  len	19	None	add
142	[BUG]  [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  Text  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    Text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  Text	37	None	replace
143	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [CE]  cannot  find  symbol  Text  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    Text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  Text	37	None	replace
144	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [CE]  cannot  find  symbol  Text  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_outputTail  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    Text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  Text	37	None	replace
145	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  0,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  0,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead,  0,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	28	None	replace
146	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0,  _outputTail,  _outputHead);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0,  _outputTail,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  0,  _outputTail,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	28	None	replace
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
148	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
149	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	add
150	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  space,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  space,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  space,  _outputBuffer,  _outputHead);	  	non-compiled	[CE]  cannot  find  symbol  space	10	None	add
151	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
152	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputTail);	  	compilable	  [FE]  AssertionFailedError  	10	1	add
153	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  text.getChars(0,  room,  _outputBuffer,  _outputHead);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	add
154	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  room);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
155	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  0,  _outputTail);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	30	None	replace
156	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  len  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  0,  len);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  0,  len);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  len	30	None	replace
157	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  0);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	30	None	replace
158	[BUG]  [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  text,  _outputBuffer,  _outputHead);	  _writer.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
159	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputTail);	  TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
160	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  room);	  TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
161	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer);	  TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
162	[BUG]  [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  text);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(_outputBuffer,  text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(_outputBuffer,  text);	  TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	42	None	replace
163	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail,  _outputHead);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	32	None	replace
164	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text);	  text.getChars(0,    room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
165	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextRawLong  text  =  new  TextRawLong(room,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
166	[BUG]  [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  _outputBuffer,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
167	[BUG]  [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRawLong(text,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRawLong(text,  room,  _outputBuffer,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
168	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
169	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail,  _outputEnd);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail,  _outputEnd);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1,  _outputTail,  _outputEnd);	  text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	24	None	replace
170	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	4	1	add
171	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	4	1	add
172	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	add
173	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  space,  _outputBuffer,  0);  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  space,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  space,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  space	4	None	add
174	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	add
175	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	4	None	add
176	[BUG]  [BUGGY]  _writer.writeRaw(text,  room);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRaw(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRaw(text,  room);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
177	[BUG]  [BUGGY]  _writer.writeRaw(text,  null);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeRaw(text,  null);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeRaw(text,  null);	          _writer.writeRaw(text);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
178	[BUG]  [BUGGY]  _writer.writeLong(text,  room);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeLong(text,  room);	          _writer.writeLong(text);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
179	[BUG]  [BUGGY]  _writer.writeLong(text,  null);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeLong(text,  null);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeLong(text,  null);	          _writer.writeLong(text);    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
180	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text,  _outputHead);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail,  text,  _outputHead);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
181	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
182	[BUG]  [BUGGY]  if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
183	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  break;  }  [CE]  ';'  expected  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  break;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  break;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
184	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  room);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	56	None	replace
185	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
186	[BUG]  [BUGGY]  if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
187	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  return;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  return;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  return;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
188	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  start,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  cannot  find  symbol  start  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  start,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  start,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  start	33	None	replace
189	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(text.length()  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(text.length()  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  SHORT_WRITE)  {  if(text.length()  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(text.length()    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
190	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.length()  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(text.length()    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
191	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.length()  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.length()  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(text.length()    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	59	None	replace
192	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(room,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(room,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(room,  _outputBuffer,  _outputTail  +  1);	  TextBuffer    text    =    new    TextBuffer(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
193	[BUG]  [BUGGY]          _writer.write(text);  if(room  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  offset  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(room  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(room  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  else  {  _flushBuffer();  }	  	non-compiled	[CE]  cannot  find  symbol  offset	16	None	add
194	[BUG]  [BUGGY]          _writer.write(text);  if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(_writer!=  null)  {  if(!_writer.isEmpty())  {  _writer.write(text);  }	  	non-compiled	[CE]  ';'  expected	16	None	add
195	[BUG]  [BUGGY]          _writer.write(text);  if(room  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [CE]  cannot  find  symbol  offset  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(room  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(room  >=  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }	  	non-compiled	[CE]  cannot  find  symbol  offset	16	None	add
196	[BUG]  [BUGGY]          _writer.write(text);  if(room  >=  0)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(room  >=  0)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(room  >=  0)  {  if(_outputTail  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	16	None	add
197	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
198	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
199	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
200	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
201	[BUG]  [BUGGY]  if(room  <  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
202	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  _flushBuffer();  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
203	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  _flushBuffer();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  _flushBuffer();  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
204	[BUG]  [BUGGY]  _writer.getChars0(0,  room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars0(0,  room,  _outputBuffer,  0);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars0(0,  room,  _outputBuffer,  0);	  _writer.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
205	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	add
206	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	add
207	[BUG]  [BUGGY]  _writer.writeLong(text,  0,  room);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.writeLong(text,  0,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.writeLong(text,  0,  room);	          _writer.write(text,    0,    room);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
208	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(room  >=  0)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(room  >=  0)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(room  >=  0)  {  if(_outputTail  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	19	None	add
209	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  SerializableString  sstr  =(SerializableString)text.clone();  [CE]  clone()  has  protected  access  in  Object  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  SerializableString  sstr  =(SerializableString)text.clone();  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    SerializableString  sstr  =(SerializableString)text.clone();	  	non-compiled	[CE]  clone()  has  protected  access  in  Object	19	None	add
210	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  SerializableString  sstr  =(SerializableString)text.get( "writeRawLong ");  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  SerializableString  sstr  =(SerializableString)text.get( "writeRawLong ");  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    SerializableString  sstr  =(SerializableString)text.get( "writeRawLong ");	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
211	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  SerializableString  sstr  =  SerializableString.getInstance(text);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  SerializableString  sstr  =  SerializableString.getInstance(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    SerializableString  sstr  =  SerializableString.getInstance(text);	  	non-compiled	[CE]  cannot  find  symbol	19	None	add
212	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputEnd);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputEnd);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputEnd);	  _writer.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
213	[BUG]  [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  room,  _outputBuffer,  0,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    0);    Text.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	6	None	replace
214	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text);	  text.getChars(0,    room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
215	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	add
216	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(text.length());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextRawLong  text  =  new  TextRawLong(text.length());	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
217	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextRawLong  text  =  new  TextRawLong(room);	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
218	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(text.length());  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextBuffer  text  =  new  TextBuffer(text.length());	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
219	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  w  =  new  TextBuffer(text.length());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  w  =  new  TextBuffer(text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextBuffer  w  =  new  TextBuffer(text.length());	  	non-compiled	[CE]  cannot  find  symbol	10	None	add
220	[BUG]  [BUGGY]  TextUtilities.writeStringLong(text,  start,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  cannot  find  symbol  start  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeStringLong(text,  start,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeStringLong(text,  start,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  TextUtilities.writeStringLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  start	46	None	replace
221	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
222	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
223	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
224	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
225	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  writeRawLong  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  writeRawLong	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  ';'  expected	36	None	replace
226	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  _outputBuffer,  _outputTail  +  1);  [CE]  cannot  find  symbol  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(0,  _outputBuffer,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(0,  _outputBuffer,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
227	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputHead  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputHead  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	26	None	replace
228	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	35	None	add
229	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextBuffer  text  =  new  TextBuffer(text.length());  [CE]  cannot  find  symbol  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextBuffer  text  =  new  TextBuffer(text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextBuffer  text  =  new  TextBuffer(text.length());	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
230	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextRawLong  text  =  new  TextRawLong(text.length());  [CE]  cannot  find  symbol  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextRawLong  text  =  new  TextRawLong(text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextRawLong  text  =  new  TextRawLong(text.length());	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
231	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextRawLong  text  =  new  TextRawLong(room);  [CE]  cannot  find  symbol  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextRawLong  text  =  new  TextRawLong(room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputTail        +        1);        text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextRawLong  text  =  new  TextRawLong(room);	  	non-compiled	[CE]  cannot  find  symbol	35	None	add
232	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
233	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
234	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
235	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
236	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
237	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
238	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  2);  [CE]  cannot  find  symbol  TextUtilities  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  2);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  2);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	39	None	replace
239	[BUG]  [BUGGY]  Text.getChars(0,  space,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  space  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  space,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  space,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    Text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  space	12	None	replace
240	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	15	None	replace
241	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(text);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(text);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
242	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputHead,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	55	None	replace
243	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead,  _outputTail  +  1,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputHead,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	55	None	replace
244	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	replace
245	[BUG]  [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputEnd,  _outputHead);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  _outputBuffer,  _outputEnd,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  _outputBuffer,  _outputEnd,  _outputHead);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
246	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputEnd);  [CE]  cannot  find  symbol  TextUtilities  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputEnd);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputEnd);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead,    _outputEnd);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	25	None	replace
247	[BUG]  [BUGGY]  TextUtilities.writeLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputEnd);  [CE]  cannot  find  symbol  TextUtilities  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputEnd);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputEnd);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead,    _outputEnd);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	25	None	replace
248	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	14	None	replace
249	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	14	None	replace
250	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  text.length());  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail  +  1,  text.length());	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    text.length());    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	51	None	replace
251	[BUG]  [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  2);  [CE]  cannot  find  symbol  Text  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  2);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  2);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    Text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  Text	37	None	replace
252	[BUG]  [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  3);  [CE]  cannot  find  symbol  Text  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  3);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  3);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    Text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  Text	37	None	replace
253	[BUG]  [BUGGY]  int  room  =  text.length()  -  room;  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  int  room  =  text.length()  -  room;  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	int  room  =  text.length()  -  room;	  int    room    =    text.length();    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	43	None	replace
254	[BUG]  [BUGGY]  int  room  =  text.length()  -  _outputTail;  [CE]  variable  room  is  already  defined  in  method  writeRawLong(String)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  int  room  =  text.length()  -  _outputTail;  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	int  room  =  text.length()  -  _outputTail;	  int    room    =    text.length();    	non-compiled	[CE]  variable  room  is  already  defined  in  method  writeRawLong(String)	43	None	replace
255	[BUG]  [BUGGY]  TextUtilities.writeLong(text,  room,  _outputBuffer,  _outputHead  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeLong(text,  room,  _outputBuffer,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeLong(text,  room,  _outputBuffer,  _outputHead  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	54	None	replace
256	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(text.length());  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextBuffer  text  =  new  TextBuffer(text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    TextBuffer  text  =  new  TextBuffer(text.length());	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
257	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text.length());  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        0);        text.getChars(0,    room,    _outputBuffer,    0);    TextRawLong  text  =  new  TextRawLong(text.length());	  	non-compiled	[CE]  cannot  find  symbol	4	None	add
258	[BUG]  [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
259	[BUG]  [BUGGY]  if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  SHORT_WITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
260	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  room);  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
261	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  0,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	28	None	replace
262	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0,  _outputTail  +  1,  _outputHead);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0,  _outputTail  +  1,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  0,  _outputTail  +  1,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	28	None	replace
263	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	58	None	replace
264	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
265	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room,  _outputHead);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
266	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  text.getChars(0,  room));  [CE]  no  suitable  method  found  for  getChars(int,int)  [FE]                  AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  text.getChars(0,  room));  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  text.getChars(0,  room));	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    text.length());    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int)	51	None	replace
267	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  break;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    break;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
268	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputHead);	  TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	44	None	replace
269	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  Text.getChars(0,  room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  Text.getChars(0,  room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  Text.getChars(0,  room,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    Text.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	6	None	replace
270	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  Text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [CE]  cannot  find  symbol  Text  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  Text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  Text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    Text.getChars(0,    room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	6	None	replace
271	[BUG]  [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1,  text);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1,  text);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1,  text);	  _writer.getChars(0,    room,    text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
272	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	15	None	replace
273	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextRawLong  text  =  new  TextRawLong(room,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
274	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	48	None	replace
275	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  text.length);  [CE]  cannot  find  symbol  length  [FE]                      AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  text.length);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  text.length);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  length	33	None	replace
276	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  writeRawLong  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  writeRawLong  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  else  {  writeRawLong	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  ';'  expected	11	None	replace
277	[BUG]  [BUGGY]  if(room  <  =  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  =  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  =  0)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
278	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
279	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,    room,    _outputBuffer,    _outputHead);    	compilable	  [FE]  AssertionFailedError  	11	1	replace
280	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);  [CE]  cannot  find  symbol  TextUtilities  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead    +    1);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	26	None	replace
281	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail  +  1);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead,  _outputTail  +  1);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead    +    1);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	26	None	replace
282	[BUG]  [BUGGY]  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  StackOverflowError  	5	1	replace
283	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [FE]  StackOverflowError  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  StackOverflowError  	5	1	replace
284	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	add	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
285	[BUG]  [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  0)  {  text.getChars(0,  room,  _outputBuffer,  0);  }  else  {  writeRawLong(text);  }	  text.getChars(0,    room,    _outputBuffer,    0);    text.getChars(0,    room,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	5	1	replace
286	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	19	None	add
287	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }	  	non-compiled	[CE]  ';'  expected	19	None	add
288	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(_writer!=  null)  {  if(!text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  =  0;  }	  	non-compiled	[CE]  ';'  expected	19	None	add
289	[BUG]  [BUGGY]          _writer.write(text,  0,  room);  if(text!=  null)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text,  0,  room);  if(text!=  null)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text,    0,    room);    if(text!=  null)  {  if(_outputTail  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	19	None	add
290	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,    room,    _outputBuffer,    _outputHead    +    1);    TextUtilities.writeRawLong(text,  room);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	53	None	add
291	[BUG]  [BUGGY]  TextBuffer  text  =  new  TextBuffer(text,  room,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextBuffer  text  =  new  TextBuffer(text,  room,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextBuffer  text  =  new  TextBuffer(text,  room,  _outputBuffer,  _outputTail);	  TextBuffer    text    =    new    TextBuffer(room,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
292	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputHead  +  1);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputTail);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	40	None	replace
293	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  if(text.isEmpty())  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  return;  }	          if(room    <    SHORT_WRITE)    {    if(!text.isEmpty())    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    return;    }    	non-compiled	[CE]  ';'  expected	60	None	replace
294	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  _writer.writeRawLong(text);  }  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  _writer.writeRawLong(text);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  _writer.writeRawLong(text);  }	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
295	[BUG]  [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(_writer!=  null)  {  _writer.writeRawLong(text);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  _outputTail  +=  text.length();  }	          _writer.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
296	[BUG]  [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length());  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length());  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  text.length());	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	50	None	replace
297	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  room);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    room);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	56	None	replace
298	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  }	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	replace
299	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _output  [CE]  ')'  expected  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _output  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _output	  text.getChars(0,    room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    _outputBuffer,    0);    	non-compiled	[CE]  ')'  expected	7	None	replace
300	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	14	None	replace
301	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextBuffer  text  =  new  TextBuffer(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextBuffer    text    =    new    TextBuffer(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
302	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead,  room);  [CE]  cannot  find  symbol  TextUtilities  [FE]        AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead,  room);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead,  room);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	45	None	replace
303	[BUG]  [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  cannot  find  symbol  Text  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	Text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    Text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  cannot  find  symbol  Text	37	None	replace
304	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  writeRawLong(text.substring(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  writeRawLong(text.substring(0,  room,  _outputBuffer,  _outputTail  +  1);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputTail  +  1);  }  else  {  writeRawLong(text.substring(0,  room,  _outputBuffer,  _outputTail  +  1);  }	  text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    text.getChars(0,    room,    _outputBuffer,    _outputTail    +    1);    	non-compiled	[CE]  ')'  expected	36	None	replace
305	[BUG]  [BUGGY]          _writer.write(text);  if(room  >=  0)  {  if(text.length()  ==  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(room  >=  0)  {  if(text.length()  ==  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(room  >=  0)  {  if(text.length()  ==  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	16	None	add
306	[BUG]  [BUGGY]          _writer.write(text);  if(text!=  null)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]          _writer.write(text);  if(text!=  null)  {  if(_outputTail  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	                _writer.write(text);    if(text!=  null)  {  if(_outputTail  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	16	None	add
307	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  start,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  cannot  find  symbol  start  [FE]                    AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  TextUtilities.writeRawLong(text,  start,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	TextUtilities.writeRawLong(text,  start,  _outputBuffer,  _outputTail,  _outputHead);	  TextUtilities.writeRawLong(text,    room,    _outputBuffer,    _outputTail,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  start	32	None	replace
308	[BUG]  [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  _writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	_writer.getChars(0,  room,  text,  _outputBuffer,  _outputTail  +  1,  _outputHead);	  _writer.getChars(0,    room,    _outputBuffer,    _outputTail    +    1,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
309	[BUG]  [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [CE]  cannot  find  symbol  Text  [FE]          AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  >=  _outputEnd)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    Text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  Text	12	None	replace
310	[BUG]  [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [CE]  cannot  find  symbol  Text  [FE]            AssertionFailedError      [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	if(room  <  SHORT_WRITE)  {  text.getChars(0,  room,  _outputBuffer,  _outputHead);  Text.getChars(0,  room,  _outputBuffer,  _outputHead);  }	  text.getChars(0,    room,    _outputBuffer,    _outputHead);    Text.getChars(0,    room,    _outputBuffer,    _outputHead);    	non-compiled	[CE]  cannot  find  symbol  Text	12	None	replace
311	[BUG]  [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [CE]  cannot  find  symbol  TextUtilities  [FE]    AssertionFailedError    [CONTEXT]      private  void  writeRawLong(String  text)  throws  IOException  {  int  room  =  _outputEnd  -  _outputTail;        [BUGGY]  text.getChars(0,    room,    _outputBuffer,    _outputHead);    text.getChars(0,  room,  _outputBuffer,  _outputHead);  TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);  [BUGGY]      _outputTail  +=  room;  _flushBuffer();  int  offset  =  room;  int  len  =  text.length()  -  room;  while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	478	478	1	replace	text.getChars(0,        room,        _outputBuffer,        _outputHead);        text.getChars(0,    room,    _outputBuffer,    _outputHead);    TextUtilities.writeRawLong(text,  _outputBuffer,  _outputHead);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	add
