bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(room  ==  len)  {  if(_outputTail  >=  _outputEnd)  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  ==  len)  {  if(_outputTail  >=  _outputEnd)  {  writeRawLong(text);  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  ==  len)  {  if(_outputTail  >=  _outputEnd)  {  writeRawLong(text);  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
2	[BUG]  [BUGGY]  _writer.write(text,  0,  len);  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  _writer.write(text,  0,  len);  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	_writer.write(text,  0,  len);	}  	non-compiled	[CE]  ';'  expected	89	None	replace
3	[BUG]  [BUGGY]  if(room  ==  len)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  ==  len)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  ==  len)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
4	[BUG]  [BUGGY]  if(room  >=  len)  {  if(_outputTail  >  0)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  >=  len)  {  if(_outputTail  >  0)  {  _flushBuffer();  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  >=  len)  {  if(_outputTail  >  0)  {  _flushBuffer();  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
5	[BUG]  [BUGGY]    [CE]  ';'  expected  [FE]            AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]    [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	  	}  	non-compiled	[CE]  ';'  expected	89	None	replace
6	[BUG]  [BUGGY]  if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
7	[BUG]  [BUGGY]  if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
8	[BUG]  [BUGGY]  if(room  >=  len)  {  if(room  >  0)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]        AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  >=  len)  {  if(room  >  0)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  >=  len)  {  if(room  >  0)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
9	[BUG]  [BUGGY]  if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  =  len;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]          AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  =  len;  }  else  {  writeRawLong(text);  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  =  len;  }  else  {  writeRawLong(text);  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
10	[BUG]  [BUGGY]  if(room  <  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [CE]  ';'  expected  [FE]    AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  <  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  <  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
11	[BUG]  [BUGGY]  if(room  <  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError  [CONTEXT]  _flushBuffer();  room  =  _outputEnd  -  _outputTail;  }  if  (room  >=  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  else  {  writeRawLong(text);  }  [BUGGY]  if(room  <  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]    [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRaw  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  features  len  length  offset  qlen  room  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	0.4472135954999579	420	420	1	replace	if(room  <  len)  {  text.getChars(0,  len,  _outputBuffer,  _outputTail);  _outputTail  +=  len;  }	}  	non-compiled	[CE]  ';'  expected	89	None	replace
