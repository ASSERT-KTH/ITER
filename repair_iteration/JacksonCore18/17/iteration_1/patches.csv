bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
2	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
3	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  If(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  If(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    If(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	2	None	add
4	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	timeout	2	1	add
5	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  timeout  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	timeout	2	1	add
6	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	9	None	replace
7	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	add
8	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	add
9	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	8	None	add
10	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]        StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	8	None	add
11	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]          StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset,  len);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	8	None	add
12	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]            StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	8	None	add
13	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	7	None	replace
14	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  0);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	7	None	replace
15	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	1	None	replace
16	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	1	None	replace
17	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]            AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	1	None	replace
18	[BUG]  [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
19	[BUG]  [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
20	[BUG]  [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }	  	non-compiled	[CE]  ';'  expected	5	None	add
21	[BUG]  [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
22	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
23	[BUG]  [BUGGY]      _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      _writer.write(text,  0,  len);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	5	1	add
24	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  amount	3	None	replace
25	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  =  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	2	None	add
29	[BUG]  [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	Text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	11	None	replace
30	[BUG]  [BUGGY]      if(len  >  room)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	5	None	add
31	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	        if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
32	[BUG]  [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
33	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	        if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
34	[BUG]  [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
35	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	        if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
36	[BUG]  [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
37	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	        if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
38	[BUG]  [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	5	1	add
39	[BUG]  [BUGGY]  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alloc  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+alloc,  _outputBuffer,  0);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alloc	7	None	replace
40	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]    StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	8	None	add
41	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextRawLong  text  =  new  TextRawLong(room);	  	non-compiled	[CE]  cannot  find  symbol	8	None	add
42	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  _outputTail);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  _outputTail);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	1	None	replace
43	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0);	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ')'  expected	3	None	replace
44	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  alpha  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  alpha	3	None	replace
45	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0));	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
46	[BUG]  [BUGGY]  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  [CE]  cannot  find  symbol  anchor  [FE]            AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+anchor,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+anchor,  _outputBuffer,  0);	  text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  anchor	11	None	replace
47	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }	      	non-compiled	[CE]  cannot  find  symbol  length	6	None	replace
48	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	      	compilable	  [FE]  AssertionFailedError  	6	1	replace
49	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	      	compilable	  [FE]  AssertionFailedError  	6	1	replace
50	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	3	1	replace
51	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	3	1	replace
52	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]      AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  amount	3	None	replace
53	[BUG]  [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
55	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	2	1	add
56	[BUG]  [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]      if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	        if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  amount	5	None	add
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	text.getChars(offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+qlen,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
58	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]    while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }      [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]    _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  0);	  text.getChars(offset,    offset+qlen,    _outputBuffer,    0);    	compilable	  [FE]  AssertionFailedError  	10	1	replace
