bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
2	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	51	1	replace
4	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	51	1	replace
5	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
6	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	compilable	  [FE]  StringIndexOutOfBoundsException  	51	1	replace
7	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(room  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  if(room  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  if(room  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	51	None	replace
8	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
9	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
10	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    If(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	48	None	add
11	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	48	1	add
12	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	48	1	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
14	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
15	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
16	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
17	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
18	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
19	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
20	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {	  	non-compiled	[CE]  ';'  expected	7	None	add
21	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  _writer.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  _writer.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    _writer.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol	7	None	add
22	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toCharArray();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
23	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toCharArray();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
24	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  LAST_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  LAST_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  LAST_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toCharArray();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
25	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  Len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  Len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  Len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toCharArray();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
26	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  write(String,int,char[],int)  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0);	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int)	21	None	replace
27	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [CE]  cannot  find  symbol  amount  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0);	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  cannot  find  symbol  amount	21	None	replace
28	[BUG]  [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  offset+len,  _outputBuffer,  0,  len);	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	21	None	replace
29	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _flushBuffer();  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	_flushBuffer();	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	compilable	  [FE]  AssertionFailedError  	21	1	replace
30	[BUG]  [BUGGY]  _flushBuffer();  [FE]  AssertionFailedError  [FE]                    AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _flushBuffer();  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_flushBuffer();	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	compilable	  [FE]  AssertionFailedError  	21	1	replace
31	[BUG]  [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	49	None	replace
32	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
33	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
34	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
35	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
36	[BUG]  [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	49	None	replace
37	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+1,  len,  _outputBuffer,  0);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,char[],int)	58	None	replace
38	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+1,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+1,    _outputBuffer,    0);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	58	None	replace
39	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  timeout    	compilable	timeout	4	1	add
40	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  timeout    	compilable	timeout	4	1	add
41	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  timeout    	non-compiled	[CE]  ';'  expected	4	None	add
42	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  [CE]  ')'  expected  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,	  timeout    	non-compiled	[CE]  ')'  expected	4	None	add
43	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0	  timeout    	non-compiled	[CE]  ')'  expected	4	None	add
44	[BUG]  [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  _outputTail,  len);  [CE]  no  suitable  method  found  for  write(String,int,char[],int,int)  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  offset+room,  _outputBuffer,  _outputTail,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  offset+room,  _outputBuffer,  _outputTail,  len);	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,char[],int,int)	36	None	replace
45	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	36	1	replace
46	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	36	1	replace
47	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail,  len);  _outputTail  =  len;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputTail,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	36	None	replace
48	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  0,  len);  _outputTail  =  len;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  0,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  0,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	36	None	replace
49	[BUG]  [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(_outputTail  >=  _outputEnd)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(_outputTail  >=  _outputEnd)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
50	[BUG]  [BUGGY]  if(_outputTail  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(_outputTail  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(_outputTail  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
51	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
52	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  if(_outputTail  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  if(_outputTail  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
53	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset    +room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
54	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset    +room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
55	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset    +room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
56	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.writeRawLong(text,  offset  +room,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset    +room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
58	[BUG]  [BUGGY]  _writer.write(text,  0,  len  +  1);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  len  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  0,  len  +  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
59	[BUG]  [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputTail);  [CE]  no  suitable  method  found  for  write(String,int,int,char[],int)  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  0,  len,  _outputBuffer,  _outputTail);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  write(String,int,int,char[],int)	23	None	replace
60	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  len  -  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	_writer.write(text,  0,  len  -  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
61	[BUG]  [BUGGY]  _writer.write(text,  0,  len  -  1);  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  len  -  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  0,  len  -  1);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
62	[BUG]  [BUGGY]  if(len  >  0)  {  if(len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  if(len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  if(len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    <    =    0)    {    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
63	[BUG]  [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  =  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  =  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    <    =    0)    {    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
64	[BUG]  [BUGGY]  if(len  >  0)  {  if(len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  if(len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  if(len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    <    =    0)    {    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
65	[BUG]  [BUGGY]  if(len  >  0)  {  if(len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  if(len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  if(len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    <    =    0)    {    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	25	None	replace
66	[BUG]  [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
67	[BUG]  [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
68	[BUG]  [BUGGY]  ||  len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
69	[BUG]  [BUGGY]  _writer.writeRawLong(text);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.writeRawLong(text);	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
70	[BUG]  [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  amount  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  offset+amount,  _outputBuffer,  0,  len);	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	non-compiled	[CE]  cannot  find  symbol  amount	20	None	replace
71	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	_writer.write(text);	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	compilable	  [FE]  AssertionFailedError  	20	1	replace
72	[BUG]  [BUGGY]  _writer.write(text);  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text);	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	compilable	  [FE]  AssertionFailedError  	20	1	replace
73	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
74	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	1	1	add
75	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	1	None	add
76	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  [CE]  ')'  expected  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,	  	non-compiled	[CE]  ')'  expected	1	None	add
77	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
78	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
79	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  If(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  If(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    If(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  ';'  expected	50	None	add
80	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  if(len  >  space)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  space  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  if(len  >  space)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    if(len  >  space)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  cannot  find  symbol  space	50	None	add
81	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	13	None	replace
82	[BUG]  [BUGGY]  text.getChars(0,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  amount  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(0,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(0,  offset+amount,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	13	None	replace
83	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputEnd)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    len    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	47	None	replace
84	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    len    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  length	47	None	replace
85	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  amount;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  amount;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    len    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  amount	47	None	replace
86	[BUG]  [BUGGY]  _writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  amount;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  amount;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  amount;	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    len    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol	47	None	replace
87	[BUG]  [BUGGY]  text.getChars(offset,  offset+alloc,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  alloc  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+alloc,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+alloc,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+alloc,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alloc	39	None	replace
88	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	40	None	replace
89	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	40	None	replace
90	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	40	None	replace
91	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
92	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
93	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  [CE]  cannot  find  symbol  amount  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	32	None	replace
94	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
95	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	15	None	replace
96	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
97	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  _outputHead,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  _outputHead,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+room,  _outputBuffer,  _outputHead,  0,  len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	6	None	replace
98	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  _outputTail,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+room,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	6	None	replace
99	[BUG]  [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+room,  _outputBuffer,  0,  len,  _outputTail);	  text.getChars(offset,    offset+room,    _outputBuffer,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	6	None	replace
100	[BUG]  [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(_outputTail!=  _outputEnd)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(_outputTail!=  _outputEnd)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    If(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	3	None	replace
101	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputEnd)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  amount	52	None	replace
102	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  amount	52	None	replace
103	[BUG]  [BUGGY]  if(len  >  _outputTail)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputTail)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputTail)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  amount	52	None	replace
104	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	compilable	  [FE]  ArrayStoreException  	38	1	replace
105	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	compilable	  [FE]  ArrayStoreException  	38	1	replace
106	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	compilable	  [FE]  ArrayStoreException  	38	1	replace
107	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	compilable	  [FE]  ArrayStoreException  	38	1	replace
108	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	38	None	replace
109	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	38	None	replace
110	[BUG]  [BUGGY]  if(len  >  0)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	30	None	replace
111	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	30	1	replace
112	[BUG]  [BUGGY]  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	30	1	replace
113	[BUG]  [BUGGY]  while((  _outputTail  +  len)>  _outputEnd)  {  _outputBuffer();  }  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  while((  _outputTail  +  len)>  _outputEnd)  {  _outputBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	while((  _outputTail  +  len)>  _outputEnd)  {  _outputBuffer();  }	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
114	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	_outputTail  =  len;	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	30	1	replace
115	[BUG]  [BUGGY]  _outputTail  =  len;  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_outputTail  =  len;	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	compilable	  [FE]  AssertionFailedError  	30	1	replace
116	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset,  len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	11	None	replace
117	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	11	None	replace
118	[BUG]  [BUGGY]  _writer.writeRawLong(text,  offset,  len);  [CE]  cannot  find  symbol  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.writeRawLong(text,  offset,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.writeRawLong(text,  offset,  len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
119	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
120	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  _writer.write(text,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    _writer.write(text,  0,  len);	  	compilable	  [FE]  AssertionFailedError  	22	1	add
121	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(len  >  0)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	22	None	add
122	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	22	None	add
123	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
124	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(len  >  0)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
125	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer.write(text,  0,  len);  }  [CE]  ';'  expected  [FE]            AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer.write(text,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(len  >  room)  {  if(_outputTail  >=  _outputEnd)  {  _outputBuffer.write(text,  0,  len);  }	  	non-compiled	[CE]  ';'  expected	22	None	add
126	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
127	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
128	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
129	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
130	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
131	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	54	1	add
132	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	54	None	add
133	[BUG]  [BUGGY]  If(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  If(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	If(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+alpha,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	44	None	replace
134	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
135	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
136	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	31	None	add
137	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
138	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
139	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	non-compiled	[CE]  ')'  expected	31	None	add
140	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  ';'  expected	18	None	replace
141	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  ';'  expected	18	None	replace
142	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  LAST_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  LAST_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  LAST_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  ';'  expected	18	None	replace
143	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  Len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  Len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  Len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  ';'  expected	18	None	replace
144	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len,  _outputTail);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	16	None	replace
145	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail,  _outputHead);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail,  _outputHead);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail,  _outputHead);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	16	None	replace
146	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail,  _outputEnd);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail,  _outputEnd);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail,  _outputEnd);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	16	None	replace
147	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputHead);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                    AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputHead);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputHead);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	16	None	replace
148	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  }	  if(len    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  amount	24	None	replace
149	[BUG]  [BUGGY]  while(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  while(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	while(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  if(len    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	57	1	add
151	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	compilable	  [FE]  AssertionFailedError  	57	1	add
152	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  Text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    Text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  Text	57	None	add
153	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _writer.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  _writer.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    _writer.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
154	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,  offset);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	57	None	add
155	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	57	None	add
156	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0,  len);	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ')'  expected	43	None	replace
157	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ')'  expected	43	None	replace
158	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0,  len));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0,  len));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+len,  _outputBuffer,  0,  len));	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
159	[BUG]  [BUGGY]  if(len  >  0)  {  if(_outputTail!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  if(_outputTail!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  if(_outputTail!=  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    timeout    	non-compiled	[CE]  ';'  expected	5	None	replace
160	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  text,  0));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  text,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  text,  0));	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
161	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(_writer.getChars(offset,  offset+len,  _outputBuffer,  0));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(_writer.getChars(offset,  offset+len,  _outputBuffer,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(_writer.getChars(offset,  offset+len,  _outputBuffer,  0));	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
162	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  _textRaw,  0));  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  _textRaw,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  _textRaw,  0));	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
163	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
164	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
165	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
166	[BUG]  [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
167	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  }  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	non-compiled	[CE]  cannot  find  symbol  amount	34	None	replace
168	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  length);  }  [CE]  cannot  find  symbol  length  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  length);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  length);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	non-compiled	[CE]  cannot  find  symbol  length	34	None	replace
169	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+anchor,  _outputBuffer,  0);  [CE]  cannot  find  symbol  anchor  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.getChars(offset,  offset+anchor,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.getChars(offset,  offset+anchor,  _outputBuffer,  0);	  text.getChars(offset,    offset+anchor,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  anchor	46	None	replace
170	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	12	None	replace
171	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  }  [CE]  cannot  find  symbol  TextUtilities  [FE]                  StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	12	None	replace
172	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  TextUtilities  [FE]                    StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	12	None	replace
173	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  len  +  1);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputHead,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	17	None	replace
174	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  _outputTail);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0,  _outputTail);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	42	None	replace
175	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  _outputHead);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	42	None	replace
176	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputTail,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	42	None	replace
177	[BUG]  [BUGGY]  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	Text.getChars(offset,  offset+room,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
178	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
179	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	9	None	replace
180	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.getChars(offset,  offset+room,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
181	[BUG]  [BUGGY]  Text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  Text  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  Text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	Text.getChars(offset,  offset+len,  _outputBuffer,  0);	  Text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  Text	29	None	replace
182	[BUG]  [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  amount  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	Text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len);	  Text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  amount	29	None	replace
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
184	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
185	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	non-compiled	[CE]  ';'  expected	33	None	add
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
187	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  AssertionFailedError  	33	1	add
188	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  }  [CE]  ')'  expected  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    if(len  >  room)  {  System.arraycopy(text,0  _outputBuffer,  _outputTail,  len);  }	  	non-compiled	[CE]  ')'  expected	33	None	add
189	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	56	None	replace
190	[BUG]  [BUGGY]  _writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
191	[BUG]  [BUGGY]  _writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
192	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  length;  }  [CE]  cannot  find  symbol  length  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  length;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  length;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  length	56	None	replace
193	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(room);  [CE]  cannot  find  symbol  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(room);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(room);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
194	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(len);  [CE]  cannot  find  symbol  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
195	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(room,  offset);  [CE]  cannot  find  symbol  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(room,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(room,  offset);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
196	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
197	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
198	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  If(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    If(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	non-compiled	[CE]  ';'  expected	35	None	add
199	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
200	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
201	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
202	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
203	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
204	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
205	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
206	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
207	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
208	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
209	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    If(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	non-compiled	[CE]  ';'  expected	37	None	add
210	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
211	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
212	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
213	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
214	[BUG]  [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||    len    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
215	[BUG]  [BUGGY]  ||  len  <  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  _outputEnd)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  ||    len    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
216	[BUG]  [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  ||    len    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
217	[BUG]  [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
218	[BUG]  [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  =  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
219	[BUG]  [BUGGY]  ||  len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  >=  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
220	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.getChars(offset,  offset+len,  _outputBuffer,  0);	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
221	[BUG]  [BUGGY]  _writer.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alloc  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.getChars(offset,  offset+alloc,  _outputBuffer,  0);	  _writer.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alloc	14	None	replace
222	[BUG]  [BUGGY]  if(len  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >=  0)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	28	None	replace
223	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+1room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	non-compiled	[CE]  ')'  expected	35	None	add
224	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;	  	non-compiled	[CE]  ';'  expected	35	None	add
225	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
226	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
227	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
228	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
229	[BUG]  [BUGGY]  Text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [CE]  cannot  find  symbol  alloc  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  Text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	Text.getChars(offset,  offset+alloc,  _outputBuffer,  0);	  Text.getChars(offset,    offset+amount,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  alloc	29	None	replace
230	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
231	[BUG]  [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  if(_outputTail  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
232	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	2	None	replace
233	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
234	[BUG]  [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  0;	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
235	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
236	[BUG]  [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
237	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
238	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
239	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
240	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [FE]  StringIndexOutOfBoundsException  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  _flushBuffer();  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
241	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputEnd)  {  while((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	30	None	replace
242	[BUG]  [BUGGY]  while((  _outputTail  +  amount)>  _outputEnd)  {  _flushBuffer();  }  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  while((  _outputTail  +  amount)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	while((  _outputTail  +  amount)>  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  cannot  find  symbol  amount	30	None	replace
243	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	7	None	add
244	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  TextUtilities  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);	  	non-compiled	[CE]  cannot  find  symbol  TextUtilities	7	None	add
245	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  TextUtilities.writeRawLong  [CE]  ';'  expected  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  TextUtilities.writeRawLong  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  TextUtilities.writeRawLong	  	non-compiled	[CE]  ';'  expected	7	None	add
246	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+1,  _outputBuffer,  0);	  	non-compiled	[CE]  ')'  expected	57	None	add
247	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(len,  _outputBuffer,  _outputTail);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(len,  _outputBuffer,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextRawLong  text  =  new  TextRawLong(len,  _outputBuffer,  _outputTail);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
248	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	  	non-compiled	[CE]  cannot  find  symbol  amount	37	None	add
249	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
250	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	37	1	add
251	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  alloc  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+alloc,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  alloc	24	None	replace
252	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
253	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
254	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [CE]  ';'  expected  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
255	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  TextUtilities.indexOf(  [CE]  ')'  expected  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  TextUtilities.indexOf(  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  TextUtilities.indexOf(	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	non-compiled	[CE]  ')'  expected	20	None	replace
256	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  qlen  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  qlen	51	None	replace
257	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toCharArray();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
258	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray()  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray()  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toCharArray()	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toCharArray();    }    	non-compiled	[CE]  ';'  expected	19	None	replace
259	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	compilable	  [FE]  ArrayStoreException  	38	1	replace
260	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  len;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	compilable	  [FE]  ArrayStoreException  	38	1	replace
261	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  +=  amount;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	38	None	replace
262	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
263	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
264	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
265	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  SHORT_WRITE;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
266	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputTail);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	13	None	replace
267	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+1room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	non-compiled	[CE]  ')'  expected	48	None	add
268	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;	  	non-compiled	[CE]  ';'  expected	48	None	add
269	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  null;  }  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  null;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  null;  }	  	non-compiled	[CE]  incompatible  types	48	None	add
270	[BUG]  [BUGGY]  &&  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  &&  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	&&  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
271	[BUG]  [BUGGY]  ||  len  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  >=  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
272	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  ';'  expected	18	None	replace
273	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputEnd  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  ';'  expected	18	None	replace
274	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString()  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString()  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  len;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text.toString()	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  ';'  expected	18	None	replace
275	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	15	None	replace
276	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputTail,  0,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	15	None	replace
277	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
278	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    	compilable	  [FE]  AssertionFailedError  	55	1	replace
279	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  [CE]  cannot  find  symbol  qlen  [FE]              StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset,  len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset,    len);    	non-compiled	[CE]  cannot  find  symbol  qlen	11	None	replace
280	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  qlen  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset  +room,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset    +room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  qlen	10	None	replace
281	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+alpha,  _outputBuffer,  0);	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ')'  expected	43	None	replace
282	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  _outputTail,  0,  len);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  _outputTail,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputHead,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int,int)	17	None	replace
283	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  [CE]  cannot  find  symbol  amount  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  _outputHead,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputHead,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	17	None	replace
284	[BUG]  [BUGGY]  text.getChars(offset,  offset+head,  _outputBuffer,  _outputHead,  0,  len);  [CE]  cannot  find  symbol  head  [FE]                    AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+head,  _outputBuffer,  _outputHead,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+head,  _outputBuffer,  _outputHead,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputHead,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  head	17	None	replace
285	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);	  	non-compiled	[CE]  ';'  expected	33	None	add
286	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0	  	non-compiled	[CE]  ')'  expected	1	None	add
287	[BUG]  [BUGGY]  &&  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  &&  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	&&  len  <  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
288	[BUG]  [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
289	[BUG]  [BUGGY]  ||  len  ==  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  ==  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  ==  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
290	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  timeout    	compilable	timeout	4	1	add
291	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  timeout  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  timeout    	compilable	timeout	4	1	add
292	[BUG]  [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    len    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  amount	47	None	replace
293	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputEnd)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	56	None	replace
294	[BUG]  [BUGGY]  &&  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  &&  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	&&  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  ||    len    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
295	[BUG]  [BUGGY]  _writer.write(text,  0,  amount);  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  amount);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  0,  amount);	          _writer.write(text,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	23	None	replace
296	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	_writer.write(text,  0,  offset);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
297	[BUG]  [BUGGY]  _writer.write(text,  0,  offset);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  0,  offset);	          _writer.write(text,    0,    len);    	compilable	  [FE]  AssertionFailedError  	23	1	replace
298	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    while(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;	  	non-compiled	[CE]  ';'  expected	31	None	add
299	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
300	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
301	[BUG]  [BUGGY]  if(len  >  _outputMaxContiguous)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  _outputMaxContiguous  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputMaxContiguous)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputMaxContiguous)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  _outputMaxContiguous	52	None	replace
302	[BUG]  [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  [CE]  ';'  expected  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  ';'  expected	9	None	replace
303	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	36	1	replace
304	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	36	1	replace
305	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead,  _outputTail);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	36	None	replace
306	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead,  len);  _outputTail  =  len;  }  [CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  _outputHead,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  method  arraycopy  in  class  System  cannot  be  applied  to  given  types;	36	None	replace
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  _outputEnd)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  AssertionFailedError  	34	1	replace
308	[BUG]  [BUGGY]  if(len  >  _outputEnd)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  _outputEnd)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  _outputEnd)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  AssertionFailedError  	34	1	replace
309	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  ';'  expected	50	None	add
310	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
311	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    while(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  AssertionFailedError  	50	1	add
312	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  _outputBuffer,  0));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  _outputBuffer,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(_outputBuffer.getChars(offset,  offset+len,  _outputBuffer,  0));	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
313	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+amount,  _outputBuffer,  0));	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
314	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  writer.write(text,  0,  len);  [CE]  cannot  find  symbol  writer  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  writer.write(text,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    writer.write(text,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol  writer	22	None	add
315	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  Writer  w  =  _writer.create(text,  0,  len);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  Writer  w  =  _writer.create(text,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    Writer  w  =  _writer.create(text,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
316	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  Writer  w  =  _writer.createChildLong(text,  0,  len);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  Writer  w  =  _writer.createChildLong(text,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    Writer  w  =  _writer.createChildLong(text,  0,  len);	  	non-compiled	[CE]  cannot  find  symbol	22	None	add
317	[BUG]  [BUGGY]  while(len  >  0)  {  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  while(len  >  0)  {  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	while(len  >  0)  {  len  =  text.getChars(offset,  offset+len,  _outputBuffer,  0);	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    timeout    	non-compiled	[CE]  ';'  expected	5	None	replace
318	[BUG]  [BUGGY]  while(len  >  0)  {  len  =  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  while(len  >  0)  {  len  =  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	while(len  >  0)  {  len  =  text.getChars(offset,  offset+amount,  _outputBuffer,  0);	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    while(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    timeout    	non-compiled	[CE]  ';'  expected	5	None	replace
319	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  _outputTail  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  _outputTail  +  1);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	42	None	replace
320	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+1,  _outputBuffer,  0);  }	  	non-compiled	[CE]  cannot  find  symbol  amount	54	None	add
321	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail  +  1);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail  +  1);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  0,  len,  _outputTail  +  1);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len,    _outputTail);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int,int)	16	None	replace
322	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  _outputTail);  [CE]  cannot  find  symbol  amount  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  len,  _outputTail);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    len,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  amount	16	None	replace
323	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  ArrayStoreException  	33	1	add
324	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  }	  	compilable	  [FE]  ArrayStoreException  	33	1	add
325	[BUG]  [BUGGY]  _writer.write(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text.getChars(offset,  offset+amount,  _outputBuffer,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text.getChars(offset,  offset+amount,  _outputBuffer,  0));	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  cannot  find  symbol  amount	18	None	replace
326	[BUG]  [BUGGY]  _writer.write(text.getChars(offset,  offset+qlen,  _outputBuffer,  0));  [CE]  cannot  find  symbol  qlen  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text.getChars(offset,  offset+qlen,  _outputBuffer,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text.getChars(offset,  offset+qlen,  _outputBuffer,  0));	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text.toString();    }    	non-compiled	[CE]  cannot  find  symbol  qlen	18	None	replace
327	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset  +len,  _outputBuffer,  0);  [CE]  cannot  find  symbol  TextUtilities  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset  +len,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset  +len,  _outputBuffer,  0);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset    +room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	10	None	replace
328	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  amount;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  amount;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputHead  =  0;  _outputTail  <  amount;  _outputTail++)  {  _outputBuffer[_outputTail]  =  text;  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail]    =    text;    }    	non-compiled	[CE]  ';'  expected	20	None	replace
329	[BUG]  [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  =  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
330	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(_writeBuffer.getChars(offset,  offset+len,  _outputBuffer,  0));  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(_writeBuffer.getChars(offset,  offset+len,  _outputBuffer,  0));  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(_writeBuffer.getChars(offset,  offset+len,  _outputBuffer,  0));	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0));    	non-compiled	[CE]  cannot  find  symbol	45	None	replace
331	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  if(len  >  0)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
332	[BUG]  [BUGGY]  if(amount  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(amount  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(amount  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len    >    0)    {    text.getChars(offset,    offset+1,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	55	None	replace
333	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+then,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  then  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+then,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  text.getChars(offset,  offset+then,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    If(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  then	3	None	replace
334	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	32	None	replace
335	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
336	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
337	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
338	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	32	1	replace
339	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
340	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	compilable	  [FE]  StringIndexOutOfBoundsException  	7	1	add
341	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  cannot  find  symbol  qlen  [FE]      StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  cannot  find  symbol  qlen	7	None	add
342	[BUG]  [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]        StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0);  text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,        offset+room,        _outputBuffer,        0);        text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,  offset+room,  _outputBuffer,  0,  len);  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	7	None	add
343	[BUG]  [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  [CE]  cannot  find  symbol  amount  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+amount,  _outputBuffer,  0,  _outputHead);	  text.getChars(offset,    offset+amount,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  amount	13	None	replace
344	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	36	1	replace
345	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  0;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	36	1	replace
346	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [CE]  cannot  find  symbol  amount  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  amount);  _outputTail  =  len;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	36	None	replace
347	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  len  +=  length;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    len    +=    length;    }    	non-compiled	[CE]  cannot  find  symbol  amount	47	None	replace
348	[BUG]  [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  _outputEnd;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  _outputEnd;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  for(int  _outputTail  =  0;  _outputHead  <  _outputEnd;  _outputTail++)  {  _outputBuffer[_outputTail  +]  =  text.toCharArray();  }	          if(len    >    room)    {    for(int    _outputTail    =    0;    _outputHead    <    len;    _outputTail++)    {    _outputBuffer[_outputTail    +]    =    text.toCharArray();    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
349	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputTail);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputTail);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  0,  _outputTail);	  text.getChars(offset,    offset+len,    _outputBuffer,    0,    _outputTail);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	42	None	replace
350	[BUG]  [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(len);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+1,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,    offset+1,    _outputBuffer,    0);    TextRawLong  text  =  new  TextRawLong(len);	  	non-compiled	[CE]  cannot  find  symbol	57	None	add
351	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+alpha,  _outputBuffer,  0);  }	  if(len    <    =    0)    {    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	25	None	replace
352	[BUG]  [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  if(len  >  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    <    =    0)    {    if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  ';'  expected	25	None	replace
353	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  ArrayStoreException  	37	1	add
354	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  len;  }	  	compilable	  [FE]  ArrayStoreException  	37	1	add
355	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
356	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
357	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
358	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	48	1	add
359	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  amount;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	56	None	replace
360	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  len;  }  [CE]  cannot  find  symbol  amount  [FE]          AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  System.arraycopy(text,  offset+amount,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  +=  len;  }	          if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    +=    amount;    }    	non-compiled	[CE]  cannot  find  symbol  amount	56	None	replace
361	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0,  len);  [CE]  cannot  find  symbol  qlen  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0,  len);	  text.getChars(offset,    offset+room,    _outputBuffer,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  qlen	6	None	replace
362	[BUG]  [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  if(len  >  room)  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  Text  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  if(len  >  room)  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    if(len  >  room)  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  	non-compiled	[CE]  cannot  find  symbol  Text	50	None	add
363	[BUG]  [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  ||    len    <    SHORT_WRITE)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
364	[BUG]  [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  }  [CE]  no  suitable  method  found  for  getChars(int,int,int,int)  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len        >        0)        {        text.getChars(offset,        offset+len,        _outputBuffer,        0);        }        if(len    >    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    }    if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputBuffer,  0);  }  if(len  >  0)  {  text.getChars(offset,  offset+len,  _outputTail,  0);  }	  	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,int,int)	1	None	add
365	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
366	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
367	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
368	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }  [FE]  ArrayStoreException  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputHead,  len);  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    }    	compilable	  [FE]  ArrayStoreException  	34	1	replace
369	[BUG]  [BUGGY]  if(len  <  1)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  amount  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  1)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  1)  {  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  }	  if(len    >    0)    {    text.getChars(offset,    offset+amount,    _outputBuffer,    0);    }    	non-compiled	[CE]  cannot  find  symbol  amount	24	None	replace
370	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	31	1	add
371	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	31	1	add
372	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
373	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	31	1	add
374	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	35	1	add
375	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  <  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  ArrayStoreException  	35	1	add
376	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
377	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >  room)  {  System.arraycopy(text,  offset+1,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
378	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
379	[BUG]  [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          if(len  >  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputTail,    len);    _outputTail    =    len;    }    if(len  >=  room)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputTail,  len);  _outputTail  =  len;  }	  	compilable	  [FE]  AssertionFailedError  	35	1	add
380	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room);  [CE]  cannot  find  symbol  qlen  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextRawLong  text  =  new  TextRawLong(room);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextRawLong    text    =    new    TextRawLong(room);    	non-compiled	[CE]  cannot  find  symbol  qlen	41	None	replace
381	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
382	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [FE]  StringIndexOutOfBoundsException  [FE]    StringIndexOutOfBoundsException    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    text.getChars(offset,    offset+room,    _outputBuffer,    0);    	compilable	  [FE]  StringIndexOutOfBoundsException  	8	1	replace
383	[BUG]  [BUGGY]  if(len  <  =  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  =  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  =  room)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  if(len    >    room)    {    text.getChars(offset,    offset+room,    _outputBuffer,    0);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
384	[BUG]  [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0);  [CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)  [FE]                AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+len,  _outputBuffer,  _outputHead,  0);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputHead,    0,    len);    	non-compiled	[CE]  no  suitable  method  found  for  getChars(int,int,char[],int,int)	17	None	replace
385	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputHead,  0,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]                  AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputHead,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset,  len,  _outputBuffer,  _outputHead,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputHead,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	17	None	replace
386	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [CE]  cannot  find  symbol  qlen  [FE]                StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text,  offset);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text,    offset);    	non-compiled	[CE]  cannot  find  symbol  qlen	12	None	replace
387	[BUG]  [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [CE]  cannot  find  symbol  qlen  [FE]        StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	text.getChars(offset,  offset+qlen,  _outputBuffer,  0);  TextUtilities.writeRawLong(text);	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    TextUtilities.writeRawLong(text);    	non-compiled	[CE]  cannot  find  symbol  qlen	40	None	replace
388	[BUG]  [BUGGY]  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  [CE]  cannot  find  symbol  TextUtilities  [FE]            AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail,  0,  len);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextUtilities.writeRawLong(text,  offset+len,  _outputBuffer,  _outputTail,  0,  len);	  text.getChars(offset,    offset+len,    _outputBuffer,    _outputTail,    0,    len);    	non-compiled	[CE]  cannot  find  symbol  TextUtilities	15	None	replace
389	[BUG]  [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [CE]  cannot  find  symbol  amount  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  0)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  len);  _outputTail  +=  amount;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	38	None	replace
390	[BUG]  [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [CE]  cannot  find  symbol  amount  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  >  room)  {  System.arraycopy(text,  0,  _outputBuffer,  _outputTail,  amount);  _outputTail  +=  len;  }	          if(len    >    room)    {    System.arraycopy(text,    0,    _outputBuffer,    _outputTail,    len);    _outputTail    +=    len;    }    	non-compiled	[CE]  cannot  find  symbol  amount	38	None	replace
391	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
392	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  _writer.write(text,  0,  len);  }  else  {  _writer.write(text,  0,  len);  }	  	compilable	  [FE]  AssertionFailedError  	22	1	add
393	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(text.length()  >  room)  {  _writer.write(text,  0,  len);  }  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(text.length()  >  room)  {  _writer.write(text,  0,  len);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  if(text.length()  >  room)  {  _writer.write(text,  0,  len);  }	  	non-compiled	[CE]  ';'  expected	22	None	add
394	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(text!=  null)  {  if(len  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(text!=  null)  {  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(text!=  null)  {  if(len  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	22	None	add
395	[BUG]  [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(len  >  room)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]          AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]          _writer.write(text,  0,  len);  if(_writer!=  null)  {  if(len  >  room)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	                _writer.write(text,    0,    len);    if(_writer!=  null)  {  if(len  >  room)  {  _flushBuffer();  }	  	non-compiled	[CE]  ';'  expected	22	None	add
396	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]          StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	9	None	replace
397	[BUG]  [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [CE]  cannot  find  symbol  safeOutputEnd  [FE]            StringIndexOutOfBoundsException      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(_outputTail  >  safeOutputEnd)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  }  else  {  Text.getChars(offset,  offset+room,  _outputBuffer,  0);  }	  text.getChars(offset,    offset+room,    _outputBuffer,    0);    Text.getChars(offset,    offset+room,    _outputBuffer,    0);    	non-compiled	[CE]  cannot  find  symbol  safeOutputEnd	9	None	replace
398	[BUG]  [BUGGY]  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
399	[BUG]  [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [FE]  ArrayStoreException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	if(len  <  SHORT_WRITE)  {  System.arraycopy(text,  offset+room,  _outputBuffer,  _outputHead,  _outputTail);  _outputTail  =  len;  }	  if(len    >    room)    {    System.arraycopy(text,    offset+room,    _outputBuffer,    _outputHead,    _outputTail);    _outputTail    =    len;    }    	compilable	  [FE]  ArrayStoreException  	49	1	replace
400	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  len  *  SHORT_WRITE);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	add	_writer.write(text,  0,  len  *  SHORT_WRITE);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	1	replace
401	[BUG]  [BUGGY]  _writer.write(text,  0,  len  *  SHORT_WRITE);  [FE]  StringIndexOutOfBoundsException  [FE]    AssertionFailedError    [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  _writer.write(text,  0,  len  *  SHORT_WRITE);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	_writer.write(text,  0,  len  *  SHORT_WRITE);	          _writer.write(text,    0,    len);    	compilable	  [FE]  StringIndexOutOfBoundsException  	23	1	replace
402	[BUG]  [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  ')'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	TextRawLong  text  =  new  TextRawLong(text.getChars(offset,  offset+room,  _outputBuffer,  0);	  TextRawLong    text    =    new    TextRawLong(text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  ')'  expected	43	None	replace
403	[BUG]  [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  ||  len  <  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	||  len  <  0)  {  text.getChars(offset,  offset+room,  _outputBuffer,  0);	  ||    len    <    0)    {    text.getChars(offset,    offset+len,    _outputBuffer,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
404	[BUG]  [BUGGY]  While((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]      while  (len  >  _outputEnd)  {  int  amount  =  _outputEnd;  text.getChars(offset,  offset+amount,  _outputBuffer,  0);  _outputHead  =  0;  _outputTail  =  amount;  _flushBuffer();  offset  +=  amount;  len  -=  amount;  }        [BUGGY]  While((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }  [BUGGY]      _outputHead  =  0;  _outputTail  =  len;  }  [CLASS]  WriterBasedJsonGenerator  [METHOD]  writeRawLong  [RETURN_TYPE]  void  String  text  [VARIABLES]  SerializableString  _currentEscape  name  sstr  text  String  text  boolean  int  SHORT_WRITE  _outputEnd  _outputHead  _outputTail  amount  features  len  length  offset  qlen  room  start  status  Writer  _writer  w  char[]  HEX_CHARS  _entityBuffer  _outputBuffer  quoted  text  	projects/JacksonCore18/src/main/java/com/fasterxml/jackson/core/json/WriterBasedJsonGenerator.java	1.0	494	494	1	replace	While((  _outputTail  +  len)>  _outputEnd)  {  _flushBuffer();  }	          if(len    >    room)    {    while((    _outputTail    +    len)>    _outputEnd)    {    _flushBuffer();    }    	non-compiled	[CE]  ';'  expected	30	None	replace
