projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(null);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(null,null);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(DEFAULT_VERSION,DEFAULT_VERSION,DEFAULT_VERSION);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(DEFAULT_VERSION,DEFAULT_VERSION,DEFAULT_VERSION,DEFAULT_VERSION);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(DEFAULT_VERSION,DEFAULT_VERSION);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(DEFAULT_VERSION,DEFAULT_VERSION,DEFAULT_VERSION,DEFAULT_VERSION,DEFAULT_VERSION);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(DEFAULT_TYPE,DEFAULT_TYPE);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super();
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(DEFAULT_TYPE,DEFAULT_TYPE,DEFAULT_TYPE);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this(DEFAULT_TYPE,DEFAULT_TYPE,DEFAULT_TYPE,DEFAULT_TYPE);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.toString(maxCodeLen));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+getClass().getName());
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.toString(this.maxCodeLen));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.getInstance());
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.toString(this.maxCodeLen),this.maxCodeLen);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkArgument(!isEnabled(Feature.QUOTE_FIELD_NAMES));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(!isEnabled(Feature.QUOTE_FIELD_NAMES));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkArgument(this.isEnabled(Feature.QUOTE_FIELD_NAMES));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkArgument(!isEnabled(Feature.QUOTE_NON_NULL_OBJECT));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(this.isEnabled(Feature.QUOTE_FIELD_NAMES));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(!isEnabled(Feature.QUOTE_NON_NULL_OBJECT));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkArgument(this.isEnabled(Feature.QUOTE_NON_NULL_OBJECT));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(!isEnabled(Feature.QUOTE_FIELD_NAMES),false);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.toString(maxLength));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.getInstanceUTF8());
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.class);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.toString(maxCodeLen-1));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("DoubleMetaphone:"+DoubleMetaphone.toString(getMean()));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("Dirtymethod:"+System.identityHashCode(System.identityHashCode(this)+")");
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("Dirtymethod:"+System.identityHashCode(System.identityHashCode(getProperty())+")");
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("Dirtymethod:"+System.identityHashCode(System.identityHashCode(getProperty()));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("Dirtymethod:"+System.identityHashCode(System.identityHashCode(getPropertyName())+")");
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("Dirtymethod:"+System.identityHashCode(System.identityHashCode(prefix)));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("Dirtymethod:"+System.identityHashCode(System.identityHashCode(getModule())+")");
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65super("Dirtymethod:"+System.identityHashCode(System.identityHashCode(prefix)+")");
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this.options=newDoubleMetaphone(L_R_N_M_B_H_F_V_W_SPACE);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65this.options=newDoubleMetaphone(L_T_K_S_N_M_B_Z);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(!isEnabled(Feature.QUOTE_FIELD_NAMES);
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(!isEnabled(Feature.QUOTE_FIELD_NAMES[0],false));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(!isEnabled(Feature.QUOTE_FIELD_NAMES,true));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkState(!isEnabled(Feature.QUOTE_FIELD_NAMES[0]));
projects/Codec3/src/java/org/apache/commons/codec/language/DoubleMetaphone.java65Preconditions.checkArgument(!isEnabled(Feature.QUOTE_FIELD_NAMES);
