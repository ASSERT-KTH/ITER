bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int  len  =  _inputBuffer.length();  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int  len  =  _inputBuffer.length();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
2	[BUG]  [BUGGY]  int  fractLen  =  _inputBuffer.length();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int  fractLen  =  _inputBuffer.length();  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int  fractLen  =  _inputBuffer.length();	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
3	[BUG]  [BUGGY]  int  fractLen  =  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int  fractLen  =  _inputBuffer.length;  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int  fractLen  =  _inputBuffer.length;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
4	[BUG]  [BUGGY]  int  fractLen  =  _inputBuffer[len];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int  fractLen  =  _inputBuffer[len];  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int  fractLen  =  _inputBuffer[len];	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  expLen,  fractLen);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  expLen,  fractLen);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  expLen,  fractLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    expLen);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  endPtr,  len);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  endPtr,  len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  endPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    expLen);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  fractLen);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  fractLen);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  fractLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    expLen);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  expLen  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  expLen  +  1);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  expLen  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    expLen);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  expLen,  fractLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  expLen,  fractLen);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len,  expLen,  fractLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    expLen);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  0,  len);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  0,  len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  0,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    inputLen);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
11	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  expLen  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  expLen  +  1);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  expLen  +  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  expLen);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  expLen);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  +  1,  expLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  len,  fractLen);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  len,  fractLen);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  len,  fractLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    fractLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  int  negativeLen  =  _parseNumber2(len);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int  negativeLen  =  _parseNumber2(len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int  negativeLen  =  _parseNumber2(len);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
15	[BUG]  [BUGGY]  Integer  negative  =  _parseInt(len);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  Integer  negative  =  _parseInt(len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	Integer  negative  =  _parseInt(len);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
16	[BUG]  [BUGGY]  Integer  intLen  =  _inputBuffer[len];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  Integer  intLen  =  _inputBuffer[len];  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	Integer  intLen  =  _inputBuffer[len];	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  int  negativeLen  =  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int  negativeLen  =  _inputBuffer.length;  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int  negativeLen  =  _inputBuffer.length;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  fractLen,  expLen);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  fractLen,  expLen);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  fractLen,  expLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    expLen);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr,  expLen);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr,  expLen);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  endPtr,  expLen);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len,    expLen);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
20	[BUG]  [BUGGY]  _textBuffer.resetWithSegmented(_inputBuffer,  startPtr,  len);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithSegmented(_inputBuffer,  startPtr,  len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithSegmented(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    inputLen);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  _textBuffer.resetWithFloatingPoint(_inputBuffer,  startPtr,  len);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithFloatingPoint(_inputBuffer,  startPtr,  len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithFloatingPoint(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    inputLen);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  1);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithShared(_inputBuffer,  startPtr,  len  *  1);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    len    +    1);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  int[]  fractLen  =  _symbols.get(ch);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int[]  fractLen  =  _symbols.get(ch);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int[]  fractLen  =  _symbols.get(ch);	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  int  fractLen  =  _symbols.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  int  fractLen  =  _symbols.length;  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	int  fractLen  =  _symbols.length;	      	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  _textBuffer.resetWithCapacity(_inputBuffer,  startPtr,  len);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithCapacity(_inputBuffer,  startPtr,  len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithCapacity(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    fractLen);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
26	[BUG]  [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len);  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      if  (expLen  ==  0)  {  reportUnexpectedNumberChar(ch,     "Exponent  indicator  not  followed  by  a  digit   ");  }  }  --ptr;  //  need  to  push  back  following  separator  _inputPtr  =  ptr;  int  len  =  ptr-startPtr;    [BUGGY]  _textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len);  [BUGGY]    return  reset(negative,  intLen,  fractLen,  expLen);  }  while  (false);  _inputPtr  =  negative  ?  (startPtr+1)  :  startPtr;  return  _parseNumber2(negative);  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	953	953	2	replace	_textBuffer.resetWithSeparator(_inputBuffer,  startPtr,  len);	  _textBuffer.resetWithShared(_inputBuffer,    startPtr,    expLen);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
