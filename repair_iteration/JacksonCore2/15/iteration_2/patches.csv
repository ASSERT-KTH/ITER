bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ch  ==  ':'  ||  ch  ==  ':')  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  ':'  ||  ch  ==  ':')  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  ':'  ||  ch  ==  ':')  {	  if(ch    ==    '.'    ||    ch    ==    ':')    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
2	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  d  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  d  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  d	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
4	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
5	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
8	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  ch  =(char)_inputBuffer[ptr++];  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	ch  =(char)_inputBuffer[ptr++];	  ch    =(int)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  ch  =(int)_inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  ch  =(int)_inputBuffer[ptr++]  +  1;  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	ch  =(int)_inputBuffer[ptr++]  +  1;	  ch    =(int)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  if(ch  <  INT_1  ||  ch  >  INT_1)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_1  ||  ch  >  INT_1)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_1  ||  ch  >  INT_1)  {	  if(ch    <    INT_0    ||    ch    >=    INT_9)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  if(ch!=  '.'  ||  ch  ==  'e'  ||  ch  ==  'E')  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch!=  '.'  ||  ch  ==  'e'  ||  ch  ==  'E')  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch!=  '.'  ||  ch  ==  'e'  ||  ch  ==  'E')  {	  if(ch    ==    '.'    ||    ch    ==    'e'    ||    ch    ==    'E')    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
12	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_10)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_10)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_10)  {	  if(ch    ==    INT_0    ||    ch    ==    INT_10)    {    	non-compiled	[CE]  <identifier>  expected	21	None	replace
13	[BUG]  [BUGGY]  if(ch  <  INT_dummy_loop  ||  ch  >  INT_9)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_dummy_loop  ||  ch  >  INT_9)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_dummy_loop  ||  ch  >  INT_9)  {	  if(ch    <    INT_dummy_loop)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
14	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  &  0xff;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  &  0xff;  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	Integer  ptr  =  _inputBuffer[ptr++]  &  0xff;	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
15	[BUG]  [BUGGY]  int  ptr  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  int  ptr  =  _inputBuffer[ptr++];  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	int  ptr  =  _inputBuffer[ptr++];	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
16	[BUG]  [BUGGY]  if(ch  <  INT_len  ||  ch  >  INT_10)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_len  ||  ch  >  INT_10)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_len  ||  ch  >  INT_10)  {	  if(ch    <    INT_len    ||    ch    >    INT_9)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
21	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr!=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr!=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr!=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
22	[BUG]  [BUGGY]  if(ch  ==  INT_DECIMAL_FIRST  ||  ch  ==  INT_0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_DECIMAL_FIRST  ||  ch  ==  INT_0)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_DECIMAL_FIRST  ||  ch  ==  INT_0)  {	  if(ch    ==    INT_DECIMAL_FIRST    ||    ch    ==    INT_DECIMAL_FIRST)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
23	[BUG]  [BUGGY]  _inputPtr  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  _inputPtr  =  _inputBuffer[ptr++];  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	_inputPtr  =  _inputBuffer[ptr++];	  if(ptr    >=    inputLen)    {    if(_inputPtr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
24	[BUG]  [BUGGY]  if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_0)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_0)  {	  if(ch    ==    INT_DECEMBER)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  d  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  d  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  d	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
26	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
27	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
28	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0)  {	  if(ch    <    INT_dummy_loop)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
29	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  if(dummy_loop)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  if(dummy_loop)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  if(dummy_loop)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
30	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  +  1;  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	Integer  ptr  =  _inputBuffer[ptr++]  +  1;	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
32	[BUG]  [BUGGY]  if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_FF)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_FF)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_FF)  {	  if(ch    ==    INT_DECEMBER)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
33	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  if(!_tokenIncomplete)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  if(!_tokenIncomplete)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  if(!_tokenIncomplete)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(!_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
34	[BUG]  [BUGGY]  if(ch  <  dummy_loop)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  dummy_loop)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  dummy_loop)  {	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    	non-compiled	[CE]  <identifier>  expected	23	None	replace
35	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_l  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_l  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_l	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
37	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  int  fractLen  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ptr  >=  inputLen)  {  int  fractLen  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ptr  >=  inputLen)  {  int  fractLen  =  _inputBuffer[ptr++];  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
38	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
39	[BUG]  [BUGGY]  if(_inputPtr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(_inputPtr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(_inputPtr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(_inputPtr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
40	[BUG]  [BUGGY]  Integer  fractLen  =  _inputPtr;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  Integer  fractLen  =  _inputPtr;  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	Integer  fractLen  =  _inputPtr;	  if(ptr    >=    inputLen)    {    if(_inputPtr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
41	[BUG]  [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(dummy_loop)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  JsonToken.VALUE_NULL)  {  if(dummy_loop)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  JsonToken.VALUE_NULL)  {  if(dummy_loop)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
42	[BUG]  [BUGGY]  Integer  fractLen  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  Integer  fractLen  =  _inputBuffer[ptr++];  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	Integer  fractLen  =  _inputBuffer[ptr++];	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
43	[BUG]  [BUGGY]  if(ch  <  INT_DECIMAL_FIRST  ||  ch  >  INT_DECIMAL_FIRST)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_DECIMAL_FIRST  ||  ch  >  INT_DECIMAL_FIRST)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_DECIMAL_FIRST  ||  ch  >  INT_DECIMAL_FIRST)  {	  if(ch    ==    INT_DECIMAL_FIRST    ||    ch    ==    INT_DECIMAL_FIRST)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
44	[BUG]  [BUGGY]  if(ch  ==  'e'  ||  ch  ==  'E'  ||  ch  ==  'E')  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  'e'  ||  ch  ==  'E'  ||  ch  ==  'E')  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  'e'  ||  ch  ==  'E'  ||  ch  ==  'E')  {	  if(ch    ==    'e'    ||    ch    ==    'E')    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
45	[BUG]  [BUGGY]  if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_DCEMBER)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_DCEMBER)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_DECEMBER  ||  ch  ==  INT_DCEMBER)  {	  if(ch    ==    INT_DECEMBER)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
46	[BUG]  [BUGGY]  if(ch  ==  INT_DECEMBER  &&  ch  <  =  INT_0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_DECEMBER  &&  ch  <  =  INT_0)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_DECEMBER  &&  ch  <  =  INT_0)  {	  if(ch    ==    INT_DECEMBER)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  Integer  ptr  =  _inputPtr[ptr++];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  Integer  ptr  =  _inputPtr[ptr++];  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	Integer  ptr  =  _inputPtr[ptr++];	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
48	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++].intValue;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++].intValue;  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	Integer  ptr  =  _inputBuffer[ptr++].intValue;	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
49	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    inputLen)    {    if(dummy_loop)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
51	[BUG]  [BUGGY]  if(ch  ==  INT_DECIMAL_FIRST  ||  ch  ==  INT_DCIMAL_FIRST)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  ==  INT_DECIMAL_FIRST  ||  ch  ==  INT_DCIMAL_FIRST)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  ==  INT_DECIMAL_FIRST  ||  ch  ==  INT_DCIMAL_FIRST)  {	  if(ch    ==    INT_DECIMAL_FIRST    ||    ch    ==    INT_DECIMAL_FIRST)    {    	non-compiled	[CE]  <identifier>  expected	20	None	replace
52	[BUG]  [BUGGY]  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	int  dummy_loop  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
53	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  int  inputLen  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  int  inputLen  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  int  inputLen  =  _inputBuffer[ptr++];  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    int    dummy_loop    =    _inputBuffer[ptr++];    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
54	[BUG]  [BUGGY]  if(ch!=  INT_0  ||  ch  ==  INT_9)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;        [BUGGY]  if(ch!=  INT_0  ||  ch  ==  INT_9)  {  [BUGGY]      fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  fract_loop;  }  ++fractLen;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	905	907	2	replace	if(ch!=  INT_0  ||  ch  ==  INT_9)  {	  if(ch    ==    '.'    ||    ch    ==    'e'    ||    ch    ==    'E')    {    	non-compiled	[CE]  <identifier>  expected	22	None	replace
