bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  int  startPtr  =  _inputBuffer.length-1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputBuffer.length-1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputBuffer.length-1;	  final    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
2	[BUG]  [BUGGY]  final  int  startPtr  =  _inputEnd-1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputEnd-1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputEnd-1;	  final    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
3	[BUG]  [BUGGY]  final  int  startPtr  =  _inputBuffer.length-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputBuffer.length-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputBuffer.length-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;	  final    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  final  int  startPtr  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputBuffer[ptr++];  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputBuffer[ptr++];	  final    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  int  startPtr  =  _inputEnd-2;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  int  startPtr  =  _inputEnd-2;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	int  startPtr  =  _inputEnd-2;	  int    startPtr    =    _inputEnd-1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]  if(negative)  {  int  startPtr  =  _inputBuffer.length-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(negative)  {  int  startPtr  =  _inputBuffer.length-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(negative)  {  int  startPtr  =  _inputBuffer.length-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  }	  int    startPtr    =    _inputBuffer.length-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  int  startPtr  =  ptr  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  int  startPtr  =  ptr  +  1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	int  startPtr  =  ptr  +  1;	  int    startPtr    =    ptr    -    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
8	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(negative)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(ptr  >=  _inputEnd)  {  if(negative)  {  break  dummy_loop;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(ptr  >=  _inputEnd)  {  if(negative)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(!negative)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(ptr  >=  _inputEnd)  {  if(!negative)  {  break  dummy_loop;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(ptr  >=  _inputEnd)  {  if(!negative)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(!negative)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(ptr  >=  _inputEnd)  {  if(!negative)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(ptr  >=  _inputEnd)  {  if(!negative)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  final  int  len  =  _inputBuffer[ptr++];  if(len  ==  0)  {  return  len;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(ptr  >=  _inputEnd)  {  final  int  len  =  _inputBuffer[ptr++];  if(len  ==  0)  {  return  len;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(ptr  >=  _inputEnd)  {  final  int  len  =  _inputBuffer[ptr++];  if(len  ==  0)  {  return  len;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  int  startPtr  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  int  startPtr  =  _inputBuffer[ptr++];  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	int  startPtr  =  _inputBuffer[ptr++];	  int    startPtr    =    _inputBuffer.length-1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  final  int  startPtr  =  _inputPtr-1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputPtr-1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputPtr-1;	  final    int    startPtr    =    ptr-1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  if(negative)  {  if(ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(negative)  {  if(ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(negative)  {  if(ptr  >=  _inputEnd)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
15	[BUG]  [BUGGY]  if(negative)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(negative)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(negative)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
16	[BUG]  [BUGGY]  if(negative)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(negative)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(negative)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
17	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++];  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	Integer  ptr  =  _inputBuffer[ptr++];	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
18	[BUG]  [BUGGY]  int  startPtr  =  negative?  ptr  -  1  :  ptr;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  int  startPtr  =  negative?  ptr  -  1  :  ptr;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	int  startPtr  =  negative?  ptr  -  1  :  ptr;	  int    startPtr    =    ptr    -    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
19	[BUG]  [BUGGY]  int  startPtr  =  _inputBuffer.length  -2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  int  startPtr  =  _inputBuffer.length  -2;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	int  startPtr  =  _inputBuffer.length  -2;	  int    startPtr    =    _inputBuffer.length-1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  final  int  startPtr  =  _inputBuffer[ptr-1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputBuffer[ptr-1];  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputBuffer[ptr-1];	  final    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
21	[BUG]  [BUGGY]  int  startPtr  =  _inputEnd+1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  int  startPtr  =  _inputEnd+1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	int  startPtr  =  _inputEnd+1;	  int    startPtr    =    _inputEnd-1;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  int  startPtr  =  _inputPtr  -  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  int  startPtr  =  _inputPtr  -  1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	int  startPtr  =  _inputPtr  -  1;	  int    startPtr    =    ptr    -    1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  final  int  startPtr  =  _inputStart-1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputStart-1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputStart-1;	  final    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  final  int  startPtr  =  _inputLatin1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  final  int  startPtr  =  _inputLatin1;  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	final  int  startPtr  =  _inputLatin1;	  final    int    startPtr    =    ptr-1;    //    to    include    sign/digit    already    read    final    int    inputLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
25	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(negative)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {      boolean  negative  =  (ch  ==  INT_MINUS);  int  ptr  =  _inputPtr;    [BUGGY]  if(ptr  >=  inputLen)  {  if(negative)  {  break  dummy_loop;  }  [BUGGY]    final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  _inputBuffer[ptr++];  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	855	856	2	replace	if(ptr  >=  inputLen)  {  if(negative)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
