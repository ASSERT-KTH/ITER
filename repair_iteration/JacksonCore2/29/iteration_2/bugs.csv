bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char[]  outBuf  =  c.toCharArray();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  char[]  outBuf  =  c.toCharArray();  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.toCharArray();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  Integer  outBuf  =  _inputStream.readInt();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  Integer  outBuf  =  _inputStream.readInt();  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _inputStream.readInt();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars(0,  c);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  char[]  outBuf  =  c.getChars(0,  c);  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars(0,  c);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars( "UTF-8 ");  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  char[]  outBuf  =  c.getChars( "UTF-8 ");  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars( "UTF-8 ");	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_STRING;	  outBuf[outPtr++]    =    c;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_FLOAT;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_FLOAT;  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_FLOAT;	  outBuf[outPtr++]    =    c;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_ARRAY;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_ARRAY;  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.END_ARRAY;	  outBuf[outPtr++]    =    c;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  char[]  outBuf  =  c.readChars();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  char[]  outBuf  =  c.readChars();  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.readChars();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  Integer  outBuf  =  _parseInt(c);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  Integer  outBuf  =  _parseInt(c);  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _parseInt(c);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_STANDARD;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_STANDARD;  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_STANDARD;	  outBuf[outPtr++]    =    c;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
11	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNEXPECTED;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNEXPECTED;  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.UNEXPECTED;	  outBuf[outPtr++]    =    c;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars(0,  0);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  char[]  outBuf  =  c.getChars(0,  0);  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars(0,  0);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  InputStream  in  =  _inputStream.readInt();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]    return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }      [BUGGY]  InputStream  in  =  _inputStream.readInt();  [BUGGY]    int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	InputStream  in  =  _inputStream.readInt();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
