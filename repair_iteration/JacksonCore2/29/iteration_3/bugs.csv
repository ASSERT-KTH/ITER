bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  outBuf  =  _inputStream.readInt(c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _inputStream.readInt(c);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _inputStream.readInt(c);	  Integer    outBuf    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  Integer  outBuf  =  _inputStream.readInt(0);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _inputStream.readInt(0);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _inputStream.readInt(0);	  Integer    outBuf    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  Integer  outBuf  =  _inputStream.readFully(c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _inputStream.readFully(c);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _inputStream.readFully(c);	  Integer    outBuf    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;	  outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_FLOAT;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
5	[BUG]  [BUGGY]  InputStream  in  =  _inputStream.readUTF8();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  InputStream  in  =  _inputStream.readUTF8();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	InputStream  in  =  _inputStream.readUTF8();	  InputStream    in    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  InputStream  in  =  _inputStream.readInt(c);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  InputStream  in  =  _inputStream.readInt(c);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	InputStream  in  =  _inputStream.readInt(c);	  InputStream    in    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
7	[BUG]  [BUGGY]  InputStream  in  =  _inputStream.readFully(c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  InputStream  in  =  _inputStream.readFully(c);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	InputStream  in  =  _inputStream.readFully(c);	  InputStream    in    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;	  outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_ARRAY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_ARRAY;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_ARRAY;	  outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars(0);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars(0);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars(0);	  char[]    outBuf    =    c.getChars(0,    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
11	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars(0,  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars(0,  1);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars(0,  1);	  char[]    outBuf    =    c.getChars(0,    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
12	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars(0,  4);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars(0,  4);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars(0,  4);	  char[]    outBuf    =    c.getChars(0,    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
13	[BUG]  [BUGGY]  char[]  outBuf  =  _inputBuffer.readChars();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  _inputBuffer.readChars();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  _inputBuffer.readChars();	  char[]    outBuf    =    c.readChars();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  char[]  outBuf  =  c.readChars(0,  c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.readChars(0,  c);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.readChars(0,  c);	  char[]    outBuf    =    c.readChars();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  char[]  outBuf  =  c.readChars(true);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.readChars(true);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.readChars(true);	  char[]    outBuf    =    c.readChars();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  String  outBuf  =  c.getChars( "UTF-8 ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  String  outBuf  =  c.getChars( "UTF-8 ");  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	String  outBuf  =  c.getChars( "UTF-8 ");	  char[]    outBuf    =    c.getChars(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars('UTF-8');  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars('UTF-8');  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars('UTF-8');	  char[]    outBuf    =    c.getChars(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNDEFINED;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNDEFINED;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.UNDEFINED;	  outBuf[outPtr++]    =    CharacterEscapes.UNEXPECTED;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNKNOWN;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNKNOWN;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.UNKNOWN;	  outBuf[outPtr++]    =    CharacterEscapes.UNEXPECTED;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  Integer  outBuf  =  _parseInt(outBuf,  c);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _parseInt(outBuf,  c);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _parseInt(outBuf,  c);	  Integer    outBuf    =    _parseInt(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
21	[BUG]  [BUGGY]  Integer  outBuf  =  _parseInt(outBuf);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _parseInt(outBuf);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _parseInt(outBuf);	  Integer    outBuf    =    _parseInt(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  Integer  outBuf  =  _parseInt(c,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _parseInt(c,  _inputPtr);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _parseInt(c,  _inputPtr);	  Integer    outBuf    =    _parseInt(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  Integer  outBuf  =  _parseInt(c,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _parseInt(c,  1);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _parseInt(c,  1);	  Integer    outBuf    =    _parseInt(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  char[]  outBuf  =  _inputBuffer.toCharArray();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  _inputBuffer.toCharArray();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  _inputBuffer.toCharArray();	  char[]    outBuf    =    c.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  char[]  outBuf  =  _outputBuffer.toCharArray();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  _outputBuffer.toCharArray();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  _outputBuffer.toCharArray();	  char[]    outBuf    =    c.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars(0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars(0,  _inputPtr);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars(0,  _inputPtr);	  char[]    outBuf    =    c.getChars(0,    c);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
27	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars(0,  c  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars(0,  c  +  1);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars(0,  c  +  1);	  char[]    outBuf    =    c.getChars(0,    c);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
28	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_NUMBER;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_NUMBER;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_NUMBER;	  outBuf[outPtr++]    =    CharacterEscapes.ESCAPE_STANDARD;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
29	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_BACKSLASH;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_BACKSLASH;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_BACKSLASH;	  outBuf[outPtr++]    =    CharacterEscapes.ESCAPE_STANDARD;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_QUOTE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_QUOTE;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.ESCAPE_QUOTE;	  outBuf[outPtr++]    =    CharacterEscapes.ESCAPE_STANDARD;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
31	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_OBJECT;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.END_OBJECT;	  outBuf[outPtr++]    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
32	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.END_ARRAY  |  JsonToken.END_OBJECT;	  outBuf[outPtr++]    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NULL;	  outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
34	[BUG]  [BUGGY]  Integer  outBuf  =  _parseInt(c,  outBuf);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _parseInt(c,  outBuf);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _parseInt(c,  outBuf);	  Integer    outBuf    =    _parseInt(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
35	[BUG]  [BUGGY]  Integer  outBuf  =  _parseInt(c,  outBuf.length);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _parseInt(c,  outBuf.length);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _parseInt(c,  outBuf.length);	  Integer    outBuf    =    _parseInt(c);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
36	[BUG]  [BUGGY]  char[]  outBuf  =  _bufferRecyclable.toCharArray();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  _bufferRecyclable.toCharArray();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  _bufferRecyclable.toCharArray();	  char[]    outBuf    =    c.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
37	[BUG]  [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNCONDITIONAL;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  CharacterEscapes.UNCONDITIONAL;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  CharacterEscapes.UNCONDITIONAL;	  outBuf[outPtr++]    =    CharacterEscapes.UNEXPECTED;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  InputStream  in  =  _inputStream.readInt(outBuf);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  InputStream  in  =  _inputStream.readInt(outBuf);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	InputStream  in  =  _inputStream.readInt(outBuf);	  InputStream    in    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
39	[BUG]  [BUGGY]  InputStream  in  =  _inputStream.readUTF();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  InputStream  in  =  _inputStream.readUTF();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	InputStream  in  =  _inputStream.readUTF();	  InputStream    in    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.START_OBJECT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.START_OBJECT;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.START_OBJECT;	  outBuf[outPtr++]    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  Integer  outBuf  =  _inputStream.readInt(_inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _inputStream.readInt(_inputPtr);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _inputStream.readInt(_inputPtr);	  Integer    outBuf    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
42	[BUG]  [BUGGY]  char[]  outBuf  =  c.readChars(_inputBuffer,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.readChars(_inputBuffer,  _inputPtr);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.readChars(_inputBuffer,  _inputPtr);	  char[]    outBuf    =    c.readChars();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  char[]  outBuf  =  c.readFully();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.readFully();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.readFully();	  char[]    outBuf    =    c.readChars();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
44	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars( ".UTF-8 ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars( ".UTF-8 ");  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars( ".UTF-8 ");	  char[]    outBuf    =    c.getChars(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
45	[BUG]  [BUGGY]  Integer  outBuf  =  _inputStream.readInt(c,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  Integer  outBuf  =  _inputStream.readInt(c,  _inputPtr);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	Integer  outBuf  =  _inputStream.readInt(c,  _inputPtr);	  Integer    outBuf    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
46	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.START_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  outBuf[outPtr++]  =  JsonToken.START_ARRAY;  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	outBuf[outPtr++]  =  JsonToken.START_ARRAY;	  outBuf[outPtr++]    =    JsonToken.END_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
47	[BUG]  [BUGGY]  char[]  outBuf  =  c.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.toString();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.toString();	  char[]    outBuf    =    c.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars('u000');  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars('u000');  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars('u000');	  char[]    outBuf    =    c.getChars(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
49	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars('ufffd');  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars('ufffd');  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars('ufffd');	  char[]    outBuf    =    c.getChars(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
50	[BUG]  [BUGGY]  char[]  outBuf  =  c.getChars('UTF');  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.getChars('UTF');  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.getChars('UTF');	  char[]    outBuf    =    c.getChars(   "UTF-8   ");    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
51	[BUG]  [BUGGY]  char[]  outBuf  =  c.readLine();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.readLine();  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.readLine();	  char[]    outBuf    =    c.readChars();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  char[]  outBuf  =  c.readChars(_inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      return  _handleInvalidNumberStart(c,  true);  }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }        [BUGGY]  char[]  outBuf  =  c.readChars(_inputPtr);  [BUGGY]      int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1211	1211	2	replace	char[]  outBuf  =  c.readChars(_inputPtr);	  char[]    outBuf    =    c.readChars();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
