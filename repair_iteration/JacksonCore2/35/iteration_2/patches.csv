bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(c  >=  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  >=  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  >=  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >>  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >>  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >>  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  char  c  =  _inputStream.readInt();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  char  c  =  _inputStream.readInt();  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	char  c  =  _inputStream.readInt();	  int    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  c  =  _textBuffer.finishCurrentSegment()  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  c  =  _textBuffer.finishCurrentSegment()  +  1;  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	c  =  _textBuffer.finishCurrentSegment()  +  1;	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
6	[BUG]  [BUGGY]  c  =  end.finishCurrentSegment();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  c  =  end.finishCurrentSegment();  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	c  =  end.finishCurrentSegment();	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
7	[BUG]  [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
8	[BUG]  [BUGGY]  if(c  >=  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  >=  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  >=  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
9	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >>  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >>  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >>  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
10	[BUG]  [BUGGY]  c  =(byte)_inputBuffer[_inputPtr++]  &  0xF;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  c  =(byte)_inputBuffer[_inputPtr++]  &  0xF;  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	c  =(byte)_inputBuffer[_inputPtr++]  &  0xF;	  c    =(byte)_inputBuffer[_inputPtr++]    &    0xFF;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(_inputBuffer,  end);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(_inputBuffer,  end);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(_inputBuffer,  end);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
12	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(_inputPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(_inputPtr);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(_inputPtr);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
13	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(outPtr);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(outPtr);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(outPtr);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
14	[BUG]  [BUGGY]  Integer  c  =  _textBuffer.finishCurrentSegment()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _textBuffer.finishCurrentSegment()  +  1;  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _textBuffer.finishCurrentSegment()  +  1;	  Integer    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  Integer  c  =  _textBuffer.finishCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _textBuffer.finishCurrentSegment(outPtr);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _textBuffer.finishCurrentSegment(outPtr);	  Integer    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  if(c  ==  INT_0)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  INT_0)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  INT_0)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  outPtr);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(negative,  outPtr);	  Integer    c    =    _inputStream.parseInt(negative);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
19	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf,  negative);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf,  negative);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(outBuf,  negative);	  Integer    c    =    _inputStream.parseInt(negative);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(outBuf);	  Integer    c    =    _inputStream.parseInt(negative);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  +  1);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(negative,  intLen  +  1);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
22	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf,  intLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(outBuf,  intLen);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(outBuf,  intLen);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  0,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  0,  intLen);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(negative,  0,  intLen);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
24	[BUG]  [BUGGY]  if(outPtr  >=  end)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(outPtr  >=  end)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(outPtr  >=  end)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
25	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(outPtr  >=  outBuf.length)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(outPtr  >=  outBuf.length)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
26	[BUG]  [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;	  if(c    <    INT_0    ||    c    >    INT_9)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
27	[BUG]  [BUGGY]  c  =(char)_inputBuffer[_inputPtr++]  &  0xf;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  c  =(char)_inputBuffer[_inputPtr++]  &  0xf;  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	c  =(char)_inputBuffer[_inputPtr++]  &  0xf;	  c    =(char)_inputBuffer[_inputPtr++]    &    0xF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
28	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  '.')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  '.')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber3(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber3(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber3(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
31	[BUG]  [BUGGY]  int  c  =  _inputStream.readInt(end);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  int  c  =  _inputStream.readInt(end);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	int  c  =  _inputStream.readInt(end);	  int    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
32	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
33	[BUG]  [BUGGY]  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
34	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
35	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  in);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  in);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(negative,  in);	  Integer    c    =    _inputStream.parseInt(negative);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(end  <  _inputEnd)  {  if(c  <  INT_0  ||  c  >  INT_9)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  '.')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  '.')  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(negative);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(negative);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(negative);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
40	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(outBuf);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(outBuf);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(outBuf);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
41	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(offset);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(offset);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(offset);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
42	[BUG]  [BUGGY]  Integer  c  =  _textBuffer.finishCurrentSegment(end);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _textBuffer.finishCurrentSegment(end);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _textBuffer.finishCurrentSegment(end);	  Integer    c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
43	[BUG]  [BUGGY]  c  =(int)_inputBuffer[_inputPtr++]  &  0xF;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  c  =(int)_inputBuffer[_inputPtr++]  &  0xF;  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	c  =(int)_inputBuffer[_inputPtr++]  &  0xF;	  c    =(char)_inputBuffer[_inputPtr++]    &    0xF;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
44	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  INT_QUOTE)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    outBuf.length)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  int  c  =  _inputStream.readInt(negative);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  int  c  =  _inputStream.readInt(negative);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	int  c  =  _inputStream.readInt(negative);	  int    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
46	[BUG]  [BUGGY]  c  =  _textBuffer.finishCurrentSegment(outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  c  =  _textBuffer.finishCurrentSegment(outPtr);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	c  =  _textBuffer.finishCurrentSegment(outPtr);	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
47	[BUG]  [BUGGY]  c  =  _textBuffer.endCurrentSegment();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  c  =  _textBuffer.endCurrentSegment();  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	c  =  _textBuffer.endCurrentSegment();	  c    =    _textBuffer.finishCurrentSegment();    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(negative,  intLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(negative,  intLen);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(negative,  intLen);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
49	[BUG]  [BUGGY]  Integer  c  =  _inputStream.readInt(0);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.readInt(0);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.readInt(0);	  Integer    c    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
50	[BUG]  [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  Integer  c  =  _inputStream.parseInt(negative,  intLen  -  1);  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	Integer  c  =  _inputStream.parseInt(negative,  intLen  -  1);	  Integer    c    =    _inputStream.parseInt(negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
51	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
52	[BUG]  [BUGGY]  if(c  >=  '.')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  >=  '.')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  >=  '.')  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
53	[BUG]  [BUGGY]  if(c  ==  '.')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  '.')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  '.')  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  if(c  ==  '.')  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }      [BUGGY]  if(c  ==  '.')  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      if  (c  <  INT_0  ||  c  >  INT_9)  {  break;  }  ++intLen;  if  (outPtr  >=  outBuf.length)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  outBuf[outPtr++]  =  (char)  c;  }  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1226	1226	2	replace	if(c  ==  '.')  {  if(c  <  INT_0  ||  c  >  INT_9)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    <    INT_0    ||    c    >    INT_9)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
