bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
2	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
3	[BUG]  [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
4	[BUG]  [BUGGY]  int  intLen  =  outBuf.length  +  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outBuf.length  +  _inputBuffer.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outBuf.length  +  _inputBuffer.length;	  int    intLen    =    _inputBuffer.length    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
5	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  +  outPtr  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  +  outPtr  +  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  +  outPtr  +  1;	  int    intLen    =    _inputBuffer.length    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
6	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  +  outBuf.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  +  outBuf.length;	  int    intLen    =    _inputBuffer.length    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  +  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  +  1;	  int    intLen    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  int  intLen  =  _inputEnd  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputEnd  +  2;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputEnd  +  2;	  int    intLen    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  String  int  intLen  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  String  int  intLen  =  0;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	String  int  intLen  =  0;	  char    int    intLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  char  int  intLen  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  char  int  intLen  =  _inputPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	char  int  intLen  =  _inputPtr;	  char    int    intLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
11	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  -  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  -  2;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  -  2;	  int    intLen    =    _inputBuffer.length    -    4;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  int  intLen  =  outBuf.length  +  _inputPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outBuf.length  +  _inputPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outBuf.length  +  _inputPtr;	  int    intLen    =    _inputPtr    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
13	[BUG]  [BUGGY]  int  intLen  =  outPtr  +  _inputPtr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outPtr  +  _inputPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outPtr  +  _inputPtr;	  int    intLen    =    _inputPtr    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
14	[BUG]  [BUGGY]  int  intLen  =  _inputBuf.length  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuf.length  +  outBuf.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuf.length  +  outBuf.length;	  int    intLen    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
15	[BUG]  [BUGGY]  int  intLen  =  outBuf.length  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outBuf.length  +  _inputEnd;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outBuf.length  +  _inputEnd;	  int    intLen    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
16	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
17	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
19	[BUG]  [BUGGY]  outBuf[outPtr++]  =  c;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  c;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  c;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
20	[BUG]  [BUGGY]  OutputStream  outBuf[outPtr++]  =  c;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf[outPtr++]  =  c;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf[outPtr++]  =  c;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
21	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  }  else  {  outBuf[outPtr++]  =  c;  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  }  else  {  outBuf[outPtr++]  =  c;  }  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  }  else  {  outBuf[outPtr++]  =  c;  }	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
22	[BUG]  [BUGGY]  int  intLen  =  _inputPtr  +  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputPtr  +  outBuf.length  -  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputPtr  +  outBuf.length  -  1;	  int    intLen    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
23	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
24	[BUG]  [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
25	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
26	[BUG]  [BUGGY]  int  intLen  =  outBuf.length  -  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outBuf.length  -  _inputBuffer.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outBuf.length  -  _inputBuffer.length;	  int    intLen    =    _inputBuffer.length    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
27	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  -  outPtr  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  -  outPtr  +  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  -  outPtr  +  1;	  int    intLen    =    _inputBuffer.length    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  -  _inputPtr;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  -  _inputPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  -  _inputPtr;	  int    intLen    =    _inputBuffer.length    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
29	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  -  outBuf.length;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  -  outBuf.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  -  outBuf.length;	  int    intLen    =    _inputBuffer.length    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
30	[BUG]  [BUGGY]  OutputBuffer  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputBuffer  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputBuffer  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
31	[BUG]  [BUGGY]  OutputBuffer  outBuf[outPtr++]  =  c;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputBuffer  outBuf[outPtr++]  =  c;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputBuffer  outBuf[outPtr++]  =  c;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
32	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  -  1  +  outPtr;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  -  1  +  outPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  -  1  +  outPtr;	  int    intLen    =    _inputBuffer.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
33	[BUG]  [BUGGY]  int  intLen  =  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outBuf.length  -  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outBuf.length  -  1;	  int    intLen    =    _inputBuffer.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
34	[BUG]  [BUGGY]  int  intLen  =  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outBuf.length  +  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outBuf.length  +  1;	  int    intLen    =    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
35	[BUG]  [BUGGY]  int  intLen  =  _inputPtr  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputPtr  +  2;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputPtr  +  2;	  int    intLen    =    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
36	[BUG]  [BUGGY]  int  intLen  =  outBuf.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outBuf.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outBuf.length;	  int    intLen    =    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
37	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    JsonToken.VALUE_NULL;    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
38	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NULL;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    JsonToken.VALUE_NULL;    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
39	[BUG]  [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    JsonToken.VALUE_NULL;    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
40	[BUG]  [BUGGY]  char  int  intLen  =  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  char  int  intLen  =  _inputBuffer.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	char  int  intLen  =  _inputBuffer.length;	  char    int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
41	[BUG]  [BUGGY]  char  int  intLen  =  _inputEnd  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  char  int  intLen  =  _inputEnd  +  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	char  int  intLen  =  _inputEnd  +  1;	  char    int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
42	[BUG]  [BUGGY]  String  intLen  =  _inputEnd;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  String  intLen  =  _inputEnd;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	String  intLen  =  _inputEnd;	  char    int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
43	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(outPtr);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(outPtr);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(outPtr);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(in);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(in);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(in);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(outPtr);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  _parseNumber(JsonToken.VALUE_STRING,  outBuf[outPtr++]);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  _parseNumber(JsonToken.VALUE_STRING,  outBuf[outPtr++]);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	_parseNumber(JsonToken.VALUE_STRING,  outBuf[outPtr++]);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(outPtr);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer[outPtr]  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer[outPtr]  +  outBuf.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer[outPtr]  +  outBuf.length;	  int    intLen    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
47	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer[outPtr]  +  outPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer[outPtr]  +  outPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer[outPtr]  +  outPtr;	  int    intLen    =    _inputPtr    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
48	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer[outPtr++]  +  outPtr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer[outPtr++]  +  outPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer[outPtr++]  +  outPtr;	  int    intLen    =    _inputPtr    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  char  intLen  =  _inputEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  char  intLen  =  _inputEnd;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	char  intLen  =  _inputEnd;	  char    int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
50	[BUG]  [BUGGY]  char  intLen  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  char  intLen  =  0;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	char  intLen  =  0;	  char    int    intLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  Integer  intLen  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  Integer  intLen  =  0;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	Integer  intLen  =  0;	  char    int    intLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  Character.toLowerCase(	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
53	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  +  outPtr  +  outPtr;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  +  outPtr  +  outPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  +  outPtr  +  outPtr;	  int    intLen    =    _inputBuffer.length    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  *  outPtr;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  *  outPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  *  outPtr;	  int    intLen    =    _inputBuffer.length    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
55	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toUpperCase(c);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toUpperCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toUpperCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
56	[BUG]  [BUGGY]  OutputStream  outBuf  =  _outputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf  =  _outputBuffer[outPtr++];  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf  =  _outputBuffer[outPtr++];	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
57	[BUG]  [BUGGY]  int  intLen  =  _inputEnd  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputEnd  -  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputEnd  -  1;	  int    intLen    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
58	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(outPtr);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  Character.toLowerCase(outPtr);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(outPtr);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
59	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_STRING;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(outPtr);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
60	[BUG]  [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  Character.toLowerCase(_inputPtr);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  Character.toLowerCase(_inputPtr);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(outPtr);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
61	[BUG]  [BUGGY]  int  intLen  =  _inputPtr  +  outPtr.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputPtr  +  outPtr.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputPtr  +  outPtr.length;	  int    intLen    =    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
62	[BUG]  [BUGGY]  int  intLen  =  _inputBuffer.length  -  outPtr  +  outPtr;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputBuffer.length  -  outPtr  +  outPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputBuffer.length  -  outPtr  +  outPtr;	  int    intLen    =    _inputBuffer.length    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
63	[BUG]  [BUGGY]  int  intLen  =  outPtr  -  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  outPtr  -  _inputBuffer.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  outPtr  -  _inputBuffer.length;	  int    intLen    =    _inputBuffer.length    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
64	[BUG]  [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toUpperCase(c);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toUpperCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toUpperCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
65	[BUG]  [BUGGY]  OutputStream  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
66	[BUG]  [BUGGY]  int  intLen  =  _inputEnd  +  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputEnd  +  outBuf.length  -  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputEnd  +  outBuf.length  -  1;	  int    intLen    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
67	[BUG]  [BUGGY]  String  intLen  =  0;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  String  intLen  =  0;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	String  intLen  =  0;	  char    int    intLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
68	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;  }  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_NULL;  outBuf[outPtr++]  =  c;  }	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    c;    }    else    {    outBuf[outPtr++]    =    JsonToken.VALUE_NULL;    outBuf[outPtr++]    =    c;    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
69	[BUG]  [BUGGY]  c  ==  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  c  ==  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	c  ==  JsonToken.VALUE_NUMBER_INT;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
70	[BUG]  [BUGGY]  _inputBuffer[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  _inputBuffer[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	_inputBuffer[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
71	[BUG]  [BUGGY]  c  ==  JsonToken.VALUE_NUMBER_INT;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  c  ==  JsonToken.VALUE_NUMBER_INT;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	c  ==  JsonToken.VALUE_NUMBER_INT;	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER_INT;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
72	[BUG]  [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toUpperCase(c);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toUpperCase(c);  }  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	if(outPtr  >=  outBuf.length)  {  outBuf[outPtr++]  =  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toUpperCase(c);  }	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
73	[BUG]  [BUGGY]  Integer  intLen  =  _inputEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  Integer  intLen  =  _inputEnd;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	Integer  intLen  =  _inputEnd;	  char    int    intLen    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
74	[BUG]  [BUGGY]  int  intLen  =  _inputStart  +  outPtr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputStart  +  outPtr;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputStart  +  outPtr;	  int    intLen    =    _inputEnd    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
75	[BUG]  [BUGGY]  int  intLen  =  _inputPtr.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  int  intLen  =  _inputPtr.length  -  1;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	int  intLen  =  _inputPtr.length  -  1;	  int    intLen    =    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
76	[BUG]  [BUGGY]  char  int  intLen  =  _inputPtr.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  char  int  intLen  =  _inputPtr.length;  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	char  int  intLen  =  _inputPtr.length;	  int    intLen    =    _inputPtr.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  _parseNumber(JsonToken.VALUE_STRING,  outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  _parseNumber(JsonToken.VALUE_STRING,  outPtr);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	_parseNumber(JsonToken.VALUE_STRING,  outPtr);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(outPtr);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
78	[BUG]  [BUGGY]  c  ==  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  c  ==  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	c  ==  JsonToken.VALUE_STRING;  outBuf[outPtr++]  =  Character.toLowerCase(c);	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  Integer  outBuf  =  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  Integer  outBuf  =  _inputBuffer[outPtr++];  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	Integer  outBuf  =  _inputBuffer[outPtr++];	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_STRING;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    else    {    outBuf[outPtr++]    =    Character.toLowerCase(    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
80	[BUG]  [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      }  }  if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;      [BUGGY]  OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);  }  [BUGGY]        int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {  end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1212	1212	2	replace	OutputStream  outBuf[outPtr++]  =  JsonToken.VALUE_NUMBER;  outBuf[outPtr++]  =  Character.toLowerCase(c);  }	  if(outPtr    >=    outBuf.length)    {    outBuf[outPtr++]    =    JsonToken.VALUE_NUMBER;    outBuf[outPtr++]    =    Character.toLowerCase(c);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
