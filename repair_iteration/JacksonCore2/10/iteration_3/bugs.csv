bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
2	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
3	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  int_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  int_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_len;  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_len;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_len;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
6	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
7	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  if(ptr  >=  inputLen  &&  _inputPtr  >=  inputEnd)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  &&  _inputPtr  >=  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  &&  _inputPtr  >=  inputEnd)  {	  if(ptr    >=    inputLen    ||    _inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  if(ptr  >=  inputEnd  ||  _inputPtr  >=  inputLen)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd  ||  _inputPtr  >=  inputLen)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd  ||  _inputPtr  >=  inputLen)  {	  if(ptr    >=    inputLen    ||    _inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  if(ptr  >=  inputLen  ||  _inputPtr  >=  outputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  ||  _inputPtr  >=  outputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  ||  _inputPtr  >=  outputEnd)  {	  if(ptr    >=    inputLen    ||    _inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  char  ptr  =  _reader.readLine();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  char  ptr  =  _reader.readLine();  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	char  ptr  =  _reader.readLine();	  int    ptr    =    _reader.readLine();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
12	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  _inputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  _inputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  _inputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  ||  ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  ||  ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	||  ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
15	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  1);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  1);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
16	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBuffer.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBuffer.length);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  _inputBuffer.length);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  0);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  0);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBufferLength);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBufferLength);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  _inputBufferLength);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  if(ptr  >=  inputLen  &&  _inputBuffer[ptr++]!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  &&  _inputBuffer[ptr++]!=  null)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  &&  _inputBuffer[ptr++]!=  null)  {	  if(ptr    >=    inputLen    ||    _inputBuffer[ptr++]!=    null)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
20	[BUG]  [BUGGY]  if(ptr  >=  intLen  ||  _inputBuffer[ptr++]!=  null)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  intLen  ||  _inputBuffer[ptr++]!=  null)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  intLen  ||  _inputBuffer[ptr++]!=  null)  {	  if(ptr    >=    inputLen    ||    _inputBuffer[ptr++]!=    null)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
21	[BUG]  [BUGGY]  if(ptr  >=  len  ||  _inputBuffer[ptr++]!=  null)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  len  ||  _inputBuffer[ptr++]!=  null)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  len  ||  _inputBuffer[ptr++]!=  null)  {	  if(ptr    >=    inputLen    ||    _inputBuffer[ptr++]!=    null)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
22	[BUG]  [BUGGY]  if(ptr  >=  dummy_loop)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  dummy_loop)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  dummy_loop)  {	  if(ptr    >=    intLen)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  true);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  true);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  true);	  Integer    ptr    =    _parseInt(ch,    false);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
24	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  fractLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  fractLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  false,  fractLen);	  Integer    ptr    =    _parseInt(ch,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  intLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  false,  intLen);	  Integer    ptr    =    _parseInt(ch,    false);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
26	[BUG]  [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  _inputPtr);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.read(_inputBuffer,  0,  _inputPtr);	  int    ptr    =    _reader.read();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  int  ptr  =  _reader.readFully(_inputBuffer,  0,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.readFully(_inputBuffer,  0,  _inputPtr);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readFully(_inputBuffer,  0,  _inputPtr);	  int    ptr    =    _reader.read();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  _inputEnd)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  _inputEnd)  {  break  intLen;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  _inputEnd)  {  break  intLen;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
30	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputEnd)  {  break  intLen;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputEnd)  {  break  intLen;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputEnd)  {  break  intLen;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
31	[BUG]  [BUGGY]  char  ptr  =  _reader.readInt();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  char  ptr  =  _reader.readInt();  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	char  ptr  =  _reader.readInt();	  int    ptr    =    _reader.readInt();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  int  ptr  =  _reader.readUnsignedInt();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.readUnsignedInt();  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readUnsignedInt();	  int    ptr    =    _reader.readInt();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  int  ptr  =  _reader.readInt(_inputBuffer,  _inputLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.readInt(_inputBuffer,  _inputLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readInt(_inputBuffer,  _inputLen);	  int    ptr    =    _reader.readInt();    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
34	[BUG]  [BUGGY]  if(ptr  ==  inputEnd)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  ==  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  ==  inputEnd)  {	  if(ptr    >=    inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
35	[BUG]  [BUGGY]  if(ptr  >=  intLen.length)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  intLen.length)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  intLen.length)  {	  if(ptr    >=    inputLen.length)    {    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  &  0xff;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  &  0xff;  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _inputBuffer[ptr++]  &  0xff;	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
37	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  &  0xFF;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  &  0xFF;  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _inputBuffer[ptr++]  &  0xFF;	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
38	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++]  +  1;  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _inputBuffer[ptr++]  +  1;	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
39	[BUG]  [BUGGY]  if(ptr  >=  inputEnd  ||  fractLen  <  inputLen)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd  ||  fractLen  <  inputLen)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd  ||  fractLen  <  inputLen)  {	  if(ptr    >=    inputLen    ||    fractLen    <    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
40	[BUG]  [BUGGY]  if(ptr  >=  inputLen  &&  fractLen  <  inputEnd)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  &&  fractLen  <  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  &&  fractLen  <  inputEnd)  {	  if(ptr    >=    inputLen    ||    fractLen    <    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
41	[BUG]  [BUGGY]  if(ptr  >=  inputLen  ||  fractLen  <  =  inputEnd)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  ||  fractLen  <  =  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  ||  fractLen  <  =  inputEnd)  {	  if(ptr    >=    inputLen    ||    fractLen    <    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
42	[BUG]  [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
43	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  if(_inputPtr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(_inputPtr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(_inputPtr  >=  inputLen)  {  if(ptr  >=  inputEnd)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBuffer);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBuffer);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  _inputBuffer);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
46	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputPtr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputPtr);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  _inputPtr);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  inputLen);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  inputLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  inputLen);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  if(ptr  >=  len)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  len)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  len)  {	  if(ptr    >=    intLen)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
49	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd  ||  _inputBuffer[ptr++]!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  _inputEnd  ||  _inputBuffer[ptr++]!=  null)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd  ||  _inputBuffer[ptr++]!=  null)  {	  if(ptr    >=    inputLen    ||    _inputBuffer[ptr++]!=    null)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
50	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
52	[BUG]  [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
53	[BUG]  [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  Integer.MAX_VALUE);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  Integer.MAX_VALUE);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.read(_inputBuffer,  0,  Integer.MAX_VALUE);	  int    ptr    =    _reader.read();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
55	[BUG]  [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  intLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  intLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.read(_inputBuffer,  0,  intLen);	  int    ptr    =    _reader.read();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
56	[BUG]  [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  _inputLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  _inputLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.read(_inputBuffer,  0,  _inputLen);	  int    ptr    =    _reader.read();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
57	[BUG]  [BUGGY]  if(ptr  >=  inputLen  ||  fractLen  >  inputEnd)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  ||  fractLen  >  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  ||  fractLen  >  inputEnd)  {	  if(ptr    >=    inputLen    ||    fractLen    <    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
58	[BUG]  [BUGGY]  if(ptr  >=  inputEnd  ||  _inputPtr  >=  inputEnd)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd  ||  _inputPtr  >=  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd  ||  _inputPtr  >=  inputEnd)  {	  if(ptr    >=    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
59	[BUG]  [BUGGY]  if(ptr  >=  inputEnd  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd  ||  _currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd  ||  _currToken!=  JsonToken.VALUE_STRING)  {	  if(ptr    >=    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
60	[BUG]  [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
61	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
62	[BUG]  [BUGGY]  if(ptr  >=  inputLen  &&  _inputPtr  <  inputEnd)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  &&  _inputPtr  <  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  &&  _inputPtr  <  inputEnd)  {	  if(ptr    >=    inputLen    ||    _inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  _inputLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  _inputLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  false,  _inputLen);	  Integer    ptr    =    _parseInt(ch,    false);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
64	[BUG]  [BUGGY]  int  ptr  =  _reader.readLine(_inputBuffer,  0,  _inputPtr);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.readLine(_inputBuffer,  0,  _inputPtr);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readLine(_inputBuffer,  0,  _inputPtr);	  int    ptr    =    _reader.readLine();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
65	[BUG]  [BUGGY]  int  ptr  =  _reader.readPtr();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.readPtr();  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readPtr();	  int    ptr    =    _reader.readLine();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
66	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    intLen;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  _inputPtr);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  false,  _inputPtr);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  false,  _inputPtr);	  Integer    ptr    =    _parseInt(ch,    false);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
68	[BUG]  [BUGGY]  int  ptr  =(_reader!=  null)?  _reader.readLine()  :  _inputBuffer.length;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =(_reader!=  null)?  _reader.readLine()  :  _inputBuffer.length;  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =(_reader!=  null)?  _reader.readLine()  :  _inputBuffer.length;	  int    ptr    =    _reader.readLine();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
69	[BUG]  [BUGGY]  int  ptr  =(_reader!=  null)?  _reader.readLine()  :  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =(_reader!=  null)?  _reader.readLine()  :  _inputBuffer[ptr++];  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =(_reader!=  null)?  _reader.readLine()  :  _inputBuffer[ptr++];	  int    ptr    =    _reader.readLine();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
70	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
71	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    _inputEnd)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
72	[BUG]  [BUGGY]  if(ptr  >=  inputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(ptr    >=    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
73	[BUG]  [BUGGY]  if(ptr  >=  inputEnd  ||  _inputBuffer[ptr++]!=  null)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputEnd  ||  _inputBuffer[ptr++]!=  null)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd  ||  _inputBuffer[ptr++]!=  null)  {	  if(ptr    >=    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
74	[BUG]  [BUGGY]  if(ptr  >=  inputLen.length  ||  _inputPtr  >=  inputEnd)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen.length  ||  _inputPtr  >=  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen.length  ||  _inputPtr  >=  inputEnd)  {	  if(ptr    >=    inputLen.length)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
76	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ptr    >=    _inputEnd)    {    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
77	[BUG]  [BUGGY]  if(ptr  >=  intLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  intLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  intLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(ptr    >=    intLen)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
78	[BUG]  [BUGGY]  if(ptr  >=  intLen  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  intLen  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  intLen  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(ptr    >=    intLen)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
79	[BUG]  [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  len);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.read(_inputBuffer,  0,  len);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.read(_inputBuffer,  0,  len);	  int    ptr    =    _reader.read();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
80	[BUG]  [BUGGY]  int  ptr  =  _reader.readFully(_inputBuffer,  _inputPtr,  _inputLen);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.readFully(_inputBuffer,  _inputPtr,  _inputLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readFully(_inputBuffer,  _inputPtr,  _inputLen);	  int    ptr    =    _reader.read();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
81	[BUG]  [BUGGY]  int  ptr  =  _reader.readInt(_inputBuffer,  _inputPtr,  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  int  ptr  =  _reader.readInt(_inputBuffer,  _inputPtr,  0);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readInt(_inputBuffer,  _inputPtr,  0);	  int    ptr    =    _reader.readInt();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
82	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBuffer,  _inputLen);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _parseInt(ch,  _inputBuffer,  _inputLen);  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  _inputBuffer,  _inputLen);	  Integer    ptr    =    _parseInt(ch);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
83	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++].intValue;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++].intValue;  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _inputBuffer[ptr++].intValue;	  Integer    ptr    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  if(ptr  >=  inputLen  ||  _inputPtr  >  inputEnd)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]          int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {      [BUGGY]  if(ptr  >=  inputLen  ||  _inputPtr  >  inputEnd)  {  [BUGGY]      break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  ||  _inputPtr  >  inputEnd)  {	  if(ptr    >=    inputLen    ||    _inputPtr    >=    inputEnd)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
