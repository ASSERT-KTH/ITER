bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
2	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  intLen;  }	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  if(ptr  >=  intLen)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  intLen)  {  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  intLen)  {	  if(ptr    >=    inputLen)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  if(ptr  >=  inputEnd)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  inputEnd)  {  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputEnd)  {	  if(ptr    >=    inputLen)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  if(ptr  >=  inputLen.length)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  inputLen.length)  {  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen.length)  {	  if(ptr    >=    inputLen)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++];  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _inputBuffer[ptr++];	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
9	[BUG]  [BUGGY]  int  ptr  =  _reader.readInt();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  int  ptr  =  _reader.readInt();  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readInt();	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  Integer  ptr  =  _parseInt(ch);  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch);	      	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  Integer  ptr  =  _parseInt(ch,  false);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  Integer  ptr  =  _parseInt(ch,  false);  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	Integer  ptr  =  _parseInt(ch,  false);	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
12	[BUG]  [BUGGY]  int  ptr  =  _reader.read();  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  int  ptr  =  _reader.read();  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.read();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
13	[BUG]  [BUGGY]  int  ptr  =  _reader.readLine();  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  int  ptr  =  _reader.readLine();  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	int  ptr  =  _reader.readLine();	      	non-compiled	[CE]  illegal  start  of  type	2	None	replace
14	[BUG]  [BUGGY]  if(ptr  >=  inputLen  ||  _inputPtr  >=  inputEnd)  {  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  inputLen  ||  _inputPtr  >=  inputEnd)  {  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  ||  _inputPtr  >=  inputEnd)  {	  if(ptr    >=    inputLen)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
15	[BUG]  [BUGGY]  if(ptr  >=  inputLen  ||  fractLen  <  inputEnd)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  inputLen  ||  fractLen  <  inputEnd)  {  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  ||  fractLen  <  inputEnd)  {	  if(ptr    >=    inputLen)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  if(ptr  >=  inputLen  ||  _inputBuffer[ptr++]!=  null)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]        int  intLen  =  1;  //  already  got  one    int_loop:  while  (true)  {    [BUGGY]  if(ptr  >=  inputLen  ||  _inputBuffer[ptr++]!=  null)  {  [BUGGY]    break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }  int  fractLen  =  0;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	892	892	2	replace	if(ptr  >=  inputLen  ||  _inputBuffer[ptr++]!=  null)  {	  if(ptr    >=    inputLen)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
