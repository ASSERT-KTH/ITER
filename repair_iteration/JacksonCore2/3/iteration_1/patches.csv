bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_FLUSH  ||  ch  ==  INT_MINUS);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]        AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_FLUSH  ||  ch  ==  INT_MINUS);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_FLUSH  ||  ch  ==  INT_MINUS);	  boolean    negative    =(ch    ==    INT_MINUS    ||    ch    ==    INT_FLUSH);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	6	None	replace
2	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_FLUSH);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_FLUSH);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_FLUSH);	  boolean    negative    =(ch    ==    INT_MINUS    ||    ch    ==    INT_FLUSH);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	6	None	replace
3	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]        AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  INT_QUOTE);	  boolean    negative    =(ch    ==    INT_QUOTE);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	1	None	replace
4	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  >=  INT_QUOTE);	  boolean    negative    =(ch    ==    INT_QUOTE);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	1	None	replace
5	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  DEFAULT_QUOTE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  DEFAULT_QUOTE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  DEFAULT_QUOTE);	  boolean    negative    =(ch    ==    INT_QUOTE);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	1	None	replace
6	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_QUOTE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_QUOTE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_QUOTE);	  boolean    negative    =(ch    ==    INT_NUMBER);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	replace
7	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_VALUE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_VALUE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_VALUE);	  boolean    negative    =(ch    ==    INT_NUMBER);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	replace
8	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_SUBJECT);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_SUBJECT);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_SUBJECT);	  boolean    negative    =(ch    ==    INT_NUMBER);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	replace
9	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[_inputPtr++];  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  Integer  ptr  =  _inputBuffer[_inputPtr++];  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	Integer  ptr  =  _inputBuffer[_inputPtr++];	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	replace
10	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length();  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionFailedError    [CONTEXT]    {          [BUGGY]  int  len  =  _inputBuffer.length();  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	int  len  =  _inputBuffer.length();	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	replace
11	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[_inputPtr];  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                AssertionFailedError    [CONTEXT]    {          [BUGGY]  Integer  ptr  =  _inputBuffer[_inputPtr];  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	Integer  ptr  =  _inputBuffer[_inputPtr];	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	replace
12	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer.readInt();  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]                  AssertionFailedError    [CONTEXT]    {          [BUGGY]  Integer  ptr  =  _inputBuffer.readInt();  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	Integer  ptr  =  _inputBuffer.readInt();	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	replace
13	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_VALUE  ||  ch  ==  INT_VALUE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_VALUE  ||  ch  ==  INT_VALUE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_VALUE  ||  ch  ==  INT_VALUE);	  boolean    negative    =(ch    ==    INT_VALUE);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	2	None	replace
14	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_VALUE  ||  ch  ==  INT_QUOTE);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_VALUE  ||  ch  ==  INT_QUOTE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_VALUE  ||  ch  ==  INT_QUOTE);	  boolean    negative    =(ch    ==    INT_VALUE);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	2	None	replace
15	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_LCURLY  ||  ch  ==  INT_LCURLY);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_LCURLY  ||  ch  ==  INT_LCURLY);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_LCURLY  ||  ch  ==  INT_LCURLY);	  boolean    negative    =(ch    ==    INT_LCURLY);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	5	None	replace
16	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_LCURLY)&&(_inputBuffer.length  >  0);  [CE]  call  to  this  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_LCURLY)&&(_inputBuffer.length  >  0);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_LCURLY)&&(_inputBuffer.length  >  0);	  boolean    negative    =(ch    ==    INT_LCURLY);    	non-compiled	[CE]  call  to  this  must  be  first  statement  in  constructor	5	None	replace
17	[BUG]  [BUGGY]  boolean  negative  =(_inputPtr  ==  INT_VALUE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(_inputPtr  ==  INT_VALUE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(_inputPtr  ==  INT_VALUE);	  boolean    negative    =(ch    ==    INT_VALUE);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	2	None	replace
18	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_LCURLY  ||  ch  ==  INT_QUOTE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_LCURLY  ||  ch  ==  INT_QUOTE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_LCURLY  ||  ch  ==  INT_QUOTE);	  boolean    negative    =(ch    ==    INT_LCURLY);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	5	None	replace
19	[BUG]  [BUGGY]  Integer  ptr  =  _reader.readInt();  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  Integer  ptr  =  _reader.readInt();  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	Integer  ptr  =  _reader.readInt();	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	replace
20	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  INT_PLUS);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  INT_PLUS);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_QUOTE  ||  ch  ==  INT_PLUS);	  boolean    negative    =(ch    ==    INT_QUOTE);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	1	None	replace
21	[BUG]  [BUGGY]  boolean  negative  =(_tokenIncomplete  ==  INT_QUOTE);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(_tokenIncomplete  ==  INT_QUOTE);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(_tokenIncomplete  ==  INT_QUOTE);	  boolean    negative    =(ch    ==    INT_QUOTE);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	1	None	replace
22	[BUG]  [BUGGY]  boolean  negative  =(_inputPtr  ==  _inputEnd);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(_inputPtr  ==  _inputEnd);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(_inputPtr  ==  _inputEnd);	  boolean    negative    =(ch    ==    INT_NUMBER);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	replace
23	[BUG]  [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_NUMBER);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_NUMBER);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  ==  INT_NUMBER  ||  ch  ==  INT_NUMBER);	  boolean    negative    =(ch    ==    INT_NUMBER);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	7	None	replace
24	[BUG]  [BUGGY]  boolean  negative  =(_tokenIncomplete  ==  INT_LCURLY);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(_tokenIncomplete  ==  INT_LCURLY);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(_tokenIncomplete  ==  INT_LCURLY);	  boolean    negative    =(ch    ==    INT_LCURLY);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	5	None	replace
25	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer.parseInt(ch);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]            AssertionFailedError    [CONTEXT]    {          [BUGGY]  Integer  ptr  =  _inputBuffer.parseInt(ch);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	Integer  ptr  =  _inputBuffer.parseInt(ch);	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	replace
26	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  digit  or  a  value ");  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]              AssertionFailedError    [CONTEXT]    {          [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  digit  or  a  value ");  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  digit  or  a  value ");	      	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	3	None	replace
27	[BUG]  [BUGGY]  int  negative  =(ch  ==  INT_LBRACKET);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionFailedError    [CONTEXT]    {          [BUGGY]  int  negative  =(ch  ==  INT_LBRACKET);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	int  negative  =(ch  ==  INT_LBRACKET);	  boolean    negative    =(ch    ==    INT_LBRACKET);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	4	None	replace
28	[BUG]  [BUGGY]  boolean  negative  =(ch  >=  INT_MINUS  ||  ch  ==  INT_FLUSH);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]        AssertionFailedError    [CONTEXT]    {          [BUGGY]  boolean  negative  =(ch  >=  INT_MINUS  ||  ch  ==  INT_FLUSH);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	boolean  negative  =(ch  >=  INT_MINUS  ||  ch  ==  INT_FLUSH);	  boolean    negative    =(ch    ==    INT_MINUS    ||    ch    ==    INT_FLUSH);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	6	None	replace
29	[BUG]  [BUGGY]  int  negative  =(ch  ==  INT_MINUS  ||  ch  ==  INT_FLUSH);  [CE]  call  to  super  must  be  first  statement  in  constructor  [FE]          AssertionFailedError    [CONTEXT]    {          [BUGGY]  int  negative  =(ch  ==  INT_MINUS  ||  ch  ==  INT_FLUSH);  [BUGGY]    int  ptr  =  _inputPtr;  int  startPtr  =  ptr-1;  //  to  include  sign/digit  already  read  final  int  inputLen  =  _inputEnd;  dummy_loop:  do  {  //  dummy  loop,  to  be  able  to  break  out  if  (negative)  {  //  need  to  read  the  next  digit  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	853	853	2	replace	int  negative  =(ch  ==  INT_MINUS  ||  ch  ==  INT_FLUSH);	  boolean    negative    =(ch    ==    INT_MINUS    ||    ch    ==    INT_FLUSH);    	non-compiled	[CE]  call  to  super  must  be  first  statement  in  constructor	6	None	replace
