bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  End  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputPtr;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputPtr;	  End    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
2	[BUG]  [BUGGY]  End  =  end;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  end;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  end;	  End    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
3	[BUG]  [BUGGY]  end  =  _inputEnd  +  outBuf.length  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  outBuf.length  +  2;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  outBuf.length  +  2;	  end    =    _inputEnd    +    outBuf.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  end  =  outBuf.length  +  _inputEnd  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf.length  +  _inputEnd  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf.length  +  _inputEnd  +  1;	  end    =    _inputEnd    +    outBuf.length    +    1;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  End  =  _inputEnd  +  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  +  outBuf.length  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  +  outBuf.length  +  1;	  End    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
6	[BUG]  [BUGGY]  End  =  outBuf.length  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  outBuf.length  +  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  outBuf.length  +  _inputEnd;	  End    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
7	[BUG]  [BUGGY]  End  =  _inputEnd  +  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  +  outBuf.length  -  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  +  outBuf.length  -  1;	  End    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
8	[BUG]  [BUGGY]  End  =  end  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  end  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  end  +  outBuf.length;	  End    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
9	[BUG]  [BUGGY]  end  =  _inputEnd  +  outBuf.length  +  4;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  outBuf.length  +  4;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  outBuf.length  +  4;	  end    =    _inputEnd    +    outBuf.length    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
10	[BUG]  [BUGGY]  End  =  _inputBuffer[_inputPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputBuffer[_inputPtr++]  &  0xFF;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputBuffer[_inputPtr++]  &  0xFF;	  End    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  End  =  _inputBuffer[_inputPtr++]  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputBuffer[_inputPtr++]  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputBuffer[_inputPtr++]  +  1;	  End    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  End  =  _inputBuffer[_inputPtr++]  +  end;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputBuffer[_inputPtr++]  +  end;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputBuffer[_inputPtr++]  +  end;	  End    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
13	[BUG]  [BUGGY]  end  =  outBuf[_inputPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf[_inputPtr++]  &  0xFF;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf[_inputPtr++]  &  0xFF;	  end    =    _inputBuffer[_inputPtr++]    &    0xFF;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  &  0xF;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  &  0xF;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  &  0xF;	  end    =    _inputBuffer[_inputPtr++]    &    0xFF;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
15	[BUG]  [BUGGY]  end  =  intLen  +  _inputEnd  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  intLen  +  _inputEnd  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  intLen  +  _inputEnd  +  outBuf.length;	  end    =    _inputEnd    +    intLen    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
16	[BUG]  [BUGGY]  end  =  outBuf.length  +  intLen  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf.length  +  intLen  +  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf.length  +  intLen  +  _inputEnd;	  end    =    _inputEnd    +    intLen    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
17	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  Integer.MIN_VALUE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  Integer.MIN_VALUE;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  +  Integer.MIN_VALUE;	  end    =    _inputBuffer[_inputPtr++]    +    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
18	[BUG]  [BUGGY]  End  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE;	  end    =    _inputBuffer[_inputPtr++]    +    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
19	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE  +  1;	  end    =    _inputBuffer[_inputPtr++]    +    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
20	[BUG]  [BUGGY]  end  =  _inputEnd  -  4;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  -  4;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  -  4;	  end    =    _inputEnd    -    2;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
21	[BUG]  [BUGGY]  _parserNumber2(outBuf,  outPtr,  end,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parserNumber2(outBuf,  outPtr,  end,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parserNumber2(outBuf,  outPtr,  end,  intLen);	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parserNumber2(outBuf,  outPtr,  negative,  intLen  +  1);	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
23	[BUG]  [BUGGY]  _parserNumber1(outBuf,  outPtr,  end,  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parserNumber1(outBuf,  outPtr,  end,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parserNumber1(outBuf,  outPtr,  end,  intLen);	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parserNumber1(outBuf,  outPtr,  negative,  intLen);	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
25	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  end,  intLen);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  end,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  end,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
26	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
27	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  value ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  value ");  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")expected  a  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
30	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  value. ");  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  value. ");  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  value. ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
31	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(end  <  =  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  if(end  <  =  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  if(end  <  =  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputEnd  <  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputEnd  <  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  if(_inputEnd  <  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
33	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputEnd  <  =  1)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  if(_inputEnd  <  =  1)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  if(_inputEnd  <  =  1)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  _parseNumber2(outBuf,  outPtr,  end,  intLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parseNumber2(outBuf,  outPtr,  end,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parseNumber2(outBuf,  outPtr,  end,  intLen);	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
35	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
36	[BUG]  [BUGGY]  if(end  <  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  <  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  <  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
37	[BUG]  [BUGGY]  if(end  <  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  end,  intLen);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  <  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  end,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  <  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  end,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
38	[BUG]  [BUGGY]  end  =  outBuf.length  -  1  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf.length  -  1  +  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf.length  -  1  +  _inputEnd;	  end    =    _inputEnd    -    1    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
39	[BUG]  [BUGGY]  end  =  _inputEnd  *  outBuf.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  *  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  *  outBuf.length;	  end    =    _inputEnd    -    1    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
40	[BUG]  [BUGGY]  end  =  0xFF  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  0xFF  +  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  0xFF  +  _inputEnd;	  end    =    0xFF;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
41	[BUG]  [BUGGY]  end  =  0xFF  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  0xFF  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  0xFF  +  outBuf.length;	  end    =    0xFF;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
42	[BUG]  [BUGGY]  end  =  _inputBuffer[outPtr++]  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[outPtr++]  +  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[outPtr++]  +  _inputEnd;	  end    =    outPtr    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
43	[BUG]  [BUGGY]  end  =  _inputPtr  +  outEnd;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputPtr  +  outEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputPtr  +  outEnd;	  end    =    outPtr    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
44	[BUG]  [BUGGY]  end  =  _inputEnd  +  outPtr  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  outPtr  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  outPtr  +  1;	  end    =    _inputEnd    +    intLen    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
45	[BUG]  [BUGGY]  end  =  _inputEnd  +  intLen  +  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  intLen  +  2;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  intLen  +  2;	  end    =    _inputEnd    +    intLen    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
46	[BUG]  [BUGGY]  end  =  _inputPtr  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputPtr  +  2;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputPtr  +  2;	  end    =    _inputPtr    +    1;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
47	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  end,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
48	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
49	[BUG]  [BUGGY]  end  =  _inputBuffer.length  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer.length  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer.length  +  outBuf.length;	  end    =    outBuf.length    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  end  =  outBuf.length  +  _inputPtr;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf.length  +  _inputPtr;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf.length  +  _inputPtr;	  end    =    outBuf.length    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
51	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  2;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  2;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  +  2;	  end    =    _inputBuffer[_inputPtr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
52	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  4;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  4;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  +  4;	  end    =    _inputBuffer[_inputPtr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
53	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  &  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  &  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  &  1;	  end    =    _inputBuffer[_inputPtr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
54	[BUG]  [BUGGY]  end  =  _inputPtr  +  intLen  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputPtr  +  intLen  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputPtr  +  intLen  +  1;	  end    =    _inputPtr    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
55	[BUG]  [BUGGY]  end  =  outPtr  -  1  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outPtr  -  1  +  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outPtr  -  1  +  _inputEnd;	  end    =    _inputEnd    -    1    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
56	[BUG]  [BUGGY]  end  =  _inputEnd  -  1  +  intLen;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  -  1  +  intLen;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  -  1  +  intLen;	  end    =    _inputEnd    -    1    +    outPtr;    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
57	[BUG]  [BUGGY]  end  =  _inputBuffer[outPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[outPtr++]  &  0xFF;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[outPtr++]  &  0xFF;	  end    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
58	[BUG]  [BUGGY]  end  =  outBuf[outPtr++];  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf[outPtr++];  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf[outPtr++];	  end    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
59	[BUG]  [BUGGY]  end  =  _inputBuffer[outPtr++]  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[outPtr++]  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[outPtr++]  +  1;	  end    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
60	[BUG]  [BUGGY]  End  =  outBuf.length  +  _inputPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  outBuf.length  +  _inputPtr;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  outBuf.length  +  _inputPtr;	  End    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
61	[BUG]  [BUGGY]  End  =  _inputPtr  +  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputPtr  +  outBuf.length  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputPtr  +  outBuf.length  +  1;	  End    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
62	[BUG]  [BUGGY]  End  =  _inputPtr  +  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputPtr  +  outBuf.length  -  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputPtr  +  outBuf.length  -  1;	  End    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
63	[BUG]  [BUGGY]  _throwInternal();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _throwInternal();  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_throwInternal();	  _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
64	[BUG]  [BUGGY]  _reportError( "Unsupported  input  type ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Unsupported  input  type ");  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Unsupported  input  type ");	  _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
65	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  end,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  end,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  end,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
66	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
67	[BUG]  [BUGGY]  end  =  outBuf.length  +  _inputEnd  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf.length  +  _inputEnd  -  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf.length  +  _inputEnd  -  1;	  end    =    _inputEnd    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
68	[BUG]  [BUGGY]  end  =  _inputEnd  +  outBuf.length  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  outBuf.length  -  2;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  outBuf.length  -  2;	  end    =    _inputEnd    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
69	[BUG]  [BUGGY]  End  =  end  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  end  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  end  +  1;	  End    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
70	[BUG]  [BUGGY]  End  =  _inputEnd  +  2;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  +  2;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  +  2;	  End    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
71	[BUG]  [BUGGY]  End  =  _inputEnd  +  4;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  +  4;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  +  4;	  End    =    _inputEnd    +    1;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
72	[BUG]  [BUGGY]  End  =  end  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  end  -  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  end  -  1;	  End    =    _inputEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  End  =  _inputEnd  -  2;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  -  2;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  -  2;	  End    =    _inputEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  end  =  _inputPtr  +  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputPtr  +  outBuf.length  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputPtr  +  outBuf.length  +  1;	  end    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  end  =  outBufPtr  +  _inputPtr.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBufPtr  +  _inputPtr.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBufPtr  +  _inputPtr.length;	  end    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  end  =  _inputEnd  -  outBuf.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  -  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  -  outBuf.length;	  end    =    _inputEnd    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
77	[BUG]  [BUGGY]  end  =  _inputEnd  -  _inputPtr;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  -  _inputPtr;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  -  _inputPtr;	  end    =    _inputEnd    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
78	[BUG]  [BUGGY]  end  =  _inputEnd  -  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  -  _inputBuffer.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  -  _inputBuffer.length;	  end    =    _inputEnd    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
79	[BUG]  [BUGGY]  end  =  _inputEnd  -  intLen;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  -  intLen;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  -  intLen;	  end    =    _inputEnd    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
80	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value.n ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value.n ");  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value.n ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value.   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
81	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
82	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
83	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
84	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  <  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  <  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
85	[BUG]  [BUGGY]  end  =  outBuf.length  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf.length  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf.length  +  1;	  end    =    outBuf.length    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
86	[BUG]  [BUGGY]  _parseNumber2(outBuf,  outPtr,  end,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parseNumber2(outBuf,  outPtr,  end,  negative,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parseNumber2(outBuf,  outPtr,  end,  negative,  intLen);	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
87	[BUG]  [BUGGY]  _parseNumber(outBuf,  outPtr,  end,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parseNumber(outBuf,  outPtr,  end,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parseNumber(outBuf,  outPtr,  end,  intLen);	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
88	[BUG]  [BUGGY]  end  =  outPtr  -  _inputEnd;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outPtr  -  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outPtr  -  _inputEnd;	  end    =    _inputEnd    -    outPtr;    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
89	[BUG]  [BUGGY]  End  =  _inputEnd  +  intLen;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  +  intLen;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  +  intLen;	  End    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
90	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  <  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  <  _inputEnd)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
91	[BUG]  [BUGGY]  End  =  _inputEnd  -  1  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  -  1  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  -  1  +  outBuf.length;	  End    =    _inputEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
92	[BUG]  [BUGGY]  end  =  _inputPtr  +  intLen  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputPtr  +  intLen  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputPtr  +  intLen  +  outBuf.length;	  end    =    _inputPtr    +    intLen;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
93	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  value ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")expected  value ");  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")expected  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
94	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  +  Integer.MAX_VALUE  +  outBuf.length;	  end    =    _inputBuffer[_inputPtr++]    +    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
95	[BUG]  [BUGGY]  End  =  _inputEnd  +  outBuf.length  +  end;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  +  outBuf.length  +  end;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  +  outBuf.length  +  end;	  End    =    _inputEnd    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
96	[BUG]  [BUGGY]  End  =  outPtr  +  _inputPtr.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  outPtr  +  _inputPtr.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  outPtr  +  _inputPtr.length;	  End    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
97	[BUG]  [BUGGY]  end  =  _inputEnd  +  outPtr  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  outPtr  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  outPtr  +  outBuf.length;	  end    =    _inputEnd    +    intLen    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
98	[BUG]  [BUGGY]  end  =  _inputEnd  +  outPtr  +  intLen;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  outPtr  +  intLen;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  outPtr  +  intLen;	  end    =    _inputEnd    +    intLen    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
99	[BUG]  [BUGGY]  End  =  _inputBuffer[outPtr++];  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputBuffer[outPtr++];  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputBuffer[outPtr++];	  End    =    _inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
100	[BUG]  [BUGGY]  end  =  _inputBuffer[outPtr  +  outEnd];  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[outPtr  +  outEnd];  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[outPtr  +  outEnd];	  end    =    outPtr    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
101	[BUG]  [BUGGY]  end  =  outPtr  +  _inputEnd  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outPtr  +  _inputEnd  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outPtr  +  _inputEnd  +  outBuf.length;	  end    =    outPtr    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
102	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(end  <  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  if(end  <  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  if(end  <  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
103	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
104	[BUG]  [BUGGY]  if(_inputPtr  >=  end)  {  if(end  >  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(_inputPtr  >=  end)  {  if(end  >  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(_inputPtr  >=  end)  {  if(end  >  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
105	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  if(_inputPtr  >=  end)  {  if(_inputEnd  <  =  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  if(_inputPtr  >=  end)  {  if(_inputEnd  <  =  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  if(_inputPtr  >=  end)  {  if(_inputEnd  <  =  0)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
106	[BUG]  [BUGGY]  _parseNumber2(outBuf,  outputPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parseNumber2(outBuf,  outputPtr,  negative,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parseNumber2(outBuf,  outputPtr,  negative,  intLen);	  _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
107	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ",  end);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ",  end);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ",  end);	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value   ");    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
108	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  0;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  +  0;	  end    =    _inputBuffer[_inputPtr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
109	[BUG]  [BUGGY]  end  =  outBuf[_inputPtr++]  +  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outBuf[_inputPtr++]  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outBuf[_inputPtr++]  +  1;	  end    =    _inputBuffer[_inputPtr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
110	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
111	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
112	[BUG]  [BUGGY]  end  =  outPtr  +  _inputPtr.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outPtr  +  _inputPtr.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outPtr  +  _inputPtr.length;	  end    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
113	[BUG]  [BUGGY]  _parserNumber2(outBuf,  outPtr,  end,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parserNumber2(outBuf,  outPtr,  end,  negative,  intLen);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parserNumber2(outBuf,  outPtr,  end,  negative,  intLen);	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
114	[BUG]  [BUGGY]  end  =  0xFF  |  _inputEnd;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  0xFF  |  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  0xFF  |  _inputEnd;	  end    =    0xFF;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
115	[BUG]  [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
116	[BUG]  [BUGGY]  if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  <  _inputEnd)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
117	[BUG]  [BUGGY]  End  =  outBuf.length  -  1  +  _inputEnd;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  outBuf.length  -  1  +  _inputEnd;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  outBuf.length  -  1  +  _inputEnd;	  end    =    _inputEnd    -    1    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
118	[BUG]  [BUGGY]  _parseNumber2(outBuf,  outPtr,  negative,  intLen,  end);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parseNumber2(outBuf,  outPtr,  negative,  intLen,  end);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parseNumber2(outBuf,  outPtr,  negative,  intLen,  end);	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
119	[BUG]  [BUGGY]  if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parseNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
120	[BUG]  [BUGGY]  if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
121	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  0xFF;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  +  0xFF;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  +  0xFF;	  end    =    _inputBuffer[_inputPtr++]    +    1;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
122	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value.. ");  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value.. ");  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value.. ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    string    value.   ");    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
123	[BUG]  [BUGGY]  end  =  _inputBuffer.length  +  outPtr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer.length  +  outPtr;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer.length  +  outPtr;	  end    =    outBuf.length    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
124	[BUG]  [BUGGY]  End  =  _inputBuffer.length;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputBuffer.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputBuffer.length;	  End    =    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
125	[BUG]  [BUGGY]  End  =  _inputEnd  +  outPtr;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  +  outPtr;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  +  outPtr;	  end    =    outPtr    +    _inputEnd;    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
126	[BUG]  [BUGGY]  end  =  _inputEnd  +  off  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputEnd  +  off  +  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputEnd  +  off  +  1;	  end    =    _inputEnd    +    intLen    +    1;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
127	[BUG]  [BUGGY]  End  =  _inputEnd  -  1  +  outPtr;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputEnd  -  1  +  outPtr;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputEnd  -  1  +  outPtr;	  End    =    _inputEnd    -    1;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
128	[BUG]  [BUGGY]  end  =  outPtr  +  _inputEnd  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  outPtr  +  _inputEnd  -  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  outPtr  +  _inputEnd  -  1;	  end    =    _inputEnd    +    outBuf.length    -    1;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
129	[BUG]  [BUGGY]  if(end  >  INT_0)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  INT_0)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  INT_0)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
130	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")Not  a  value ");  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")Not  a  value ");  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")Not  a  value ");	  _reportError(   "Current    token(   "+_tokenIncomplete+   ")not    a    value   ");    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
131	[BUG]  [BUGGY]  end  =  _inputBuffer[_inputPtr++]  &  Integer.MAX_VALUE;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputBuffer[_inputPtr++]  &  Integer.MAX_VALUE;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputBuffer[_inputPtr++]  &  Integer.MAX_VALUE;	  end    =    _inputBuffer[_inputPtr++]    +    Integer.MAX_VALUE;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
132	[BUG]  [BUGGY]  End  =  _inputBuffer.length  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  End  =  _inputBuffer.length  +  outBuf.length;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	End  =  _inputBuffer.length  +  outBuf.length;	  End    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
133	[BUG]  [BUGGY]  _parserNumber2(outBuf,  outPtr,  negative,  intLen,  end);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _parserNumber2(outBuf,  outPtr,  negative,  intLen,  end);  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_parserNumber2(outBuf,  outPtr,  negative,  intLen,  end);	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
134	[BUG]  [BUGGY]  _throwUnsupportedOperation();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _throwUnsupportedOperation();  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_throwUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
135	[BUG]  [BUGGY]  _throwUnquotedSpace();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  _throwUnquotedSpace();  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	_throwUnquotedSpace();	  _reportUnsupportedOperation();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
136	[BUG]  [BUGGY]  if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  INT_0)  {  _parseNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parseNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
137	[BUG]  [BUGGY]  if(end  >  INT_0)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(end  >  INT_0)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(end  >  INT_0)  {  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  _parserNumber2(outBuf,    outPtr,    negative,    intLen);    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
138	[BUG]  [BUGGY]  end  =  _inputPtr  +  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  end  =  _inputPtr  +  outBuf.length  -  1;  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	end  =  _inputPtr  +  outBuf.length  -  1;	  end    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
139	[BUG]  [BUGGY]  if(c  ==  INT_0)  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;  if  (end  >  _inputEnd)  {      [BUGGY]  if(c  ==  INT_0)  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  if  (c  <  INT_0  ||  c  >  INT_9)  {  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1217	1217	2	replace	if(c  ==  INT_0)  {  if(_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(_inputPtr    >=    end)    {    if(_inputEnd    <    =    0)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
