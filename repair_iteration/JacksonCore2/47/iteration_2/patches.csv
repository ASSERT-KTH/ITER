bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  _reader  =  ctxt.allocStringBuffer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocStringBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocStringBuffer();	  _reader    =    ctxt.allocTokenBuffer();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
2	[BUG]  [BUGGY]  _reader  =  ctxt.allocStringReader(r);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocStringReader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocStringReader(r);	  _reader    =    ctxt.allocStringReader();    	non-compiled	[CE]  <identifier>  expected	15	None	replace
3	[BUG]  [BUGGY]  _reader  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _symbols    =    st.symbols();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
4	[BUG]  [BUGGY]  if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  }	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _symbols    =    st.symbols();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
5	[BUG]  [BUGGY]  _reader  =  ctxt,  r.getReader());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt,  r.getReader());  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt,  r.getReader());	  _reader    =    r,    ctxt.getReader());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
6	[BUG]  [BUGGY]  _reader  =  r,  ctxt.getRawClass());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt.getRawClass());  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt.getRawClass());	  _reader    =    r,    ctxt.getReader());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
7	[BUG]  [BUGGY]  _reader  =  ctxt.allocReaderBuffer();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocReaderBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocReaderBuffer();	  _reader    =    ctxt.allocInputBuffer();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
8	[BUG]  [BUGGY]  _reader  =  ctxt.allocReader(r,  codec);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocReader(r,  codec);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocReader(r,  codec);	  _reader    =    ctxt.allocReader(r);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
9	[BUG]  [BUGGY]  _reader  =  ctxt.allocReader(r,  true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocReader(r,  true);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocReader(r,  true);	  _reader    =    ctxt.allocReader(r);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
10	[BUG]  [BUGGY]  _reader  =  ctxt.allocReader(r,  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocReader(r,  false);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocReader(r,  false);	  _reader    =    ctxt.allocReader(r);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
11	[BUG]  [BUGGY]  _reader  =  ctxt,  r,  codec);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt,  r,  codec);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt,  r,  codec);	  _reader    =    ctxt,    r);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  _reader  =  ctxt.readFully(r);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.readFully(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.readFully(r);	  _reader    =    ctxt.reader();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
13	[BUG]  [BUGGY]  _reader  =  ctxt.readFully();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.readFully();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.readFully();	  _reader    =    ctxt.reader();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
14	[BUG]  [BUGGY]  _reader  =  ctxt.readFile();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.readFile();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.readFile();	  _reader    =    ctxt.reader();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
15	[BUG]  [BUGGY]  _reader  =  r.getReader(ctxt,  codec);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r.getReader(ctxt,  codec);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r.getReader(ctxt,  codec);	  _reader    =    r.getReader(ctxt);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
16	[BUG]  [BUGGY]  _reader  =  r.getReader(ctxt,  this);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r.getReader(ctxt,  this);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r.getReader(ctxt,  this);	  _reader    =    r.getReader(ctxt);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
17	[BUG]  [BUGGY]  _reader  =  ctxt.allocReferenceReader();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocReferenceReader();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocReferenceReader();	  _reader    =    ctxt.allocNameReader();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
18	[BUG]  [BUGGY]  _inputBuffer  =  ctxt.allocTokenBuffer();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _inputBuffer  =  ctxt.allocTokenBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_inputBuffer  =  ctxt.allocTokenBuffer();	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
19	[BUG]  [BUGGY]  _inputBuffer  =  ctxt.inputBuffer();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _inputBuffer  =  ctxt.inputBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_inputBuffer  =  ctxt.inputBuffer();	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
20	[BUG]  [BUGGY]  _inputBuffer  =  ctxt.inputBuffer(r);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _inputBuffer  =  ctxt.inputBuffer(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_inputBuffer  =  ctxt.inputBuffer(r);	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
21	[BUG]  [BUGGY]  _reader  =  r,  ctxt,  codec,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt,  codec,  null);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt,  codec,  null);	  _reader    =    r,    ctxt,    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  _reader  =  r,  ctxt,  null,  codec);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt,  null,  codec);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt,  null,  codec);	  _reader    =    r,    ctxt,    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  _reader  =  ctxt.readInt();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.readInt();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.readInt();	  _reader    =    ctxt.read();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
24	[BUG]  [BUGGY]  _reader  =  r!=  null?  null  :  r.reader;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r!=  null?  null  :  r.reader;  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r!=  null?  null  :  r.reader;	  _reader    =    r    ==    null?    null    :    r.reader;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
25	[BUG]  [BUGGY]  _reader  =  ctxt.getInputStreamReader();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getInputStreamReader();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getInputStreamReader();	  _reader    =    ctxt.getInputStream();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
26	[BUG]  [BUGGY]  _reader  =  ctxt.getConfig().getInputStream();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getConfig().getInputStream();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getConfig().getInputStream();	  _reader    =    ctxt.getInputStream();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
27	[BUG]  [BUGGY]  ||(r!=  null  &&  r.getClass()!=  getClass()))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  ||(r!=  null  &&  r.getClass()!=  getClass()))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	||(r!=  null  &&  r.getClass()!=  getClass()))  {  throw  new  IllegalArgumentException( " ");	  if(r!=    null)    {    if(_tokenIncomplete)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
28	[BUG]  [BUGGY]  _reader  =  ctxt.getWriter();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getWriter();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getWriter();	  _reader    =    r.getWriter();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  _reader  =  ctxt.allocTokenReader(r,  codec);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocTokenReader(r,  codec);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocTokenReader(r,  codec);	  _reader    =    ctxt.allocTokenReader(r);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
30	[BUG]  [BUGGY]  r  =  ctxt.getConfig().getRawClass();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  r  =  ctxt.getConfig().getRawClass();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	r  =  ctxt.getConfig().getRawClass();	  r    =    ctxt.getRawClass();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  r  =  ctxt.getParent();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  r  =  ctxt.getParent();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	r  =  ctxt.getParent();	  r    =    ctxt.getRawClass();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
32	[BUG]  [BUGGY]  _symbols  =  r.getSymbols();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _symbols  =  r.getSymbols();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_symbols  =  r.getSymbols();	  _symbols    =    ctxt.getSymbols();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
33	[BUG]  [BUGGY]  _reader  =  ctxt.allocSyntheticTokenReader(r);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocSyntheticTokenReader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocSyntheticTokenReader(r);	  _reader    =    ctxt.allocSyntheticTokenReader();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
34	[BUG]  [BUGGY]  _reader  =  r,  ctxt,  codec,  st);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt,  codec,  st);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt,  codec,  st);	  _reader    =    r,    ctxt,    codec);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
35	[BUG]  [BUGGY]  _reader  =  ctxt.getRawClass();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getRawClass();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getRawClass();	  _reader    =    r.getRawClass();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
36	[BUG]  [BUGGY]  _reader  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic();	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _isSynthetic    =    st.isSynthetic();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
37	[BUG]  [BUGGY]  _reader  =  ctxt.allocSyntheticReader(r);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocSyntheticReader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocSyntheticReader(r);	  _reader    =    ctxt.allocSyntheticReader();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
38	[BUG]  [BUGGY]  _reader  =  ctxt.getRawReader();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getRawReader();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getRawReader();	  _reader    =    ctxt.getReader();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
39	[BUG]  [BUGGY]  _reader  =  r,  ctxt.allocTokenBuffer();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt.allocTokenBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt.allocTokenBuffer();	  _reader    =    r,    ctxt.allocTokenBuffer());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
40	[BUG]  [BUGGY]  _reader  =  ctxt.getReaderConfig();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getReaderConfig();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getReaderConfig();	  _reader    =    ctxt.getConfig();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
41	[BUG]  [BUGGY]  _reader  =  ctxt.getRawConfig();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getRawConfig();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getRawConfig();	  _reader    =    ctxt.getConfig();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
42	[BUG]  [BUGGY]  _tokenIncomplete  =  false;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _tokenIncomplete  =  false;  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_tokenIncomplete  =  false;	  if(r!=    null)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
43	[BUG]  [BUGGY]  ||  _tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  ||  _tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	||  _tokenIncomplete)  {  _tokenIncomplete  =  false;  }	  if(r!=    null)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
44	[BUG]  [BUGGY]  ||  r!=  null)  {  _tokenIncomplete  =  false;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  ||  r!=  null)  {  _tokenIncomplete  =  false;  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	||  r!=  null)  {  _tokenIncomplete  =  false;  }	  if(r!=    null)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
45	[BUG]  [BUGGY]  _reader  =  ctxt.getReader(r);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getReader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getReader(r);	  _reader    =    r.getReader(ctxt);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
46	[BUG]  [BUGGY]  _reader  =  r,  ctxt.getInputStream());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt.getInputStream());  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt.getInputStream());	  _reader    =    r,    ctxt.getReader());    	non-compiled	[CE]  <identifier>  expected	29	None	replace
47	[BUG]  [BUGGY]  _reader  =  ctxt,  r.allocTokenBuffer());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt,  r.allocTokenBuffer());  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt,  r.allocTokenBuffer());	  _reader    =    r,    ctxt.allocTokenBuffer());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
48	[BUG]  [BUGGY]  _reader  =  ctxt,  codec.allocTokenBuffer());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt,  codec.allocTokenBuffer());  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt,  codec.allocTokenBuffer());	  _reader    =    r,    ctxt.allocTokenBuffer());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
49	[BUG]  [BUGGY]  _symbols  =  ctxt.getParameterTypes();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _symbols  =  ctxt.getParameterTypes();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_symbols  =  ctxt.getParameterTypes();	  _symbols    =    ctxt.getSymbols();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
50	[BUG]  [BUGGY]  _symbols  =  ctxt.getSymbols(r);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _symbols  =  ctxt.getSymbols(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_symbols  =  ctxt.getSymbols(r);	  _symbols    =    ctxt.getSymbols();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  _reader  =  ctxt.allocNameReader(r);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocNameReader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocNameReader(r);	  _reader    =    ctxt.allocTokenReader(r);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
52	[BUG]  [BUGGY]  _reader  =  ctxt.findReader(r);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.findReader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.findReader(r);	  _reader    =    ctxt.getReader();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
53	[BUG]  [BUGGY]  _inputBuffer  =  ctxt.inputInputBuffer(r);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _inputBuffer  =  ctxt.inputInputBuffer(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_inputBuffer  =  ctxt.inputInputBuffer(r);	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
54	[BUG]  [BUGGY]  if(r  ==  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
55	[BUG]  [BUGGY]  if(r  ==  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  else  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  else  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  else  {  _inputBuffer  =  ctxt.inputInputBuffer();  }	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
56	[BUG]  [BUGGY]  _reader  =  ctxt,  r,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt,  r,  null);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt,  r,  null);	  _reader    =    r,    ctxt,    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
57	[BUG]  [BUGGY]  _reader  =  r,  ctxt,  this);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt,  this);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt,  this);	  _reader    =    r,    ctxt,    null);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
58	[BUG]  [BUGGY]  if(r  ==  null)  {  _Reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  _Reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  _Reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  }	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _symbols    =    st.symbols();    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
59	[BUG]  [BUGGY]  _reader  =  ctxt.allocInputReader(r);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocInputReader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocInputReader(r);	  _reader    =    ctxt.allocReader(r);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
60	[BUG]  [BUGGY]  _reader  =  ctxt.allocReader(r,  _tokenIncomplete);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocReader(r,  _tokenIncomplete);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocReader(r,  _tokenIncomplete);	  _reader    =    ctxt.allocReader(r);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
61	[BUG]  [BUGGY]  _reader  =  r  ==  null?  null  :  r.getRawClass();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r  ==  null?  null  :  r.getRawClass();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r  ==  null?  null  :  r.getRawClass();	  _reader    =    r.getRawClass();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
62	[BUG]  [BUGGY]  _reader  =  r!=  null?  null  :  r.getRawClass();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r!=  null?  null  :  r.getRawClass();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r!=  null?  null  :  r.getRawClass();	  _reader    =    r.getRawClass();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
63	[BUG]  [BUGGY]  _reader  =  ctxt.getResourceAsStream(r);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getResourceAsStream(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getResourceAsStream(r);	  _reader    =    ctxt.getInputStream();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
64	[BUG]  [BUGGY]  _reader  =  ctxt.getErrorReporter();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getErrorReporter();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getErrorReporter();	  _reader    =    ctxt.getInputStream();    	non-compiled	[CE]  <identifier>  expected	21	None	replace
65	[BUG]  [BUGGY]  if(r  ==  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  if(_tokenIncomplete)  {  _tokenIncomplete  =  false;  }	  if(r!=    null)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
66	[BUG]  [BUGGY]  if(r  ==  null)  {  if(!_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  if(!_tokenIncomplete)  {  _tokenIncomplete  =  false;  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  if(!_tokenIncomplete)  {  _tokenIncomplete  =  false;  }	  if(r!=    null)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
67	[BUG]  [BUGGY]  _reader  =  ctxt.allocTokenRead();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocTokenRead();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocTokenRead();	  _reader    =    ctxt.read();    	non-compiled	[CE]  <identifier>  expected	9	None	replace
68	[BUG]  [BUGGY]  if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic();  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic();  }	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _isSynthetic    =    st.isSynthetic();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
69	[BUG]  [BUGGY]  if(r  ==  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic()  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic()  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _isSynthetic  =  st.isSynthetic()	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _isSynthetic    =    st.isSynthetic();    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
70	[BUG]  [BUGGY]  _reader  =  ctxt,  _reader);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt,  _reader);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt,  _reader);	  _reader    =    ctxt,    r);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
71	[BUG]  [BUGGY]  _reader  =  ctxt.reader(r);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.reader(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.reader(r);	  _reader    =    ctxt.reader();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
72	[BUG]  [BUGGY]  _reader  =  ctxt.readerInput();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.readerInput();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.readerInput();	  _reader    =    ctxt.reader();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
73	[BUG]  [BUGGY]  _reader  =  ctxt.readerFactory();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.readerFactory();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.readerFactory();	  _reader    =    ctxt.reader();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
74	[BUG]  [BUGGY]  if(r  ==  null)  {  if(_tokenIncomplete)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  if(_tokenIncomplete)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  if(_tokenIncomplete)  {  throw  new  IllegalArgumentException( " ");  }	  if(r!=    null)    {    if(_tokenIncomplete)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
75	[BUG]  [BUGGY]  if(_tokenIncomplete)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(_tokenIncomplete)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(_tokenIncomplete)  {  throw  new  IllegalArgumentException( " ");  }	  if(r!=    null)    {    if(_tokenIncomplete)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
76	[BUG]  [BUGGY]  if(r  ==  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  _symbols  =  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r  ==  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  _symbols  =  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r  ==  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  _symbols  =	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _symbols    =    st.symbols();    _symbols    =    s    	non-compiled	[CE]  <identifier>  expected	26	None	replace
77	[BUG]  [BUGGY]  if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  _symbols  =  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  _symbols  =  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r!=  null)  {  _reader  =  ctxt;  }  else  {  _inputBuffer  =  ctxt.allocTokenBuffer();  _symbols  =  st.symbols();  _symbols  =	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _symbols    =    st.symbols();    _symbols    =    s    	non-compiled	[CE]  <identifier>  expected	26	None	replace
78	[BUG]  [BUGGY]  _reader  =  ctxt.allocTokenBuffer(r);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocTokenBuffer(r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocTokenBuffer(r);	  _reader    =    ctxt.allocTokenBuffer();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
79	[BUG]  [BUGGY]  _reader  =  ctxt.allocCharBuffer();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocCharBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocCharBuffer();	  _reader    =    ctxt.allocTokenBuffer();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
80	[BUG]  [BUGGY]  r  =  ctxt.getSourceReference();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  r  =  ctxt.getSourceReference();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	r  =  ctxt.getSourceReference();	  r    =    ctxt.getRawClass();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  _reader  =  ctxt.allocSourceReference();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocSourceReference();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocSourceReference();	  _reader    =    ctxt.allocInputReader();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
82	[BUG]  [BUGGY]  _reader  =  r,  ctxt,  _objectCodec);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  r,  ctxt,  _objectCodec);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  r,  ctxt,  _objectCodec);	  _reader    =    r,    ctxt,    codec);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
83	[BUG]  [BUGGY]  r  =  ctxt.getInputStream();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  r  =  ctxt.getInputStream();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	r  =  ctxt.getInputStream();	  r    =    ctxt.getRawClass();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
84	[BUG]  [BUGGY]  r  =  ctxt.getContextClass();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  r  =  ctxt.getContextClass();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	r  =  ctxt.getContextClass();	  r    =    ctxt.getRawClass();    	non-compiled	[CE]  <identifier>  expected	7	None	replace
85	[BUG]  [BUGGY]  _reader  =  ctxt.getReaderContext();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getReaderContext();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getReaderContext();	  _reader    =    ctxt.getConfig();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
86	[BUG]  [BUGGY]  _symbols  =  ctxt.decodeSymbols();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _symbols  =  ctxt.decodeSymbols();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_symbols  =  ctxt.decodeSymbols();	  _symbols    =    ctxt.getSymbols();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
87	[BUG]  [BUGGY]  _symbols  =  ctxt.isSymbols();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _symbols  =  ctxt.isSymbols();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_symbols  =  ctxt.isSymbols();	  _symbols    =    ctxt.getSymbols();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
88	[BUG]  [BUGGY]  _reader  =  ctxt,  codec,  r);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt,  codec,  r);  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt,  codec,  r);	  _reader    =    ctxt,    r);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
89	[BUG]  [BUGGY]  _reader  =  ctxt.allocReferenceBuffer();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.allocReferenceBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.allocReferenceBuffer();	  _reader    =    ctxt.allocInputBuffer();    	non-compiled	[CE]  <identifier>  expected	24	None	replace
90	[BUG]  [BUGGY]  _inputBuffer  =  ctxt.allocInputBuffer();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _inputBuffer  =  ctxt.allocInputBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_inputBuffer  =  ctxt.allocInputBuffer();	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
91	[BUG]  [BUGGY]  if(r!=  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r!=  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r!=  null)  {  _inputBuffer  =  ctxt.inputInputBuffer();  }	  _inputBuffer    =    ctxt.inputInputBuffer();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
92	[BUG]  [BUGGY]  _incomplete  =  ctxt.allocTokenBuffer();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _incomplete  =  ctxt.allocTokenBuffer();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_incomplete  =  ctxt.allocTokenBuffer();	  if(r!=    null)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
93	[BUG]  [BUGGY]  _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;	  if(r!=    null)    {    if(_tokenIncomplete)    {    _tokenIncomplete    =    false;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
94	[BUG]  [BUGGY]  if(r!=  null)  {  _reader  =  r.getReader(ctxt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  if(r!=  null)  {  _reader  =  r.getReader(ctxt);  }  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	if(r!=  null)  {  _reader  =  r.getReader(ctxt);  }	  _reader    =    r.getReader(ctxt);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
95	[BUG]  [BUGGY]  _symbols  =  st.symbols();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _symbols  =  st.symbols();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_symbols  =  st.symbols();	  if(r    ==    null)    {    _reader    =    ctxt;    }    else    {    _inputBuffer    =    ctxt.allocTokenBuffer();    _symbols    =    st.symbols();    _symbols    =    s    	non-compiled	[CE]  <identifier>  expected	26	None	replace
96	[BUG]  [BUGGY]  _reader  =  ctxt.getReaderInput();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  ReaderBasedJsonParser(IOContext  ctxt,  int  features,  Reader  r,  ObjectCodec  codec,  CharsToNameCanonicalizer  st)  {  super(ctxt,  features);      [BUGGY]  _reader  =  ctxt.getReaderInput();  [BUGGY]      _inputBuffer  =  ctxt.allocTokenBuffer();  _objectCodec  =  codec;  _symbols  =  st;  _hashSeed  =  st.hashSeed();  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  <init>  [RETURN_TYPE]  CharsToNameCanonicalizer)  IOContext  ctxt  int  features  Reader  r  ObjectCodec  codec  CharsToNameCanonicalizer  st  [VARIABLES]  boolean  _tokenIncomplete  Reader  _reader  r  IOContext  ctxt  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  features  char[]  _inputBuffer  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5	81	81	2	replace	_reader  =  ctxt.getReaderInput();	  _reader    =    ctxt.getReader();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
