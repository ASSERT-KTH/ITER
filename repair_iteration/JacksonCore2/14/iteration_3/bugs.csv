bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  fractLen  =  _symbols.length  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  _symbols.length  -  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  _symbols.length  -  1;	  int    fractLen    =    _symbols.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
2	[BUG]  [BUGGY]  int  fractLen  =  _symbols.length  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  _symbols.length  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  _symbols.length  +  1;	  int    fractLen    =    _symbols.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
3	[BUG]  [BUGGY]  char  fractLen  =  _symbols.length;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  char  fractLen  =  _symbols.length;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	char  fractLen  =  _symbols.length;	  int    fractLen    =    _symbols.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
4	[BUG]  [BUGGY]  int  fractLen  =(intLen  <  expLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(intLen  <  expLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(intLen  <  expLen)?  1  :  0;	  int    fractLen    =(intLen    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
5	[BUG]  [BUGGY]  int  fractLen  =(intLen  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(intLen  <  1)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(intLen  <  1)?  1  :  0;	  int    fractLen    =(intLen    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
6	[BUG]  [BUGGY]  int  fractLen  =(intLen  <  len)?  1  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(intLen  <  len)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(intLen  <  len)?  1  :  0;	  int    fractLen    =(intLen    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	21	None	replace
7	[BUG]  [BUGGY]  int  fractLen  =  inputLen;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  inputLen;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  inputLen;	  int    fractLen    =    ptr;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
8	[BUG]  [BUGGY]  char  fractLen  =  ptr;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  char  fractLen  =  ptr;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	char  fractLen  =  ptr;	  int    fractLen    =    ptr;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  if(ch  ==  '[')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  ==  '[')  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  ==  '[')  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '[')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
10	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  <  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '[')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
11	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  ==  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '[')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
12	[BUG]  [BUGGY]  int  fractLen  =(len  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(len  <  1)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(len  <  1)?  1  :  0;	  int    fractLen    =(ptr    <    len)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
13	[BUG]  [BUGGY]  int  fractLen  =(ptr  >=  len)?  1  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  >=  len)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  >=  len)?  1  :  0;	  int    fractLen    =(ptr    <    len)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
14	[BUG]  [BUGGY]  int  fractLen  =(ch  <  len)?  1  :  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ch  <  len)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ch  <  len)?  1  :  0;	  int    fractLen    =(ptr    <    len)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
15	[BUG]  [BUGGY]  int  fractLen  =(ptr  <  inputLen)?  3  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  <  inputLen)?  3  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  <  inputLen)?  3  :  0;	  int    fractLen    =(ptr    <    inputLen)?    2    :    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
16	[BUG]  [BUGGY]  int  fractLen  =(ptr  <  inputLen)?  2  :  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  <  inputLen)?  2  :  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  <  inputLen)?  2  :  1;	  int    fractLen    =(ptr    <    inputLen)?    2    :    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
17	[BUG]  [BUGGY]  char  fractLen  =  ch;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  char  fractLen  =  ch;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	char  fractLen  =  ch;	  char    fractLen    =    _inputPtr;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
18	[BUG]  [BUGGY]  String  fractLen  =  _inputPtr;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  String  fractLen  =  _inputPtr;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	String  fractLen  =  _inputPtr;	  char    fractLen    =    _inputPtr;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
19	[BUG]  [BUGGY]  char  fractLen  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  char  fractLen  =  _inputBuffer[ptr++];  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	char  fractLen  =  _inputBuffer[ptr++];	  int    fractLen    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
20	[BUG]  [BUGGY]  int  fractLen  =  _inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  _inputBuffer[ptr++]  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  _inputBuffer[ptr++]  +  1;	  int    fractLen    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
21	[BUG]  [BUGGY]  int  fractLen  =(ptr  >>  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  >>  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  >>  inputLen)?  1  :  0;	  int    fractLen    =(ptr    >=    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
22	[BUG]  [BUGGY]  int  fractLen  =(ptr  ==  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  ==  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  ==  inputLen)?  1  :  0;	  int    fractLen    =(ptr    >=    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  float  fractLen  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  float  fractLen  =  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	float  fractLen  =  0;	  String    fractLen    =    0;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  String  fractLen  =  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  String  fractLen  =  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	String  fractLen  =  1;	  String    fractLen    =    0;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  int  fractLen  =(ch  <  INT_0)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ch  <  INT_0)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ch  <  INT_0)?  1  :  0;	  int    fractLen    =(ch    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
26	[BUG]  [BUGGY]  int  fractLen  =  ch  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  ch  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  ch  +  1;	  int    fractLen    =    ch;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
27	[BUG]  [BUGGY]  ch  =(int)_inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  ch  =(int)_inputBuffer[ptr++]  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	ch  =(int)_inputBuffer[ptr++]  +  1;	  ch    =(int)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	17	None	replace
28	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  ==  '.')  {  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  ==  '.')  {  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  ==  '.')  {  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  ==  '.')  {  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
31	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
32	[BUG]  [BUGGY]  int  fractLen  =  ptr  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  ptr  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  ptr  +  1;	  int    fractLen    =    _inputPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
33	[BUG]  [BUGGY]  int  fractLen  =(int)(ptr  >=  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(int)(ptr  >=  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(int)(ptr  >=  inputLen)?  1  :  0;	  int    fractLen    =(int)(ptr    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
34	[BUG]  [BUGGY]  int  fractLen  =(int)(ptr  +  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(int)(ptr  +  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(int)(ptr  +  inputLen)?  1  :  0;	  int    fractLen    =(int)(ptr    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
35	[BUG]  [BUGGY]  char  fractLen  =(char)(ptr  <  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  char  fractLen  =(char)(ptr  <  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	char  fractLen  =(char)(ptr  <  inputLen)?  1  :  0;	  int    fractLen    =(int)(ptr    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	20	None	replace
36	[BUG]  [BUGGY]  int  fractLen  =  _inputEnd  -  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  _inputEnd  -  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  _inputEnd  -  1;	  int    fractLen    =    _inputEnd    +    1;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  int  fractLen  =(ptr  <  inputEnd)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  <  inputEnd)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  <  inputEnd)?  1  :  0;	  int    fractLen    =(intLen    <    inputEnd)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  int  fractLen  =(ch  <  inputEnd)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ch  <  inputEnd)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ch  <  inputEnd)?  1  :  0;	  int    fractLen    =(intLen    <    inputEnd)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
40	[BUG]  [BUGGY]  String  fractLen  =  _inputEnd;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  String  fractLen  =  _inputEnd;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	String  fractLen  =  _inputEnd;	  char    fractLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
41	[BUG]  [BUGGY]  char  fractLen  =  _inputEnd  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  char  fractLen  =  _inputEnd  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	char  fractLen  =  _inputEnd  +  1;	  char    fractLen    =    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
42	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  break  int_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ptr  >=  inputLen)  {  break  int_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  ch  =(byte)_inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  ch  =(byte)_inputBuffer[ptr++];  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	ch  =(byte)_inputBuffer[ptr++];	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
44	[BUG]  [BUGGY]  int  fractLen  =  _inputPtr  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  _inputPtr  +  2;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  _inputPtr  +  2;	  int    fractLen    =    _inputPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
45	[BUG]  [BUGGY]  int  fractLen  =(_symbols!=  null)?  0  :  _symbols.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(_symbols!=  null)?  0  :  _symbols.length;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(_symbols!=  null)?  0  :  _symbols.length;	  int    fractLen    =    _symbols.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
46	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ptr  >=  inputLen)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
47	[BUG]  [BUGGY]  if(ch  ==  ']')  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  ==  ']')  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  ==  ']')  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '[')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
48	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  Integer  ptr  =  _inputBuffer[ptr++];  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	Integer  ptr  =  _inputBuffer[ptr++];	  if(ptr    >=    inputLen)    {    if(ch    ==    '[')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
49	[BUG]  [BUGGY]  int  fractLen  =(intLen  <  inputPtr)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(intLen  <  inputPtr)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(intLen  <  inputPtr)?  1  :  0;	  int    fractLen    =(intLen    <    inputEnd)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
50	[BUG]  [BUGGY]  if(ch!=  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch!=  '.')  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch!=  '.')  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  int  fractLen  =(len  <  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(len  <  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(len  <  inputLen)?  1  :  0;	  int    fractLen    =(ptr    <    len)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
52	[BUG]  [BUGGY]  int  fractLen  =(int)len?  1  :  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(int)len?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(int)len?  1  :  0;	  int    fractLen    =(ptr    <    len)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
53	[BUG]  [BUGGY]  int  fractLen  =(ch  ==  INT_0)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ch  ==  INT_0)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ch  ==  INT_0)?  1  :  0;	  int    fractLen    =(ch    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
54	[BUG]  [BUGGY]  int  fractLen  =(ch  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ch  <  1)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ch  <  1)?  1  :  0;	  int    fractLen    =(ch    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
55	[BUG]  [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  ch  =(char)_inputBuffer[ptr++]  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	ch  =(char)_inputBuffer[ptr++]  +  1;	  ch    =(char)_inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	18	None	replace
56	[BUG]  [BUGGY]  char  fractLen  =  _inputPtr  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  char  fractLen  =  _inputPtr  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	char  fractLen  =  _inputPtr  +  1;	  char    fractLen    =    _inputPtr;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
57	[BUG]  [BUGGY]  fractLen  =  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  fractLen  =  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	fractLen  =  0;	  String    fractLen    =    0;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
58	[BUG]  [BUGGY]  int  fractLen  =(ptr  +  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  +  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  +  inputLen)?  1  :  0;	  int    fractLen    =(ptr    >=    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  if(ch!=  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch!=  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch!=  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
60	[BUG]  [BUGGY]  if(ch  <  =  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  <  =  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  <  =  INT_0)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
61	[BUG]  [BUGGY]  t  fractLen  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  t  fractLen  =  _inputBuffer[ptr++];  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	t  fractLen  =  _inputBuffer[ptr++];	  int    fractLen    =    _inputBuffer[ptr++];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
62	[BUG]  [BUGGY]  String  fractLen  =(ptr  <  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  String  fractLen  =(ptr  <  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	String  fractLen  =(ptr  <  inputLen)?  1  :  0;	  String    fractLen    =    0;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
64	[BUG]  [BUGGY]  int  fractLen  =  _inputBuffer.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  _inputBuffer.length;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  _inputBuffer.length;	  int    fractLen    =    ch;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
65	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  '.'  ||  ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  '.'  ||  ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  '.'  ||  ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
66	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  '.'  ||  ch  ==  '>')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  '.'  ||  ch  ==  '>')  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  '.'  ||  ch  ==  '>')  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
67	[BUG]  [BUGGY]  int  fractLen  =(ptr  <  inputLen)?  4  :  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ptr  <  inputLen)?  4  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ptr  <  inputLen)?  4  :  0;	  int    fractLen    =(ptr    <    inputLen)?    2    :    0;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
68	[BUG]  [BUGGY]  int  fractLen  =(intLen  >=  inputLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(intLen  >=  inputLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(intLen  >=  inputLen)?  1  :  0;	  int    fractLen    =(ptr    >=    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
69	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ch  <  INT_len)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ch  <  INT_len)  {  if(ptr  >=  inputLen)  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ptr    >=    inputLen)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  int  fractLen  =(ch  <  expLen)?  1  :  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(ch  <  expLen)?  1  :  0;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(ch  <  expLen)?  1  :  0;	  int    fractLen    =(ch    <    inputLen)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
71	[BUG]  [BUGGY]  int  fractLen  =  _inputBuffer.length  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =  _inputBuffer.length  +  1;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =  _inputBuffer.length  +  1;	  int    fractLen    =    _inputPtr    +    1;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
72	[BUG]  [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  '['  ||  ch  ==  ']')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  if(ptr  >=  inputLen)  {  if(ch  ==  '['  ||  ch  ==  ']')  {  break  dummy_loop;  }  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	if(ptr  >=  inputLen)  {  if(ch  ==  '['  ||  ch  ==  ']')  {  break  dummy_loop;  }	  if(ptr    >=    inputLen)    {    if(ch    ==    '[')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
73	[BUG]  [BUGGY]  int  fractLen  =(_symbols!=  null)?  _symbols.length  :  _symbols.length;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  ++intLen;  }      [BUGGY]  int  fractLen  =(_symbols!=  null)?  _symbols.length  :  _symbols.length;  [BUGGY]        if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  if  (ptr  >=  inputLen)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	902	902	2	replace	int  fractLen  =(_symbols!=  null)?  _symbols.length  :  _symbols.length;	  int    fractLen    =    _symbols.length;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
