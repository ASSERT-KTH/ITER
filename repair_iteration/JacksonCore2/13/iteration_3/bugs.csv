bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  ':')  {  break  dummy_loop;  }	  if(ch    ==    '.'    ||    ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
2	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.'    ||    ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
3	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  _inputBuffer[ptr++];  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  _inputBuffer[ptr++];  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')  {  break  _inputBuffer[ptr++];  }	  if(ch    ==    '.'    ||    ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
4	[BUG]  [BUGGY]  ||  ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  '.')  {  break  dummy_loop;  }	  ||    ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
5	[BUG]  [BUGGY]  ||  ch!=  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch!=  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch!=  '.')  {  break  dummy_loop;  }	  ||    ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
6	[BUG]  [BUGGY]  ||  ch  >=  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  >=  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  >=  '.')  {  break  dummy_loop;  }	  ||    ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
7	[BUG]  [BUGGY]  ||  ch  ==  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  INT_9)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  INT_9)  {  break  int_loop;  }	  ||    ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
8	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
9	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  ||(ch  <  INT_0  ||  ch  >  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  <  INT_0  ||  ch  >  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  <  INT_0  ||  ch  >  INT_9))  {  break  int_loop;  }	  ||(ch    <    INT_0    &&    ch    <    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
12	[BUG]  [BUGGY]  ||(ch  >=  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }	  ||(ch    <    INT_0    &&    ch    <    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
13	[BUG]  [BUGGY]  ||(ch  >=  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }	  ||(ch    <    INT_0    &&    ch    <    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
14	[BUG]  [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }	  ||(ch    <    INT_0    &&    ch    <    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
15	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+')  {  break  dummy_loop;  }	  if(ch    ==    '.'    ||    ch    ==    '+')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
16	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.'  ||  ch  ==  '+')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.'  ||  ch  ==  '+')  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.'  ||  ch  ==  '+')  {  break  int_loop;  }	  if(ch    ==    '.'    ||    ch    ==    '+')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
17	[BUG]  [BUGGY]  ||  ch  ==  '+')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  '+')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  '+')  {  break  dummy_loop;  }	  if(ch    ==    '.'    ||    ch    ==    '+')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
18	[BUG]  [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }	  ||(ch    ==    INT_0    &&    ch    <    =    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  ||(ch  >=  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }	  ||(ch    ==    INT_0    &&    ch    <    =    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  ||(ch  <  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  <  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  <  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  }	  ||(ch    ==    INT_0    &&    ch    <    =    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  _inputEnd  =  ptr;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _inputEnd  =  ptr;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_inputEnd  =  ptr;	  break    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
22	[BUG]  [BUGGY]  _inputEnd  =  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _inputEnd  =  0;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_inputEnd  =  0;	  break    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
23	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    for(int    i    =    0,    len    =    _inputBuffer.length;    i    <    len;    ++i)    {    char[]    buf[]    =    _inputBuffer[i];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
24	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i]  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i]  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i]	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    for(int    i    =    0,    len    =    _inputBuffer.length;    i    <    len;    ++i)    {    char[]    buf[]    =    _inputBuffer[i];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
25	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    for(int    i    =    0,    len    =    _inputBuffer.length;    i    <    len;    ++i)    {    char[]    buf[]    =    _inputBuffer[i];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
26	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    for(int    i    =    0,    len    =    _inputBuffer.length;    i    <    len;    ++i)    {    char[]    buf[]    =    _inputBuffer[i];    	non-compiled	[CE]  <identifier>  expected	21	None	replace
27	[BUG]  [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  '.'  &&  ch  <  =  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    'a'    &&    ch    <    =    'z')||(ch    >=    'A'    &&    ch    <    =    'Z'))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
28	[BUG]  [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    'a'    &&    ch    <    =    'z')||(ch    >=    'A'    &&    ch    <    =    'Z'))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
29	[BUG]  [BUGGY]  ||(ch  >=  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    'a'    &&    ch    <    =    'z')||(ch    >=    'A'    &&    ch    <    =    'Z'))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
30	[BUG]  [BUGGY]  if(ch  ==  '[')break  int_len;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '[')break  int_len;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '[')break  int_len;	  if(ch    ==    '.')break    int_len;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
31	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen  =  0;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen  =  0;	  if(ch    ==    '.')break    int_len;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
32	[BUG]  [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  dummy_loop;	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
33	[BUG]  [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
34	[BUG]  [BUGGY]  ||(ch  ==  INT_0  &&  ch!=  INT_9))  {  break  dummy_loop;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  INT_0  &&  ch!=  INT_9))  {  break  dummy_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  INT_0  &&  ch!=  INT_9))  {  break  dummy_loop;	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
35	[BUG]  [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_10))  {  break  dummy_loop;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_10))  {  break  dummy_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  INT_0  &&  ch  <  =  INT_10))  {  break  dummy_loop;	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
36	[BUG]  [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }	  ||(ch    ==    '.'    &&    ch    <    =    INT_0)||(ch    >    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
38	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
39	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
40	[BUG]  [BUGGY]  if(ch  ==  '[')break  intLen;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '[')break  intLen;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '[')break  intLen;	  if(ch    ==    '[')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
41	[BUG]  [BUGGY]  if(ch  ==  ']')break  int_loop;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  ']')break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  ']')break  int_loop;	  if(ch    ==    '[')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
42	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
43	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0  ||  ch  >=  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
44	[BUG]  [BUGGY]  ||  ch  ==  INT_0)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  INT_0)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  INT_0)  {  break  int_loop;  }	  if(ch    ==    INT_0)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
45	[BUG]  [BUGGY]  break  dummy_loop.longValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop.longValue();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop.longValue();	  break    dummy_loop.intValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  break  dummy_loop.doubleValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop.doubleValue();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop.doubleValue();	  break    dummy_loop.intValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
47	[BUG]  [BUGGY]  ch  =  INT_0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ch  =  INT_0;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	ch  =  INT_0;	  break    INT_0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
48	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
49	[BUG]  [BUGGY]  if(ch  >=  '.')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  >=  '.')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >=  '.')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
50	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
51	[BUG]  [BUGGY]  break  dummy_loop.length  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop.length  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop.length  +  1;	  break    dummy_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
52	[BUG]  [BUGGY]  break  dummy_loop(0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop(0);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop(0);	  break    dummy_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
53	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
54	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
55	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  >=  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    <    INT_0)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
56	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    <    INT_0)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
57	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ch));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ch));  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(ch));	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
58	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch.toString());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch.toString());  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( " "  +  ch.toString());	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
59	[BUG]  [BUGGY]  _throwInternal();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _throwInternal();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_throwInternal();	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
60	[BUG]  [BUGGY]  _throwUnsupportedOperation();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _throwUnsupportedOperation();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_throwUnsupportedOperation();	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
61	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _input  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _input  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _input	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    for(int    i    =    0,    len    =    _inputBuffer.length;    i    <    len;    ++i)    {    char[]    buf[]    =    _inputBuffer[i];    if(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
62	[BUG]  [BUGGY]  _parseNumber(ch,  fractLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _parseNumber(ch,  fractLen);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_parseNumber(ch,  fractLen);	  _parseNumber(ch);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
63	[BUG]  [BUGGY]  _parseToken(ch);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _parseToken(ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_parseToken(ch);	  _parseNumber(ch);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
64	[BUG]  [BUGGY]  _parseInt(ch);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _parseInt(ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_parseInt(ch);	  _parseNumber(ch);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
65	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
66	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  ||  ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
68	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
69	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
70	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)  {  if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
71	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
72	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
73	[BUG]  [BUGGY]  ch  =  _inputBuffer[ptr++];  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ch  =  _inputBuffer[ptr++];  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	ch  =  _inputBuffer[ptr++];	  break    dummy_loop.intValue;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
74	[BUG]  [BUGGY]  break  dummy_loop.intValue  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop.intValue  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop.intValue  +  1;	  break    dummy_loop.intValue;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
75	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch);	  throw    new    IllegalArgumentException(   "Invalid    column    '   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
76	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Invalid  column  ' ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Invalid  column  ' ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Throwables.throw  new  IllegalArgumentException( "Invalid  column  ' ");	  throw    new    IllegalArgumentException(   "Invalid    column    '   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
77	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "' ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "' ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "' ");	  throw    new    IllegalArgumentException(   "Invalid    column    '   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
78	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
80	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
81	[BUG]  [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  dummy_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
82	[BUG]  [BUGGY]  parent!=  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  if(ch  ==  '.')  {  break  dummy_loop;  }	  parent!=    if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
83	[BUG]  [BUGGY]  parent!=  null  ||  ch  ==  '.')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  null  ||  ch  ==  '.')  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  null  ||  ch  ==  '.')  {  break  int_loop;  }	  parent!=    if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
84	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  intLen;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  intLen;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')break  intLen;	  if(ch    ==    '.'    ||    ch    ==    ':')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
85	[BUG]  [BUGGY]  if(ch  ==  ':'  ||  ch  ==  ':')break  int_loop;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  ':'  ||  ch  ==  ':')break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  ':'  ||  ch  ==  ':')break  int_loop;	  if(ch    ==    '.'    ||    ch    ==    ':')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
86	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  int_loop  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  int_loop  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')break  int_loop  +  1;	  if(ch    ==    '.'    ||    ch    ==    ':')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
87	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".trim());  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Throwables.throw  new  IllegalArgumentException( " ".trim());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
88	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Throwables.throw  new  IllegalStateException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
89	[BUG]  [BUGGY]  _reportUnexpectedChar(ch,  INT_0, "was  expecting  a  digit  value ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _reportUnexpectedChar(ch,  INT_0, "was  expecting  a  digit  value ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnexpectedChar(ch,  INT_0, "was  expecting  a  digit  value ");	  _reportUnexpectedChar(ch,   "was    expecting    a    digit    value   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
90	[BUG]  [BUGGY]  _reportUnexpectedChar(ch, "was  expecting  a  digit  value: "  +  INT_0);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _reportUnexpectedChar(ch, "was  expecting  a  digit  value: "  +  INT_0);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnexpectedChar(ch, "was  expecting  a  digit  value: "  +  INT_0);	  _reportUnexpectedChar(ch,   "was    expecting    a    digit    value   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
91	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    <    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
92	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    <    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
93	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    <    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
94	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)  {	  if(ch    ==    '.')    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
95	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {	  if(ch    ==    '.')    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
96	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {	  if(ch    ==    '.')    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
97	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {	  if(ch    ==    '.')    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
98	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  intLen;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  intLen;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+')break  intLen;	  if(ch    ==    '.'    ||    ch    ==    '+')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
99	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  int_len;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  int_len;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+')break  int_len;	  if(ch    ==    '.'    ||    ch    ==    '+')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
100	[BUG]  [BUGGY]  if(ch  >=  '.'  ||  ch  ==  '+')break  int_loop;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  >=  '.'  ||  ch  ==  '+')break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >=  '.'  ||  ch  ==  '+')break  int_loop;	  if(ch    ==    '.'    ||    ch    ==    '+')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
101	[BUG]  [BUGGY]  if(ch  >=  '.'  ||  ch  ==  '-')break  int_loop;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  >=  '.'  ||  ch  ==  '-')break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >=  '.'  ||  ch  ==  '-')break  int_loop;	  if(ch    ==    '.'    ||    ch    ==    '-')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
102	[BUG]  [BUGGY]  if(ch  <  '.'  ||  ch  >  '-')break  int_loop;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  '.'  ||  ch  >  '-')break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  '.'  ||  ch  >  '-')break  int_loop;	  if(ch    ==    '.'    ||    ch    ==    '-')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
103	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLen;  }	  ||    ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
104	[BUG]  [BUGGY]  ||  ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  ||    ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
105	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen  +  1;	  if(ch    ==    '.')break    intLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
106	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  intLen;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  intLen;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '-')break  intLen;	  if(ch    ==    '.')break    intLen;    	non-compiled	[CE]  <identifier>  expected	22	None	replace
107	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_len  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  int_len  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_len  +  1;	  if(ch    ==    '.')break    int_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
108	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
109	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  int_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
110	[BUG]  [BUGGY]  if(ch  <  INT_0)break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0)break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0)break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
111	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
112	[BUG]  [BUGGY]  ||  ch  <  INT_0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0)  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
113	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
114	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  return  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  return  new  IllegalArgumentException( " ");  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  return  new  IllegalArgumentException( " ");  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
115	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ".getMessage());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalStateException( " ".getMessage());  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalStateException( " ".getMessage());	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
116	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  d  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  d  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  d	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
117	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
118	[BUG]  [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    >=    INT_0    ||    ch    ==    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
119	[BUG]  [BUGGY]  if(ch  >=  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  >=  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >=  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ch    >=    INT_0    ||    ch    ==    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
120	[BUG]  [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
121	[BUG]  [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
122	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
123	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  d  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  d  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  d	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
124	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
125	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
126	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_l  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_l  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_l	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
127	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
128	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
129	[BUG]  [BUGGY]  if(ch  <  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    <    INT_0)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
130	[BUG]  [BUGGY]  _reportUnexpectedChar(ch,  INT_0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _reportUnexpectedChar(ch,  INT_0);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnexpectedChar(ch,  INT_0);	  _reportUnexpectedChar(ch,   "was    expecting    a    digit    value   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
131	[BUG]  [BUGGY]  _reportUnexpectedChar(ch,  INT_QUOTE);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _reportUnexpectedChar(ch,  INT_QUOTE);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnexpectedChar(ch,  INT_QUOTE);	  _reportUnexpectedChar(ch,   "was    expecting    a    digit    value   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
132	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
133	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop.intValue;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop.intValue;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop.intValue;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
134	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')  {  break  dummy_loop;  }	  if(ch    ==    '.'    ||    ch    ==    '+')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
135	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( " "  +  ch);	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
136	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  number  ' "  +  ch  + "'  has  to  be  ' "  +  _inputBuffer.length  + "'. ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  number  ' "  +  ch  + "'  has  to  be  ' "  +  _inputBuffer.length  + "'. ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( "Invalid  number  ' "  +  ch  + "'  has  to  be  ' "  +  _inputBuffer.length  + "'. ");	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
137	[BUG]  [BUGGY]  safeThanIndex(ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  safeThanIndex(ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	safeThanIndex(ch);	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
138	[BUG]  [BUGGY]  parent  =  parent.getParent();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent  =  parent.getParent();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent  =  parent.getParent();	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
139	[BUG]  [BUGGY]  allowNumber(ch);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  allowNumber(ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	allowNumber(ch);	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
140	[BUG]  [BUGGY]  allowNumber();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  allowNumber();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	allowNumber();	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
141	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
142	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
143	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  int_loop  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  int_loop  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+')break  int_loop  +  1;	  if(ch    ==    '.'    ||    ch    ==    '+')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
144	[BUG]  [BUGGY]  if(ch  ==  '['  ||  ch  ==  ']')break  int_loop;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '['  ||  ch  ==  ']')break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '['  ||  ch  ==  ']')break  int_loop;	  if(ch    ==    '.'    ||    ch    ==    '+')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
145	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  decoded_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  decoded_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')  {  break  decoded_loop;  }	  if(ch    ==    '.'    ||    ch    ==    ':')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
146	[BUG]  [BUGGY]  _throwUnquotedSpace();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _throwUnquotedSpace();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_throwUnquotedSpace();	  _reportUnsupportedOperation();    	non-compiled	[CE]  <identifier>  expected	39	None	replace
147	[BUG]  [BUGGY]  if(ch!=  INT_0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch!=  INT_0)  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch!=  INT_0)  {	  if(ch    ==    '.')    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
148	[BUG]  [BUGGY]  Thread.currentThread().interrupt();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Thread.currentThread().interrupt();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Thread.currentThread().interrupt();	  if(ch    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
149	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(JsonToken.VALUE_STRING);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Thread.currentThread().setContextClassLoader(JsonToken.VALUE_STRING);	  if(ch    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
150	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Thread.currentThread().setContextClassLoader(this);	  if(ch    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
151	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThreadContext());  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Thread.currentThread().setContextClassLoader(getCurrentThreadContext());	  if(ch    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
152	[BUG]  [BUGGY]  ||  ch  ==  '.')  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  '.')  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  '.')  {	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
153	[BUG]  [BUGGY]  ||  ch  =='<  ')  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  =='<  ')  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  =='<  ')  {	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
154	[BUG]  [BUGGY]  read();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  read();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	read();	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
155	[BUG]  [BUGGY]  ||  ch  ==  INT_0)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  INT_0)  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  INT_0)  {	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
156	[BUG]  [BUGGY]  break  _inputBuffer.intValue;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  _inputBuffer.intValue;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  _inputBuffer.intValue;	  break    dummy_loop.intValue;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
157	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen  =  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen  =  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen  =  1;	  if(ch    ==    '.')break    int_len;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
158	[BUG]  [BUGGY]  if(ch  ==  '['  ||  ch  ==  ']')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '['  ||  ch  ==  ']')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '['  ||  ch  ==  ']')  {  break  dummy_loop;  }	  if(ch    ==    '.'    ||    ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
159	[BUG]  [BUGGY]  if(ch  ==  '[')break  int_loop  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '[')break  int_loop  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '[')break  int_loop  +  1;	  if(ch    ==    '.')break    int_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
160	[BUG]  [BUGGY]  if(ch  ==  ':')break  int_loop  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  ':')break  int_loop  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  ':')break  int_loop  +  1;	  if(ch    ==    '.')break    int_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
161	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Invalid  token  ' ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalStateException( "Invalid  token  ' ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalStateException( "Invalid  token  ' ");	  throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
162	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  if  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  if  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  if	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    for(int    i    =    0,    len    =    _inputBuffer.length;    i    <    len;    ++i)    {    char[]    buf[]    =    _inputBuffer[i];    if(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
163	[BUG]  [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }	  ||(ch    ==    '.'    &&    ch    <    =    INT_0)||(ch    >=    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
164	[BUG]  [BUGGY]  if(ch  <  INT_0)break  int_loop;  if(ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0)break  int_loop;  if(ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0)break  int_loop;  if(ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
165	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  ==  'n')  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
166	[BUG]  [BUGGY]  ||  ch  ==  '.')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  '.')  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  '.')  {  break  int_loop;  }	  ||    ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
167	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  int_loop  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  int_loop  +  1;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '-')break  int_loop  +  1;	  if(ch    ==    '.'    ||    ch    ==    '-')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
168	[BUG]  [BUGGY]  if(ch  ==  '.')  {  break  _inputEnd;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')  {  break  _inputEnd;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {  break  _inputEnd;  }	  break    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
169	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  _parent.getParent())  {  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  null  &&  parent!=  _parent.getParent())  {  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  null  &&  parent!=  _parent.getParent())  {  if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
170	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  _parent.getParent())  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  null  &&  parent!=  _parent.getParent())  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  null  &&  parent!=  _parent.getParent())  {  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
171	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  _parent.getType())  {  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  null  &&  parent!=  _parent.getType())  {  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  null  &&  parent!=  _parent.getType())  {  if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
172	[BUG]  [BUGGY]  parent!=  null  &&  parent!=  _parent.getParent())  {  if(!_tokenIncomplete)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  null  &&  parent!=  _parent.getParent())  {  if(!_tokenIncomplete)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  null  &&  parent!=  _parent.getParent())  {  if(!_tokenIncomplete)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
173	[BUG]  [BUGGY]  break  dummy_loop  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop  +  2;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop  +  2;	  break    dummy_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
174	[BUG]  [BUGGY]  break  dummy_loop  +  1L;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop  +  1L;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop  +  1L;	  break    dummy_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
175	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
176	[BUG]  [BUGGY]  ||(ch  >=  'A'  &&  ch  <  =  'Z')||(ch  >=  'a'  &&  ch  <  =  'z'))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >=  'A'  &&  ch  <  =  'Z')||(ch  >=  'a'  &&  ch  <  =  'z'))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >=  'A'  &&  ch  <  =  'Z')||(ch  >=  'a'  &&  ch  <  =  'z'))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    'a'    &&    ch    <    =    'z')||(ch    >=    'A'    &&    ch    <    =    'Z'))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
177	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  >=  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  >=  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;  if(ch  >=  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
178	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch!=  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch!=  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;  if(ch!=  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
179	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
180	[BUG]  [BUGGY]  if(ch  ==  '.')  {  break  INT_0;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')  {  break  INT_0;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {  break  INT_0;  }	  break    INT_0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
181	[BUG]  [BUGGY]  parent  ==  if(ch!=  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent  ==  if(ch!=  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent  ==  if(ch!=  '.')  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
182	[BUG]  [BUGGY]  parent!=  null  &&(parent  ==  null  ||  parent.isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  null  &&(parent  ==  null  ||  parent.isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  null  &&(parent  ==  null  ||  parent.isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS)))  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
183	[BUG]  [BUGGY]  if(ch  ==  '[')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '[')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '[')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
184	[BUG]  [BUGGY]  if(ch  =='<  ')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  =='<  ')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  =='<  ')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
185	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "'. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "'. ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "'. ");	  throw    new    IllegalArgumentException(   "Invalid    column    '   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
186	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLoop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLoop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  intLoop;  }	  ||    ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
187	[BUG]  [BUGGY]  if(ch  =='<  ')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  =='<  ')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  =='<  ')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
188	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  '0'  ||  ch  ==  '9')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  '0'  ||  ch  ==  '9')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  ==  '0'  ||  ch  ==  '9')  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
189	[BUG]  [BUGGY]  if(ch  <  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
190	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  '-'  ||  ch  ==  '+')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  '-'  ||  ch  ==  '+')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  ==  '-'  ||  ch  ==  '+')  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
191	[BUG]  [BUGGY]  break  _inputBuffer.intValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  _inputBuffer.intValue();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  _inputBuffer.intValue();	  break    dummy_loop.intValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
192	[BUG]  [BUGGY]  break  _loop.intValue();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  _loop.intValue();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  _loop.intValue();	  break    dummy_loop.intValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
193	[BUG]  [BUGGY]  break  _inputEnd.intValue();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  _inputEnd.intValue();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  _inputEnd.intValue();	  break    dummy_loop.intValue();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
194	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
195	[BUG]  [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  dummy_loop;  if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
196	[BUG]  [BUGGY]  if(ch  =='<  ')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  =='<  ')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  =='<  ')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
197	[BUG]  [BUGGY]  ||(ch  >>  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  >>  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  >>  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    INT_0)||(ch    >    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
198	[BUG]  [BUGGY]  parent  ==  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent  ==  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent  ==  if(ch  ==  '.')  {  break  dummy_loop;  }	  parent!=    if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
199	[BUG]  [BUGGY]  parent!=  if(ch  ==  '.'  ||  ch  =='<  ')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent!=  if(ch  ==  '.'  ||  ch  =='<  ')  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  if(ch  ==  '.'  ||  ch  =='<  ')  {  break  int_loop;  }	  parent!=    if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
200	[BUG]  [BUGGY]  _parseAndClearBuffer(ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _parseAndClearBuffer(ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_parseAndClearBuffer(ch);	  _parseNumber(ch);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
201	[BUG]  [BUGGY]  _parseNumber(ch,  negative);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _parseNumber(ch,  negative);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_parseNumber(ch,  negative);	  _parseNumber(ch);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
202	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen  =  0;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen  =  0;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen  =  0;  if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    <    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
203	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  <  =  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  <  =  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;  if(ch  <  =  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    intLen;    if(ch    <    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
204	[BUG]  [BUGGY]  if(ch  ==  '[')break  dummy_loop;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '[')break  dummy_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '[')break  dummy_loop;	  if(ch    ==    '[')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
205	[BUG]  [BUGGY]  ||(ch  <  INT_0  &&  ch  >  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  <  INT_0  &&  ch  >  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  <  INT_0  &&  ch  >  INT_9))  {  break  int_loop;  }	  ||(ch    <    INT_0    &&    ch    <    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
206	[BUG]  [BUGGY]  ||(ch  <  INT_0  &&  ch  <  INT_9))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  <  INT_0  &&  ch  <  INT_9))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  <  INT_0  &&  ch  <  INT_9))  {  break  dummy_loop;  }	  ||(ch    <    INT_0    &&    ch    <    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
207	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
208	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  INT_9)break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  INT_9)break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0)  {  if(ch  ==  INT_9)break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
209	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
210	[BUG]  [BUGGY]  ||  ch  <  INT_0)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0)  {  break  int_loop;  }	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
211	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  ch);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Throwables.throw  new  IllegalArgumentException( " "  +  ch);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
212	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')break  int_loop;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')break  int_loop;	  if(ch    ==    '.'    ||    ch    ==    '+')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	57	None	replace
213	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  int_len;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  int_len;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '-')break  int_len;	  if(ch    ==    '.'    ||    ch    ==    '-')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
214	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)break  int_loop;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)break  int_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)break  int_loop;	  if(ch    ==    '.'    ||    ch    ==    '-')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	56	None	replace
215	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Throwables.throw  new  IllegalArgumentException( ", ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
216	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
217	[BUG]  [BUGGY]  ||(ch  <  INT_0  ||  ch  <  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  <  INT_0  ||  ch  <  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  <  INT_0  ||  ch  <  INT_9))  {  break  int_loop;  }	  ||(ch    <    INT_0    &&    ch    <    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
218	[BUG]  [BUGGY]  if(ch  <  INT_len  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_len  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_len  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
219	[BUG]  [BUGGY]  if(ch  <  INT_Len  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_Len  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_Len  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ch    <    =    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
220	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "'  has  conflicting  arguments. ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "'  has  conflicting  arguments. ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( "Invalid  column  ' "  +  ch  + "'  has  conflicting  arguments. ");	  throw    new    IllegalArgumentException(   "Invalid    column    '   ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
221	[BUG]  [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  dummy_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
222	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
223	[BUG]  [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_len)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_len)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
224	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  _tokenIncomplete.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  _tokenIncomplete.toString());  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( " "  +  _tokenIncomplete.toString());	  throw    new    IllegalArgumentException(   "   ".equals(ch));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
225	[BUG]  [BUGGY]  if(ch  ==  INT_len  ||  ch  ==  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_len  ||  ch  ==  INT_9)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_len  ||  ch  ==  INT_9)  {  break  int_loop;  }	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
226	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')  {  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+')  {	  if(ch    ==    '.')    {    	non-compiled	[CE]  <identifier>  expected	34	None	replace
227	[BUG]  [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch!=  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    INT_0)||(ch    >    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
228	[BUG]  [BUGGY]  if(ch  >  INT_9  ||  ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  >  INT_9  ||  ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >  INT_9  ||  ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
229	[BUG]  [BUGGY]  ||  ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
230	[BUG]  [BUGGY]  read  =  _parseInt(ch,  _inputBuffer,  ptr);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  read  =  _parseInt(ch,  _inputBuffer,  ptr);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	read  =  _parseInt(ch,  _inputBuffer,  ptr);	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
231	[BUG]  [BUGGY]  ||  ch  ==  '.')  {  break  dummy_loop;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  ==  '.')  {  break  dummy_loop;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  ==  '.')  {  break  dummy_loop;	  if(ch    ==    '.')    {    if(_tokenIncomplete)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
232	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
233	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  int_len;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  int_len;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')break  int_len;	  if(ch    ==    '.')break    int_len;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
234	[BUG]  [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
235	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  <  INT_0)  {  break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    <    INT_0)    {    if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
236	[BUG]  [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z')||(ch  >=  'a'  &&  ch  <  =  'z'))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z')||(ch  >=  'a'  &&  ch  <  =  'z'))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z')||(ch  >=  'a'  &&  ch  <  =  'z'))  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
237	[BUG]  [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
238	[BUG]  [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  INT_9))  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  INT_9))  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch!=  '.'  &&  ch  <  =  'A'  &&  ch  <  =  'Z'  ||  ch  >  INT_9))  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
239	[BUG]  [BUGGY]  _inputPtr  =  ptr;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _inputPtr  =  ptr;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_inputPtr  =  ptr;	  break    _inputEnd;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
240	[BUG]  [BUGGY]  _throwUnquotedSpace(ch, "was  expecting  a  digit  value ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _throwUnquotedSpace(ch, "was  expecting  a  digit  value ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_throwUnquotedSpace(ch, "was  expecting  a  digit  value ");	  _reportUnexpectedChar(ch,   "was    expecting    a    digit    value   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
241	[BUG]  [BUGGY]  _reportUnexpectedChar(ch,  _tokenIncomplete);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _reportUnexpectedChar(ch,  _tokenIncomplete);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnexpectedChar(ch,  _tokenIncomplete);	  _reportUnexpectedChar(ch,   "was    expecting    a    digit    value   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
242	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop)break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop)break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(break  int_loop)break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    INT_0)break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
243	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  '.')break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_0)  {  if(ch  ==  '.')break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)  {  if(ch  ==  '.')break  dummy_loop;  }	  if(ch    ==    '.')break    dummy_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
244	[BUG]  [BUGGY]  ||(ch  <  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  <  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  <  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }	  ||(ch    ==    INT_0    &&    ch    <    =    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
245	[BUG]  [BUGGY]  allowInt(ch,  INT_0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  allowInt(ch,  INT_0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	allowInt(ch,  INT_0))  {  throw  new  IllegalArgumentException( " ");  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
246	[BUG]  [BUGGY]  aughtException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  aughtException( " ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	aughtException( " ");	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
247	[BUG]  [BUGGY]  allowInt(ch,  _inputBuffer,  _inputPtr,  fractLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  allowInt(ch,  _inputBuffer,  _inputPtr,  fractLen);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	allowInt(ch,  _inputBuffer,  _inputPtr,  fractLen);	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
248	[BUG]  [BUGGY]  allowInt(ch,  _inputBuffer,  _inputPtr);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  allowInt(ch,  _inputBuffer,  _inputPtr);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	allowInt(ch,  _inputBuffer,  _inputPtr);	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
249	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  decodedData;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  decodedData;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  decodedData;  }	  ||    ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
250	[BUG]  [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ptr  >=  _inputEnd)  {  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    for(int    i    =    0,    len    =    _inputBuffer.length;    i    <    len;    ++i)    {    char[]    buf[]    =    _inputBuffer[i];    if(    	non-compiled	[CE]  <identifier>  expected	20	None	replace
251	[BUG]  [BUGGY]  break  dummy_loop  +  11;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  break  dummy_loop  +  11;  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop  +  11;	  break    dummy_loop    +    1;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
252	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  _inputLen;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  _inputLen;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')  {  break  _inputLen;  }	  if(ch    ==    '.'    ||    ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
253	[BUG]  [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >>  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >>  INT_9))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >>  INT_9))  {  break  int_loop;  }	  ||(ch    ==    '.'    &&    ch    <    =    INT_0)||(ch    >=    INT_9))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
254	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  'e')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  'e')  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  'e')  {  break  int_loop;  }	  if(ch    ==    '.'    ||    ch    ==    '+')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
255	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+'  ||  ch  ==  '-')  {  break  int_loop;  }	  if(ch    ==    '.'    ||    ch    ==    '+')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
256	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    INT_0    ||    ch    ==    INT_9)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
257	[BUG]  [BUGGY]  if(ch  ==  '.')break  INT_0;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  INT_0;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  INT_0;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  break    INT_0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
258	[BUG]  [BUGGY]  if(ch  ==  '.')break  INT_0;  if(ch  ==  'n'  ||  ch  ==  't')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  INT_0;  if(ch  ==  'n'  ||  ch  ==  't')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  INT_0;  if(ch  ==  'n'  ||  ch  ==  't')  {  break  dummy_loop;  }	  break    INT_0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
259	[BUG]  [BUGGY]  if(ch  ==  '.')break  INT_0;  if(ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.')break  INT_0;  if(ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  INT_0;  if(ch  ==  ':')  {  break  dummy_loop;  }	  break    INT_0;    	non-compiled	[CE]  <identifier>  expected	35	None	replace
260	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  decodedData;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  decodedData;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')  {  break  decodedData;  }	  if(ch    ==    '.'    ||    ch    ==    ':')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
261	[BUG]  [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    'a'    &&    ch    <    =    'z')||(ch    >=    'A'    &&    ch    <    =    'Z'))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
262	[BUG]  [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch!=  '.'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }	  ||(ch!=    '.'    &&    ch    <    =    'a'    &&    ch    <    =    'z')||(ch    >=    'A'    &&    ch    <    =    'Z'))    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
263	[BUG]  [BUGGY]  if(ch  ==  INT_e  ||  ch  ==  INT_E)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  if(ch  ==  INT_e  ||  ch  ==  INT_E)  {  break  int_loop;  }  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_e  ||  ch  ==  INT_E)  {  break  int_loop;  }	  if(ch    ==    INT_0)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
264	[BUG]  [BUGGY]  parent.report(ch,  INT_0,  fractLen,  INT_9);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  parent.report(ch,  INT_0,  fractLen,  INT_9);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent.report(ch,  INT_0,  fractLen,  INT_9);	  if(ch    ==    '.')    {    if(_inputPtr    >=    _inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
265	[BUG]  [BUGGY]  read  =  _textBuffer.finishCurrentSegment();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  read  =  _textBuffer.finishCurrentSegment();  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	read  =  _textBuffer.finishCurrentSegment();	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
266	[BUG]  [BUGGY]  aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  dummy_loop);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  dummy_loop);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  dummy_loop);	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
267	[BUG]  [BUGGY]  aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  fractLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  fractLen);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  fractLen);	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
268	[BUG]  [BUGGY]  aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  inputEnd);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  inputEnd);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	aughtExceptionHandler(ch,  _inputBuffer,  _inputPtr,  inputEnd);	  if(ch    ==    '.')    {    if(_inputPtr    >=    inputEnd)    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
269	[BUG]  [BUGGY]  _parseAndIgnoreWhitespace(ch);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _parseAndIgnoreWhitespace(ch);  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_parseAndIgnoreWhitespace(ch);	  _parseNumber(ch);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
270	[BUG]  [BUGGY]  _reportUnexpectedChar(ch, "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {      [BUGGY]  _reportUnexpectedChar(ch, "was  expecting  a  string  value ");  [BUGGY]      }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnexpectedChar(ch, "was  expecting  a  string  value ");	  _parseNumber(ch);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
