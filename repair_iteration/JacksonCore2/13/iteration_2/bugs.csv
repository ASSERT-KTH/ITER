bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }	  if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
2	[BUG]  [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  INT_0  &&  ch  <  =  INT_9))  {  break  int_loop;  }	  if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
3	[BUG]  [BUGGY]  if(ch  ==  INT_0)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  INT_0)  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)  {  break  int_loop;  }	  if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
4	[BUG]  [BUGGY]  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
5	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
8	[BUG]  [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch!=  '.'  &&  ch  <  =  INT_0)||(ch  >  INT_9))  {  break  int_loop;  }	  if(ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
9	[BUG]  [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  ==  '.'  &&  ch  <  =  INT_0)||(ch  >=  INT_9))  {  break  int_loop;  }	  if(ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
10	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  break  dummy_loop  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  break  dummy_loop  +  1;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop  +  1;	  break    dummy_loop;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
13	[BUG]  [BUGGY]  break  dummy_loop.intValue;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  break  dummy_loop.intValue;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop.intValue;	  break    dummy_loop;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
14	[BUG]  [BUGGY]  break  dummy_loop.intValue();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  break  dummy_loop.intValue();  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  dummy_loop.intValue();	  break    dummy_loop;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
15	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0)break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  throw  new  IllegalArgumentException( " ");  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
19	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
20	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  if(  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  if(  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  if(	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0  ||  ch  >  INT_9)  {  for(int  i  =  0,  len  =  _inputBuffer.length;  i  <  len;  ++i)  {  char[]  buf[]  =  _inputBuffer[i];	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  intLen;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;	  if(ch    ==    '.')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_len;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  int_len;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_len;	  if(ch    ==    '.')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  if(ch  ==  '[')break  int_loop;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '[')break  int_loop;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '[')break  int_loop;	  if(ch    ==    '.')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
26	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(ch));  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  throw  new  IllegalArgumentException( " ".equals(ch));  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( " ".equals(ch));	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalStateException( " ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
28	[BUG]  [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch  <  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
29	[BUG]  [BUGGY]  ||(ch  <  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||(ch  <  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch  <  INT_0  &&  ch  <  INT_9))  {  break  int_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
30	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')  {  break  int_loop;  }	  if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;  if(ch  <  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
32	[BUG]  [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  intLen;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
33	[BUG]  [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  =  INT_0  ||  ch  >  INT_9)  {  break  int_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
34	[BUG]  [BUGGY]  if(ch  ==  '.')  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')  {  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
35	[BUG]  [BUGGY]  break  INT_0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  break  INT_0;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  INT_0;	  break    dummy_loop;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
36	[BUG]  [BUGGY]  break  _inputEnd;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  break  _inputEnd;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	break  _inputEnd;	  break    dummy_loop;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
37	[BUG]  [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  <  INT_0)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  <  INT_0)  {  if(ch  ==  '.')break  int_loop;  if(ch  ==  'n'  ||  ch  ==  'r')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  _parseNumber(ch);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  _parseNumber(ch);  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_parseNumber(ch);	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnsupportedOperation();	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  _reportUnexpectedChar(ch, "was  expecting  a  digit  value ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  _reportUnexpectedChar(ch, "was  expecting  a  digit  value ");  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	_reportUnexpectedChar(ch, "was  expecting  a  digit  value ");	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  parent!=  if(ch  ==  '.')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  parent!=  if(ch  ==  '.')  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	parent!=  if(ch  ==  '.')  {  break  int_loop;  }	  if(ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  int_loop  +  1;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop  +  1;	  if(ch    ==    '.')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  dummy_loop;  if(ch  ==  ':')  {  break  dummy_loop;  }	  break    dummy_loop;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
44	[BUG]  [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  dummy_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  dummy_loop;  if(ch  ==  '.')  {  break  dummy_loop;  }	  break    dummy_loop;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
45	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  inputEnd)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  inputEnd)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {  if(_inputPtr  >=  inputEnd)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
46	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {  if(_inputPtr  >=  _inputEnd)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
47	[BUG]  [BUGGY]  if(ch  ==  '.')  {  if(_tokenIncomplete)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')  {  if(_tokenIncomplete)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')  {  if(_tokenIncomplete)  {  break  dummy_loop;  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
48	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  throw  new  IllegalArgumentException( "Invalid  column  ' ");  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	throw  new  IllegalArgumentException( "Invalid  column  ' ");	  throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+')  {  break  int_loop;  }	  if(ch    ==    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    '.')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
51	[BUG]  [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.')break  int_loop;  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    'n'    ||    ch    ==    'r')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
52	[BUG]  [BUGGY]  if(ch!=  '.')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch!=  '.')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch!=  '.')  {  break  dummy_loop;  }	  if(ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
53	[BUG]  [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||(ch!=  '.'  &&  ch  <  =  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||(ch!=  '.'  &&  ch  <  =  'a'  &&  ch  <  =  'z')||(ch  >=  'A'  &&  ch  <  =  'Z'))  {  break  int_loop;  }	  if(ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
54	[BUG]  [BUGGY]  ||  ch!=  '.')  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  ||  ch!=  '.')  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	||  ch!=  '.')  {  break  int_loop;  }	  if(ch!=    '.')    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  int_loop;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')break  int_loop;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')break  int_loop;	  if(ch    ==    '.')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
56	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  int_loop;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '-')break  int_loop;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '-')break  int_loop;	  if(ch    ==    '.')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
57	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  int_loop;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.'  ||  ch  ==  '+')break  int_loop;  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  '+')break  int_loop;	  if(ch    ==    '.')break    int_loop;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
58	[BUG]  [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  dummy_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  '.'  ||  ch  ==  ':')  {  break  dummy_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  '.'  ||  ch  ==  ':')  {  break  dummy_loop;  }	  if(ch    ==    '.')break    int_loop;    if(ch    ==    ':')    {    break    dummy_loop;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
59	[BUG]  [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  ==  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
60	[BUG]  [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      int_loop:  while  (true)  {  if  (ptr  >=  _inputEnd)  {  break  dummy_loop;  }  ch  =  (int)  _inputBuffer[ptr++];  if  (ch  <  INT_0  ||  ch  >  INT_9)  {    [BUGGY]  if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }  [BUGGY]    }  ++intLen;  }  int  fractLen  =  0;  if  (ch  ==  '.')  {  //  yes,  fraction  fract_loop:  while  (true)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  ch  [VARIABLES]  boolean  _tokenIncomplete  inObject  negative  Reader  _reader  r  int[]  _icLatin1  _icWS  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  _hashSeed  bits  ch  count  decodedData  defaultValue  expLen  features  fractLen  i  inputLen  intLen  len  nameLen  origPtr  outputCount  outputEnd  outputPtr  ptr  startPtr  char[]  _inputBuffer  buf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.7071067811865475	897	897	2	replace	if(ch  >=  INT_0  ||  ch  ==  INT_9)  {  break  int_loop;  }	  if(ch    <    INT_0    ||    ch    >    INT_9)    {    break    int_loop;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
