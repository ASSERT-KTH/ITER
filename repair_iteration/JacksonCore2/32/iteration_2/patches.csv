bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(end  <  =  intLen)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  =  intLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  =  intLen)  {	  if(end    <    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2	[BUG]  [BUGGY]  if(end  >=  0  ||  end  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >=  0  ||  end  <  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >=  0  ||  end  <  _inputEnd)  {	  if(end    >    0    ||    end    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  if(end  >  0  &&  end  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >  0  &&  end  <  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >  0  &&  end  <  _inputEnd)  {	  if(end    >    0    ||    end    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  if(end  ==  0  ||  end  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  ==  0  ||  end  <  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  ==  0  ||  end  <  _inputEnd)  {	  if(end    >    0    ||    end    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
5	[BUG]  [BUGGY]  Integer  ptr  =  _inputStream.readInt(outPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputStream.readInt(outPtr);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputStream.readInt(outPtr);	  Integer    ptr    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  Integer  ptr  =  _inputStream.readInt(outBuf);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputStream.readInt(outBuf);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputStream.readInt(outBuf);	  Integer    ptr    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  Integer  ptr  =  _inputStream.readInt(outBuf,  0,  end);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputStream.readInt(outBuf,  0,  end);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputStream.readInt(outBuf,  0,  end);	  Integer    ptr    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
8	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  +  1)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  +  1)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  _inputEnd  +  1)  {	  if(end    <    0    ||    end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  _inputPtr)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  _inputPtr)  {	  if(end    <    0    ||    end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
10	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  _inputEnd  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(end    <    0    ||    end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
11	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  c);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  c);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  c);	  int[]    outBuf    =    _inputBuffer.getChars(outPtr,    end);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  0);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  0);	  int[]    outBuf    =    _inputBuffer.getChars(outPtr,    end);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  outBuf.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  outBuf.length);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.getChars(outPtr,  outBuf.length);	  int[]    outBuf    =    _inputBuffer.getChars(outPtr,    end);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  _inputEnd);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  _inputEnd);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  _inputEnd);	  int[]    outBuf    =    _inputBuffer.getChars(outPtr,    end);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  if(c  <  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  <  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  <  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
16	[BUG]  [BUGGY]  if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
17	[BUG]  [BUGGY]  if(c  <  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  <  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  <  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
18	[BUG]  [BUGGY]  if(end  ==  0)  {  if(c  ==  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  ==  0)  {  if(c  ==  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  ==  0)  {  if(c  ==  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;	  if(c    ==    INT_0)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
21	[BUG]  [BUGGY]  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  _textBuffer.finishCurrentSegment();  outPtr  =  0;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	_textBuffer.finishCurrentSegment();  outPtr  =  0;	  if(c    ==    INT_0)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
22	[BUG]  [BUGGY]  if(c  <  INT_0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  <  INT_0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  <  INT_0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    INT_0)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
23	[BUG]  [BUGGY]  if(end  <  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  _inputPtr)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  _inputPtr)  {	  if(end    <    =    _inputPtr)    {    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
24	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.toCharArray(outPtr);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.toCharArray(outPtr);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.toCharArray(outPtr);	  int[]    outBuf    =    _inputBuffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
25	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.toCharArray(end);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.toCharArray(end);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.toCharArray(end);	  int[]    outBuf    =    _inputBuffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
26	[BUG]  [BUGGY]  if(end  >=  _inputLen)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >=  _inputLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >=  _inputLen)  {	  if(end    >    _inputLen)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
27	[BUG]  [BUGGY]  if(end  ==  _inputLen)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  ==  _inputLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  ==  _inputLen)  {	  if(end    >    _inputLen)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
28	[BUG]  [BUGGY]  int[]  outBuf  =  _parseInt(outBuf,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _parseInt(outBuf,  outPtr,  intLen);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _parseInt(outBuf,  outPtr,  intLen);	  int[]    outBuf    =    _parseInt(outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
29	[BUG]  [BUGGY]  int[]  outBuf  =  _parseInt(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _parseInt(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _parseInt(outBuf,  outPtr,  negative,  intLen);	  int[]    outBuf    =    _parseInt(outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
30	[BUG]  [BUGGY]  int[]  outBuf  =  _parseInt(negative,  outPtr,  intLen);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _parseInt(negative,  outPtr,  intLen);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _parseInt(negative,  outPtr,  intLen);	  int[]    outBuf    =    _parseInt(outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
31	[BUG]  [BUGGY]  int[]  outBuf  =  _parseInt(outBuf,  outPtr,  end,  intLen);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _parseInt(outBuf,  outPtr,  end,  intLen);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _parseInt(outBuf,  outPtr,  end,  intLen);	  int[]    outBuf    =    _parseInt(outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
32	[BUG]  [BUGGY]  if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
33	[BUG]  [BUGGY]  if(c  <  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  <  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  <  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  int  len  =  outBuf.length  +  _inputPtr;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int  len  =  outBuf.length  +  _inputPtr;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int  len  =  outBuf.length  +  _inputPtr;	  int    len    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
35	[BUG]  [BUGGY]  int  len  =  _inputPtr  +  outBuf.length  -  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int  len  =  _inputPtr  +  outBuf.length  -  1;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int  len  =  _inputPtr  +  outBuf.length  -  1;	  int    len    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
36	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int  len  =  _inputBuffer.length  +  outBuf.length;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int  len  =  _inputBuffer.length  +  outBuf.length;	  int    len    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
37	[BUG]  [BUGGY]  if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  <  =  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  positive,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
39	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[outPtr++]  &  0xFF;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputBuffer[outPtr++]  &  0xFF;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputBuffer[outPtr++]  &  0xFF;	  Integer    ptr    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
40	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputBuffer[_inputPtr++];  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputBuffer[_inputPtr++];	  Integer    ptr    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
41	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[outPtr++]  &  0xff;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputBuffer[outPtr++]  &  0xff;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputBuffer[outPtr++]  &  0xff;	  Integer    ptr    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
42	[BUG]  [BUGGY]  if(end  <  0  ||  end  <  =  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  <  =  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  <  =  _inputEnd)  {	  if(end    >    0    ||    end    <    =    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
43	[BUG]  [BUGGY]  if(end  >=  0  ||  end  <  =  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >=  0  ||  end  <  =  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >=  0  ||  end  <  =  _inputEnd)  {	  if(end    >    0    ||    end    <    =    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
44	[BUG]  [BUGGY]  if(end  ==  0  ||  end  <  =  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  ==  0  ||  end  <  =  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  ==  0  ||  end  <  =  _inputEnd)  {	  if(end    >    0    ||    end    <    =    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
45	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  outBuf.length  -  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  outBuf.length  -  1)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  outBuf.length  -  1)  {	  if(end    <    0    ||    end    >    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
46	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  outBuf.length  -  intLen)  {  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  outBuf.length  -  intLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  outBuf.length  -  intLen)  {	  if(end    <    0    ||    end    >    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
47	[BUG]  [BUGGY]  if(end  >=  _inputPtr)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >=  _inputPtr)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >=  _inputPtr)  {	  if(_inputPtr    >=    end)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
48	[BUG]  [BUGGY]  if(end!=  0)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end!=  0)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end!=  0)  {	  if(end    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
49	[BUG]  [BUGGY]  if(end  >  0  ||  end  <  intLen)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >  0  ||  end  <  intLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >  0  ||  end  <  intLen)  {	  if(end    >    0    ||    end    <    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
50	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  outBuf.length  +  intLen)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  outBuf.length  +  intLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  outBuf.length  +  intLen)  {	  if(end    <    0    ||    end    >    outBuf.length)    {    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
51	[BUG]  [BUGGY]  if(end  <  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
52	[BUG]  [BUGGY]  if(end  ==  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  ==  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  ==  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
53	[BUG]  [BUGGY]  if(end  >=  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >=  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >=  0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
54	[BUG]  [BUGGY]  char[]  outBuf  =  _parseInt(outBuf,  outPtr,  negative,  intLen);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  char[]  outBuf  =  _parseInt(outBuf,  outPtr,  negative,  intLen);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	char[]  outBuf  =  _parseInt(outBuf,  outPtr,  negative,  intLen);	  int[]    outBuf    =    _parseInt(outPtr,    negative,    intLen);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
55	[BUG]  [BUGGY]  if(end  >  intLen)  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >  intLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >  intLen)  {	  if(end    <    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
56	[BUG]  [BUGGY]  Integer  ptr  =  _inputBuffer[outPtr++]  &  0xF;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputBuffer[outPtr++]  &  0xF;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputBuffer[outPtr++]  &  0xF;	  Integer    ptr    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  Integer  ptr  =  outBuf[outPtr++];  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  outBuf[outPtr++];  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  outBuf[outPtr++];	  Integer    ptr    =    _inputBuffer[outPtr++];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
58	[BUG]  [BUGGY]  if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
59	[BUG]  [BUGGY]  if(end  <  0)  {  if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0)  {  if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0)  {  if(c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
60	[BUG]  [BUGGY]  if(end  >=  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >=  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >=  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
61	[BUG]  [BUGGY]  if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
62	[BUG]  [BUGGY]  if(end  >  0  &&  end  <  =  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >  0  &&  end  <  =  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >  0  &&  end  <  =  _inputEnd)  {	  if(end    >    0    ||    end    <    =    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
63	[BUG]  [BUGGY]  if(end  <  0  ||  end  <  _inputEnd)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  <  _inputEnd)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  <  _inputEnd)  {	  if(end    >    0    ||    end    <    =    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
64	[BUG]  [BUGGY]  int  len  =  _inputBuffer[outPtr]  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int  len  =  _inputBuffer[outPtr]  +  outBuf.length;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int  len  =  _inputBuffer[outPtr]  +  outBuf.length;	  int    len    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
65	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  +  intLen)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  +  intLen)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  _inputEnd  +  intLen)  {	  if(end    <    0    ||    end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
66	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  -  1)  {  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  -  1)  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  _inputEnd  -  1)  {	  if(end    <    0    ||    end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
67	[BUG]  [BUGGY]  Integer  ptr  =  _inputStream.readInt(outBuf,  outPtr);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputStream.readInt(outBuf,  outPtr);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputStream.readInt(outBuf,  outPtr);	  Integer    ptr    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
68	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  intLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  intLen);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.getChars(outPtr,  end,  intLen);	  int[]    outBuf    =    _inputBuffer.getChars(outPtr,    end);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  outBuf,  end);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr,  outBuf,  end);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.getChars(outPtr,  outBuf,  end);	  int[]    outBuf    =    _inputBuffer.getChars(outPtr,    end);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr  +  1,  end);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputBuffer.getChars(outPtr  +  1,  end);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputBuffer.getChars(outPtr  +  1,  end);	  int[]    outBuf    =    _inputBuffer.getChars(outPtr,    end);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  if(end  <  0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    INT_0)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
72	[BUG]  [BUGGY]  if(end  ==  0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  ==  0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  ==  0)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    INT_0)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
73	[BUG]  [BUGGY]  if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
74	[BUG]  [BUGGY]  if(end  >=  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  >=  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  >=  0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
75	[BUG]  [BUGGY]  int[]  outBuf  =  _inputStream.toCharArray();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int[]  outBuf  =  _inputStream.toCharArray();  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int[]  outBuf  =  _inputStream.toCharArray();	  int[]    outBuf    =    _inputBuffer.toCharArray();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
76	[BUG]  [BUGGY]  if(outPtr  >=  end)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(outPtr  >=  end)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(outPtr  >=  end)  {  outBuf  =  _textBuffer.finishCurrentSegment();  outPtr  =  0;  }	  if(c    ==    INT_0)    {    outBuf    =    _textBuffer.finishCurrentSegment();    outPtr    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
77	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_0)  {  if(outPtr  >=  outBuf.length)  {  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
80	[BUG]  [BUGGY]  if(end  <  intLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  intLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  intLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(end    <    intLen)    {    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
81	[BUG]  [BUGGY]  if(c  ==  INT_0  ||  c  ==  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_0  ||  c  ==  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_0  ||  c  ==  INT_0)  {  outBuf[outPtr++]  =  negative;  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
82	[BUG]  [BUGGY]  if(c  ==  INT_0)  {  outBuf[outPtr++]  =  _inputBuffer[outPtr++];  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_0)  {  outBuf[outPtr++]  =  _inputBuffer[outPtr++];  return  _parserNumber2(outBuf,  outPtr,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_0)  {  outBuf[outPtr++]  =  _inputBuffer[outPtr++];  return  _parserNumber2(outBuf,  outPtr,  intLen);  }	  if(c    ==    INT_0)    {    outBuf[outPtr++]    =    negative;    return    _parserNumber2(outBuf,    outPtr,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
83	[BUG]  [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  &&!loadMore())  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  0  ||  end  >  _inputEnd  &&!loadMore())  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  0  ||  end  >  _inputEnd  &&!loadMore())  {	  if(end    <    0    ||    end    >    _inputEnd)    {    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
84	[BUG]  [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_QUOTE)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
85	[BUG]  [BUGGY]  if(c  ==  INT_0  ||  c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_0  ||  c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_0  ||  c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber1(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber1(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
86	[BUG]  [BUGGY]  int  len  =  _inputBuffer.length  +  outPtr;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int  len  =  _inputBuffer.length  +  outPtr;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int  len  =  _inputBuffer.length  +  outPtr;	  int    len    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
87	[BUG]  [BUGGY]  int  len  =  _inputEnd  +  outBuf.length;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int  len  =  _inputEnd  +  outBuf.length;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int  len  =  _inputEnd  +  outBuf.length;	  int    len    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
88	[BUG]  [BUGGY]  int  len  =  _inputPtr  +  end;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  int  len  =  _inputPtr  +  end;  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	int  len  =  _inputPtr  +  end;	  int    len    =    _inputPtr    +    outBuf.length;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
89	[BUG]  [BUGGY]  if(end  <  =  _inputLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  =  _inputLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  =  _inputLen  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(end    <    =    _inputLen)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
90	[BUG]  [BUGGY]  if(end  <  =  _inputLen  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(end  <  =  _inputLen  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(end  <  =  _inputLen  &&!isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(end    <    =    _inputLen)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
91	[BUG]  [BUGGY]  Integer  ptr  =  _inputStream.readInt(0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  Integer  ptr  =  _inputStream.readInt(0);  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	Integer  ptr  =  _inputStream.readInt(0);	  Integer    ptr    =    _inputStream.readInt();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
92	[BUG]  [BUGGY]  if(c  ==  INT_0  ||  c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      if  (c  ==  INT_0)  {  c  =  _verifyNoLeadingZeroes();  }  outBuf[outPtr++]  =  (char)  c;  int  intLen  =  1;  int  end  =  _inputPtr  +  outBuf.length;      [BUGGY]  if(c  ==  INT_0  ||  c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  [BUGGY]      end  =  _inputEnd;  }  while  (true)  {  if  (_inputPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }  c  =  (int)  _inputBuffer[_inputPtr++]  &  0xFF;  [CLASS]  UTF8StreamJsonParser  [METHOD]  _parseNumber  [RETURN_TYPE]  JsonToken  int  c  [VARIABLES]  byte[]  _inputBuffer  b  buf  buffer  inputBuffer  nameBytes  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  match  negative  byte  BYTE_LF  InputStream  _inputStream  in  BytesToNameCanonicalizer  _symbols  sym  int[]  _icLatin1  _icUTF8  _icWS  _quadBuffer  ObjectCodec  _objectCodec  c  codec  int  _quad1  amount  bits  c  ch  count  decodedData  defaultValue  end  features  i  intLen  len  minAvailable  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  char[]  outBuf  	projects/JacksonCore2/src/main/java/com/fasterxml/jackson/core/json/UTF8StreamJsonParser.java	0.7071067811865475	1216	1216	2	replace	if(c  ==  INT_0  ||  c  ==  INT_0)  {  if(outPtr  >=  end)  {  return  _parserNumber2(outBuf,  outPtr,  negative,  intLen);  }	  if(c    ==    INT_0)    {    if(outPtr    >=    end)    {    return    _parserNumber2(outBuf,    outPtr,    negative,    intLen);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
